!function(){function e(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function n(n){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?e(Object(i),!0).forEach((function(e){r(n,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):e(Object(i)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(i,e))}))}return n}function r(e,n,r){return(n=function(e){var n=function(e,n){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var t=r.call(e,n||"default");if("object"!=typeof t)return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"==typeof n?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}System.register(["./jsx-runtime-legacy-57aaa4c0.js","./index-legacy-612e7deb.js","./VList-legacy-957adac3.js","./index-legacy-360d6611.js"],(function(e,r){"use strict";var t,i,o,l;return{setters:[e=>{t=e.j,i=e.a},e=>{o=e.r},e=>{l=e.V},null],execute:function(){var r,d,s,c,a,u,h,v,p,f,g,m,y,b,x,k,S,w,L,C,j,O,A,T;e("default",{component:l});const R=e=>{const n=[20,40,80,77];return Array.from({length:e}).map(((e,r)=>t("div",{style:{height:n[r%4],borderBottom:"solid 1px #ccc",background:"#fff"},children:r},r)))},V=e("Default",{render:()=>t(l,{style:{height:"100vh"},children:R(1e3)})}),I=e=>Array.from({length:e}).map(((e,n)=>i("div",{style:{width:n%3==0?100:60,borderRight:"solid 1px #ccc",background:"#fff"},children:["Column ",n]},n))),B=e("Horizontal",{render:()=>i("div",{children:[i("div",{style:{padding:10,direction:"ltr"},children:[t("div",{children:"ltr"}),t(l,{style:{width:"100%",height:200},horizontal:!0,children:I(1e3)})]}),i("div",{style:{padding:10,direction:"rtl"},children:[t("div",{children:"rtl"}),t(l,{style:{width:"100%",height:200},horizontal:!0,rtl:!0,children:I(1e3)})]})]})}),E=e("PaddingAndMargin",{render:()=>t(l,{style:{width:400,height:400,padding:"80px 20px",background:"lightgray"},children:Array.from({length:1e3}).map(((e,n)=>t("div",{style:{height:100,borderRadius:8,margin:10,padding:10,background:"white"},children:n},n)))})}),H=e("Sticky",{render:()=>t(l,{style:{height:"100vh"},itemSize:570,children:Array.from({length:100}).map(((e,r)=>t("div",{style:{borderBottom:"solid 1px #ccc"},children:Array.from({length:10}).map(((e,i)=>{const o=0===i;return t("div",{style:n({height:60,background:"#fff"},o&&{top:0,height:30,position:"sticky",borderBottom:"solid 1px #ccc"}),children:o?r:`${r} - ${i}`},i)}))},r)))})}),P=e("ScrollTo",{render:()=>{const[e,n]=o.useState(567),[r,d]=o.useState(1e3),s=o.useRef(null);return i("div",{style:{height:"100vh",display:"flex",flexDirection:"column"},children:[i("div",{children:[t("input",{type:"number",value:e,onChange:e=>{n(Number(e.target.value))}}),t("button",{onClick:()=>{var n;null===(n=s.current)||void 0===n||n.scrollToIndex(e)},children:"scroll to index"}),t("button",{onClick:()=>{n(Math.round(1e3*Math.random()))},children:"randomize"})]}),t("div",{children:i("div",{children:[t("input",{type:"number",value:r,onChange:e=>{d(Number(e.target.value))}}),t("button",{onClick:()=>{var e;null===(e=s.current)||void 0===e||e.scrollTo(r)},children:"scroll to offset"}),t("button",{onClick:()=>{var e;null===(e=s.current)||void 0===e||e.scrollBy(r)},children:"scroll by offset"})]})}),t(l,{ref:s,style:{flex:1},children:R(1e3)})]})}}),D=e("WithState",{render:()=>{const[e,r]=o.useState({0:!0,3:!0,6:!0,9:!0,12:!0});return t(l,{style:{height:"100vh"},children:Array.from({length:1e3}).map(((o,l)=>{const d=!!e[l];return i("div",{style:{borderBottom:"solid 1px #ccc",background:d?"lightpink":"#fff",display:"flex",flexDirection:"row",transition:"0.5s ease"},children:[t("div",{children:t("button",{style:{height:"100%"},onClick:()=>{r((e=>n(n({},e),{},{[l]:!e[l]})))},children:d?"close":"open"})}),t("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",flex:1,height:d?200:40,transition:"0.5s ease"},children:l})]},l)}))})}}),N=e("IncreasingItems",{render:()=>{const e=(e,n)=>Array.from({length:e}).map(((e,r)=>r+=n)),[n,r]=o.useState(!1),[d,s]=o.useState((()=>e(4,0)));o.useEffect((()=>{const r=setInterval((()=>{s((r=>n?[...e(4,r[0]-4),...r]:[...r,...e(4,r[r.length-1]+1)]))}),500);return()=>{clearInterval(r)}}));const c=[20,40,80,77];return i("div",{style:{height:"100vh",display:"flex",flexDirection:"column"},children:[i("div",{children:[i("label",{style:{marginRight:4},children:[t("input",{type:"radio",style:{marginLeft:4},checked:!n,onChange:()=>{r(!1)}}),"append"]}),i("label",{style:{marginRight:4},children:[t("input",{type:"radio",style:{marginLeft:4},checked:n,onChange:()=>{r(!0)}}),"prepend"]})]}),t(l,{style:{flex:1},children:d.map(((e,n)=>t("div",{style:{height:c[n%4],borderBottom:"solid 1px #ccc",background:"#fff"},children:e},e)))})]})}}),_=o.forwardRef((({children:e,attrs:r,scrollSize:i},o)=>t("div",n(n({ref:o},r),{},{children:t("ul",{style:{position:"relative",height:i,margin:0},children:e})})))),z=o.forwardRef((({children:e,style:r},i)=>t("li",{ref:i,style:n(n({},r),{},{marginLeft:30}),children:e}))),G=e("Ul",{render:()=>i("div",{style:{width:400,height:400,border:"solid 1px darkgray",borderRadius:8,background:"lightgray",display:"flex",flexDirection:"column",overflow:"hidden"},children:[t("div",{style:{padding:4},children:"header"}),t(l,{style:{flex:1,background:"#fff"},element:_,itemElement:z,overscan:20,children:Array.from({length:1e3}).map(((e,n)=>n))})]})});V.parameters=n(n({},V.parameters),{},{docs:n(n({},null===(r=V.parameters)||void 0===r?void 0:r.docs),{},{source:n({originalSource:'{\n  render: () => {\n    return <VList style={{\n      height: "100vh"\n    }}>{createRows(1000)}</VList>;\n  }\n}'},null===(d=V.parameters)||void 0===d||null===(s=d.docs)||void 0===s?void 0:s.source)})}),B.parameters=n(n({},B.parameters),{},{docs:n(n({},null===(c=B.parameters)||void 0===c?void 0:c.docs),{},{source:n({originalSource:'{\n  render: () => {\n    return <div>\n        <div style={{\n        padding: 10,\n        direction: "ltr"\n      }}>\n          <div>ltr</div>\n          <VList style={{\n          width: "100%",\n          height: 200\n        }} horizontal>\n            {createColumns(1000)}\n          </VList>\n        </div>\n        <div style={{\n        padding: 10,\n        direction: "rtl"\n      }}>\n          <div>rtl</div>\n          <VList style={{\n          width: "100%",\n          height: 200\n        }} horizontal rtl>\n            {createColumns(1000)}\n          </VList>\n        </div>\n      </div>;\n  }\n}'},null===(a=B.parameters)||void 0===a||null===(u=a.docs)||void 0===u?void 0:u.source)})}),E.parameters=n(n({},E.parameters),{},{docs:n(n({},null===(h=E.parameters)||void 0===h?void 0:h.docs),{},{source:n({originalSource:'{\n  render: () => {\n    return <VList style={{\n      width: 400,\n      height: 400,\n      padding: "80px 20px",\n      background: "lightgray"\n    }}>\n        {Array.from({\n        length: 1000\n      }).map((_, i) => {\n        return <div key={i} style={{\n          height: 100,\n          borderRadius: 8,\n          margin: 10,\n          padding: 10,\n          background: "white"\n        }}>\n              {i}\n            </div>;\n      })}\n      </VList>;\n  }\n}'},null===(v=E.parameters)||void 0===v||null===(p=v.docs)||void 0===p?void 0:p.source)})}),H.parameters=n(n({},H.parameters),{},{docs:n(n({},null===(f=H.parameters)||void 0===f?void 0:f.docs),{},{source:n({originalSource:'{\n  render: () => {\n    return <VList style={{\n      height: "100vh"\n    }} itemSize={570}>\n        {Array.from({\n        length: 100\n      }).map((_, i) => {\n        return <div key={i} style={{\n          borderBottom: "solid 1px #ccc"\n        }}>\n              {Array.from({\n            length: 10\n          }).map((_, j) => {\n            const isGroupTop = j === 0;\n            return <div key={j} style={{\n              height: 60,\n              background: "#fff",\n              ...(isGroupTop && {\n                top: 0,\n                height: 30,\n                position: "sticky",\n                borderBottom: "solid 1px #ccc"\n              })\n            }}>\n                    {isGroupTop ? i : `${i} - ${j}`}\n                  </div>;\n          })}\n            </div>;\n      })}\n      </VList>;\n  }\n}'},null===(g=H.parameters)||void 0===g||null===(m=g.docs)||void 0===m?void 0:m.source)})}),P.parameters=n(n({},P.parameters),{},{docs:n(n({},null===(y=P.parameters)||void 0===y?void 0:y.docs),{},{source:n({originalSource:'{\n  render: () => {\n    const LENGTH = 1000;\n    const [scrollIndex, setScrollIndex] = useState(567);\n    const [scrollOffset, setScrollOffset] = useState(1000);\n    const ref = useRef<VListHandle>(null);\n    return <div style={{\n      height: "100vh",\n      display: "flex",\n      flexDirection: "column"\n    }}>\n        <div>\n          <input type="number" value={scrollIndex} onChange={e => {\n          setScrollIndex(Number(e.target.value));\n        }} />\n          <button onClick={() => {\n          ref.current?.scrollToIndex(scrollIndex);\n        }}>\n            scroll to index\n          </button>\n          <button onClick={() => {\n          setScrollIndex(Math.round(LENGTH * Math.random()));\n        }}>\n            randomize\n          </button>\n        </div>\n        <div>\n          <div>\n            <input type="number" value={scrollOffset} onChange={e => {\n            setScrollOffset(Number(e.target.value));\n          }} />\n            <button onClick={() => {\n            ref.current?.scrollTo(scrollOffset);\n          }}>\n              scroll to offset\n            </button>\n            <button onClick={() => {\n            ref.current?.scrollBy(scrollOffset);\n          }}>\n              scroll by offset\n            </button>\n          </div>\n        </div>\n        <VList ref={ref} style={{\n        flex: 1\n      }}>\n          {createRows(LENGTH)}\n        </VList>\n      </div>;\n  }\n}'},null===(b=P.parameters)||void 0===b||null===(x=b.docs)||void 0===x?void 0:x.source)})}),D.parameters=n(n({},D.parameters),{},{docs:n(n({},null===(k=D.parameters)||void 0===k?void 0:k.docs),{},{source:n({originalSource:'{\n  render: () => {\n    const [actives, setActives] = useState<{\n      [key: number]: boolean;\n    }>({\n      0: true,\n      3: true,\n      6: true,\n      9: true,\n      12: true\n    });\n    return <VList style={{\n      height: "100vh"\n    }}>\n        {Array.from({\n        length: 1000\n      }).map((_, i) => {\n        const active = !!actives[i];\n        return <div key={i} style={{\n          borderBottom: "solid 1px #ccc",\n          background: active ? "lightpink" : "#fff",\n          display: "flex",\n          flexDirection: "row",\n          transition: "0.5s ease"\n        }}>\n              <div>\n                <button style={{\n              height: "100%"\n            }} onClick={() => {\n              setActives(prev => ({\n                ...prev,\n                [i]: !prev[i]\n              }));\n            }}>\n                  {active ? "close" : "open"}\n                </button>\n              </div>\n              <div style={{\n            display: "flex",\n            justifyContent: "center",\n            alignItems: "center",\n            flex: 1,\n            height: active ? 200 : 40,\n            transition: "0.5s ease"\n          }}>\n                {i}\n              </div>\n            </div>;\n      })}\n      </VList>;\n  }\n}'},null===(S=D.parameters)||void 0===S||null===(w=S.docs)||void 0===w?void 0:w.source)})}),N.parameters=n(n({},N.parameters),{},{docs:n(n({},null===(L=N.parameters)||void 0===L?void 0:L.docs),{},{source:n({originalSource:'{\n  render: () => {\n    const BATCH_LENGTH = 4;\n    const createRows = (num: number, offset: number) => {\n      return Array.from({\n        length: num\n      }).map((_, i) => {\n        i += offset;\n        return i;\n      });\n    };\n    const [prepend, setPrepend] = useState(false);\n    const [rows, setRows] = useState(() => createRows(BATCH_LENGTH, 0));\n    useEffect(() => {\n      const timer = setInterval(() => {\n        setRows(prev => prepend ? [...createRows(BATCH_LENGTH, prev[0] - BATCH_LENGTH), ...prev] : [...prev, ...createRows(BATCH_LENGTH, prev[prev.length - 1]! + 1)]);\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    });\n    const heights = [20, 40, 80, 77];\n    return <div style={{\n      height: "100vh",\n      display: "flex",\n      flexDirection: "column"\n    }}>\n        <div>\n          <label style={{\n          marginRight: 4\n        }}>\n            <input type="radio" style={{\n            marginLeft: 4\n          }} checked={!prepend} onChange={() => {\n            setPrepend(false);\n          }} />\n            append\n          </label>\n          <label style={{\n          marginRight: 4\n        }}>\n            <input type="radio" style={{\n            marginLeft: 4\n          }} checked={prepend} onChange={() => {\n            setPrepend(true);\n          }} />\n            prepend\n          </label>\n        </div>\n        <VList style={{\n        flex: 1\n      }}>\n          {rows.map((d, i) => <div key={d} style={{\n          height: heights[i % 4],\n          borderBottom: "solid 1px #ccc",\n          background: "#fff"\n        }}>\n              {d}\n            </div>)}\n        </VList>\n      </div>;\n  }\n}'},null===(C=N.parameters)||void 0===C||null===(j=C.docs)||void 0===j?void 0:j.source)})}),G.parameters=n(n({},G.parameters),{},{docs:n(n({},null===(O=G.parameters)||void 0===O?void 0:O.docs),{},{source:n({originalSource:'{\n  render: () => {\n    return <div style={{\n      width: 400,\n      height: 400,\n      border: "solid 1px darkgray",\n      borderRadius: 8,\n      background: "lightgray",\n      display: "flex",\n      flexDirection: "column",\n      overflow: "hidden"\n    }}>\n        <div style={{\n        padding: 4\n      }}>header</div>\n        <VList style={{\n        flex: 1,\n        background: "#fff"\n      }} element={UlList} itemElement={Li} overscan={20}>\n          {Array.from({\n          length: 1000\n        }).map((_, i) => i)}\n        </VList>\n      </div>;\n  }\n}'},null===(A=G.parameters)||void 0===A||null===(T=A.docs)||void 0===T?void 0:T.source)})});e("__namedExportsOrder",["Default","Horizontal","PaddingAndMargin","Sticky","ScrollTo","WithState","IncreasingItems","Ul"])}}}))}();
//# sourceMappingURL=VList.stories-legacy-641e80bd.js.map
