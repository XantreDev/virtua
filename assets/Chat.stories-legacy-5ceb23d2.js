!function(){function e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function t(t){for(var r=1;r<arguments.length;r++){var l=null!=arguments[r]?arguments[r]:{};r%2?e(Object(l),!0).forEach((function(e){n(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):e(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function n(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}System.register(["./jsx-runtime-legacy-fe2b3564.js","./index-legacy-612e7deb.js","./index-legacy-2962aa71.js","./VList-legacy-d9cac1c9.js","./resizer-legacy-ffe6a524.js","./index-legacy-360d6611.js"],(function(e,n){"use strict";var r,l,i,a,o;return{setters:[e=>{r=e.a,l=e.j},e=>{i=e.r},e=>{a=e.y},e=>{o=e.V},null,null],execute:function(){var n,u,s;e("default",{component:o});const c={border:"solid 1px #ccc",background:"#fff",margin:10,padding:10,borderRadius:8,whiteSpace:"pre-wrap"},m=({value:e,me:n})=>l("div",{style:t(t({},c),n?{background:"lightyellow",marginLeft:80}:{marginRight:80}),children:e}),f=e("Default",{name:"Chat",render:()=>{const e=i.useRef(0),n=({value:t=a.lorem.paragraphs(1),me:n=!1}={})=>({id:e.current++,value:t,me:n}),[u,s]=i.useState((()=>Array.from({length:100},(()=>n())))),c=i.useRef(null),[f,d]=i.useState("Hello world!");i.useEffect((()=>{c.current&&c.current.scrollToIndex(u.length-1)}),[u.length]),i.useEffect((()=>{let e=!1,t=null;const r=()=>{t=setTimeout((()=>{e||(s((e=>[...e,n()])),r())}),5e3)};return r(),()=>{e=!0,t&&clearTimeout(t)}}),[]);const p=!f.length,y=()=>{p||(s((e=>[...e,n({value:f,me:!0})])),d(""))};return r("div",{style:{width:"90vw",height:"90vh",display:"flex",flexDirection:"column"},children:[l(o,{ref:c,style:{flex:1},children:u.map(((e,n)=>l(m,t({},e),e.id)))}),r("form",{style:{margin:10},onSubmit:e=>{e.preventDefault(),e.stopPropagation(),y()},children:[l("textarea",{style:{width:400},rows:6,value:f,onChange:e=>{d(e.target.value)},onKeyDown:e=>{"Enter"===e.code&&(e.ctrlKey||e.metaKey)&&(y(),e.preventDefault())}}),l("button",{type:"submit",disabled:p,children:"submit"})]})]})}});f.parameters=t(t({},f.parameters),{},{docs:t(t({},null===(n=f.parameters)||void 0===n?void 0:n.docs),{},{source:t({originalSource:'{\n  name: "Chat",\n  render: () => {\n    const id = useRef(0);\n    const createItem = ({\n      value = faker.lorem.paragraphs(1),\n      me = false\n    }: {\n      value?: string;\n      me?: boolean;\n    } = {}): Data => ({\n      id: id.current++,\n      value: value,\n      me\n    });\n    const [items, setItems] = useState(() => Array.from({\n      length: 100\n    }, () => createItem()));\n    const ref = useRef<VListHandle>(null);\n    const [value, setValue] = useState("Hello world!");\n    useEffect(() => {\n      if (!ref.current) return;\n      ref.current.scrollToIndex(items.length - 1);\n    }, [items.length]);\n    useEffect(() => {\n      let canceled = false;\n      let timer: NodeJS.Timeout | null = null;\n      const setTimer = () => {\n        timer = setTimeout(() => {\n          if (canceled) return;\n          setItems(p => [...p, createItem()]);\n          setTimer();\n        }, 5000);\n      };\n      setTimer();\n      return () => {\n        canceled = true;\n        if (timer) {\n          clearTimeout(timer);\n        }\n      };\n    }, []);\n    const disabled = !value.length;\n    const submit = () => {\n      if (disabled) return;\n      setItems(p => [...p, createItem({\n        value,\n        me: true\n      })]);\n      setValue("");\n    };\n    return <div style={{\n      width: "90vw",\n      height: "90vh",\n      display: "flex",\n      flexDirection: "column"\n    }}>\n        <VList ref={ref} style={{\n        flex: 1\n      }}>\n          {items.map((d, i) => <Item key={d.id} {...d} />)}\n        </VList>\n        <form style={{\n        margin: 10\n      }} onSubmit={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        submit();\n      }}>\n          <textarea style={{\n          width: 400\n        }} rows={6} value={value} onChange={e => {\n          setValue(e.target.value);\n        }} onKeyDown={e => {\n          if (e.code === "Enter" && (e.ctrlKey || e.metaKey)) {\n            submit();\n            e.preventDefault();\n          }\n        }} />\n          <button type="submit" disabled={disabled}>\n            submit\n          </button>\n        </form>\n      </div>;\n  }\n}'},null===(u=f.parameters)||void 0===u||null===(s=u.docs)||void 0===s?void 0:s.source)})});e("__namedExportsOrder",["Default"])}}}))}();
//# sourceMappingURL=Chat.stories-legacy-5ceb23d2.js.map
