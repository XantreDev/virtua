{"version":3,"file":"With dnd-kit.stories-2482e756.js","sources":["../../node_modules/@dnd-kit/utilities/dist/utilities.esm.js","../../node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js","../../node_modules/@dnd-kit/core/dist/core.esm.js","../../node_modules/@dnd-kit/sortable/dist/sortable.esm.js"],"sourcesContent":["import { useMemo, useLayoutEffect, useEffect, useRef, useCallback } from 'react';\n\nfunction useCombinedRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return useMemo(() => node => {\n    refs.forEach(ref => ref(node));\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs);\n}\n\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nconst canUseDOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\nfunction isWindow(element) {\n  const elementString = Object.prototype.toString.call(element);\n  return elementString === '[object Window]' || // In Electron context the Window object serializes to [object global]\n  elementString === '[object global]';\n}\n\nfunction isNode(node) {\n  return 'nodeType' in node;\n}\n\nfunction getWindow(target) {\n  var _target$ownerDocument, _target$ownerDocument2;\n\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;\n}\n\nfunction isDocument(node) {\n  const {\n    Document\n  } = getWindow(node);\n  return node instanceof Document;\n}\n\nfunction isHTMLElement(node) {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n\nfunction isSVGElement(node) {\n  return node instanceof getWindow(node).SVGElement;\n}\n\nfunction getOwnerDocument(target) {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n\n/**\r\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\r\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\r\n */\n\nconst useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nfunction useEvent(handler) {\n  const handlerRef = useRef(handler);\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return handlerRef.current == null ? void 0 : handlerRef.current(...args);\n  }, []);\n}\n\nfunction useInterval() {\n  const intervalRef = useRef(null);\n  const set = useCallback((listener, duration) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n  return [set, clear];\n}\n\nfunction useLatestValue(value, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [value];\n  }\n\n  const valueRef = useRef(value);\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n  return valueRef;\n}\n\nfunction useLazyMemo(callback, dependencies) {\n  const valueRef = useRef();\n  return useMemo(() => {\n    const newValue = callback(valueRef.current);\n    valueRef.current = newValue;\n    return newValue;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...dependencies]);\n}\n\nfunction useNodeRef(onChange) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef(null);\n  const setNodeRef = useCallback(element => {\n    if (element !== node.current) {\n      onChangeHandler == null ? void 0 : onChangeHandler(element, node.current);\n    }\n\n    node.current = element;\n  }, //eslint-disable-next-line\n  []);\n  return [node, setNodeRef];\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nlet ids = {};\nfunction useUniqueId(prefix, value) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n    return prefix + \"-\" + id;\n  }, [prefix, value]);\n}\n\nfunction createAdjustmentFn(modifier) {\n  return function (object) {\n    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      adjustments[_key - 1] = arguments[_key];\n    }\n\n    return adjustments.reduce((accumulator, adjustment) => {\n      const entries = Object.entries(adjustment);\n\n      for (const [key, valueAdjustment] of entries) {\n        const value = accumulator[key];\n\n        if (value != null) {\n          accumulator[key] = value + modifier * valueAdjustment;\n        }\n      }\n\n      return accumulator;\n    }, { ...object\n    });\n  };\n}\n\nconst add = /*#__PURE__*/createAdjustmentFn(1);\nconst subtract = /*#__PURE__*/createAdjustmentFn(-1);\n\nfunction hasViewportRelativeCoordinates(event) {\n  return 'clientX' in event && 'clientY' in event;\n}\n\nfunction isKeyboardEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  const {\n    KeyboardEvent\n  } = getWindow(event.target);\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n\nfunction isTouchEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  const {\n    TouchEvent\n  } = getWindow(event.target);\n  return TouchEvent && event instanceof TouchEvent;\n}\n\n/**\r\n * Returns the normalized x and y coordinates for mouse and touch events.\r\n */\n\nfunction getEventCoordinates(event) {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.touches[0];\n      return {\n        x,\n        y\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.changedTouches[0];\n      return {\n        x,\n        y\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n\n  return null;\n}\n\nconst CSS = /*#__PURE__*/Object.freeze({\n  Translate: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        x,\n        y\n      } = transform;\n      return \"translate3d(\" + (x ? Math.round(x) : 0) + \"px, \" + (y ? Math.round(y) : 0) + \"px, 0)\";\n    }\n\n  },\n  Scale: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        scaleX,\n        scaleY\n      } = transform;\n      return \"scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\";\n    }\n\n  },\n  Transform: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(' ');\n    }\n\n  },\n  Transition: {\n    toString(_ref) {\n      let {\n        property,\n        duration,\n        easing\n      } = _ref;\n      return property + \" \" + duration + \"ms \" + easing;\n    }\n\n  }\n});\n\nconst SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nfunction findFirstFocusableNode(element) {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(SELECTOR);\n}\n\nexport { CSS, add, canUseDOM, findFirstFocusableNode, getEventCoordinates, getOwnerDocument, getWindow, hasViewportRelativeCoordinates, isDocument, isHTMLElement, isKeyboardEvent, isNode, isSVGElement, isTouchEvent, isWindow, subtract, useCombinedRefs, useEvent, useInterval, useIsomorphicLayoutEffect, useLatestValue, useLazyMemo, useNodeRef, usePrevious, useUniqueId };\n//# sourceMappingURL=utilities.esm.js.map\n","import React, { useState, useCallback } from 'react';\n\nconst hiddenStyles = {\n  display: 'none'\n};\nfunction HiddenText(_ref) {\n  let {\n    id,\n    value\n  } = _ref;\n  return React.createElement(\"div\", {\n    id: id,\n    style: hiddenStyles\n  }, value);\n}\n\nconst visuallyHidden = {\n  position: 'fixed',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(100%)',\n  whiteSpace: 'nowrap'\n};\nfunction LiveRegion(_ref) {\n  let {\n    id,\n    announcement\n  } = _ref;\n  return React.createElement(\"div\", {\n    id: id,\n    style: visuallyHidden,\n    role: \"status\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": true\n  }, announcement);\n}\n\nfunction useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback(value => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n  return {\n    announce,\n    announcement\n  };\n}\n\nexport { HiddenText, LiveRegion, useAnnouncement };\n//# sourceMappingURL=accessibility.esm.js.map\n","import React, { createContext, useContext, useEffect, useState, useCallback, useMemo, useRef, useReducer, memo, cloneElement, forwardRef } from 'react';\nimport { createPortal, unstable_batchedUpdates } from 'react-dom';\nimport { useUniqueId, getEventCoordinates, getWindow, isDocument, isHTMLElement, isSVGElement, canUseDOM, isWindow, isNode, getOwnerDocument, add, isKeyboardEvent, subtract, useLazyMemo, useInterval, usePrevious, useLatestValue, useEvent, useIsomorphicLayoutEffect, useNodeRef, findFirstFocusableNode, CSS } from '@dnd-kit/utilities';\nimport { useAnnouncement, HiddenText, LiveRegion } from '@dnd-kit/accessibility';\n\nconst DndMonitorContext = /*#__PURE__*/createContext(null);\n\nfunction useDndMonitor(listener) {\n  const registerListener = useContext(DndMonitorContext);\n  useEffect(() => {\n    if (!registerListener) {\n      throw new Error('useDndMonitor must be used within a children of <DndContext>');\n    }\n\n    const unsubscribe = registerListener(listener);\n    return unsubscribe;\n  }, [listener, registerListener]);\n}\n\nfunction useDndMonitorProvider() {\n  const [listeners] = useState(() => new Set());\n  const registerListener = useCallback(listener => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }, [listeners]);\n  const dispatch = useCallback(_ref => {\n    let {\n      type,\n      event\n    } = _ref;\n    listeners.forEach(listener => {\n      var _listener$type;\n\n      return (_listener$type = listener[type]) == null ? void 0 : _listener$type.call(listener, event);\n    });\n  }, [listeners]);\n  return [dispatch, registerListener];\n}\n\nconst defaultScreenReaderInstructions = {\n  draggable: \"\\n    To pick up a draggable item, press the space bar.\\n    While dragging, use the arrow keys to move the item.\\n    Press space again to drop the item in its new position, or press escape to cancel.\\n  \"\n};\nconst defaultAnnouncements = {\n  onDragStart(_ref) {\n    let {\n      active\n    } = _ref;\n    return \"Picked up draggable item \" + active.id + \".\";\n  },\n\n  onDragOver(_ref2) {\n    let {\n      active,\n      over\n    } = _ref2;\n\n    if (over) {\n      return \"Draggable item \" + active.id + \" was moved over droppable area \" + over.id + \".\";\n    }\n\n    return \"Draggable item \" + active.id + \" is no longer over a droppable area.\";\n  },\n\n  onDragEnd(_ref3) {\n    let {\n      active,\n      over\n    } = _ref3;\n\n    if (over) {\n      return \"Draggable item \" + active.id + \" was dropped over droppable area \" + over.id;\n    }\n\n    return \"Draggable item \" + active.id + \" was dropped.\";\n  },\n\n  onDragCancel(_ref4) {\n    let {\n      active\n    } = _ref4;\n    return \"Dragging was cancelled. Draggable item \" + active.id + \" was dropped.\";\n  }\n\n};\n\nfunction Accessibility(_ref) {\n  let {\n    announcements = defaultAnnouncements,\n    container,\n    hiddenTextDescribedById,\n    screenReaderInstructions = defaultScreenReaderInstructions\n  } = _ref;\n  const {\n    announce,\n    announcement\n  } = useAnnouncement();\n  const liveRegionId = useUniqueId(\"DndLiveRegion\");\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  useDndMonitor(useMemo(() => ({\n    onDragStart(_ref2) {\n      let {\n        active\n      } = _ref2;\n      announce(announcements.onDragStart({\n        active\n      }));\n    },\n\n    onDragMove(_ref3) {\n      let {\n        active,\n        over\n      } = _ref3;\n\n      if (announcements.onDragMove) {\n        announce(announcements.onDragMove({\n          active,\n          over\n        }));\n      }\n    },\n\n    onDragOver(_ref4) {\n      let {\n        active,\n        over\n      } = _ref4;\n      announce(announcements.onDragOver({\n        active,\n        over\n      }));\n    },\n\n    onDragEnd(_ref5) {\n      let {\n        active,\n        over\n      } = _ref5;\n      announce(announcements.onDragEnd({\n        active,\n        over\n      }));\n    },\n\n    onDragCancel(_ref6) {\n      let {\n        active,\n        over\n      } = _ref6;\n      announce(announcements.onDragCancel({\n        active,\n        over\n      }));\n    }\n\n  }), [announce, announcements]));\n\n  if (!mounted) {\n    return null;\n  }\n\n  const markup = React.createElement(React.Fragment, null, React.createElement(HiddenText, {\n    id: hiddenTextDescribedById,\n    value: screenReaderInstructions.draggable\n  }), React.createElement(LiveRegion, {\n    id: liveRegionId,\n    announcement: announcement\n  }));\n  return container ? createPortal(markup, container) : markup;\n}\n\nvar Action;\n\n(function (Action) {\n  Action[\"DragStart\"] = \"dragStart\";\n  Action[\"DragMove\"] = \"dragMove\";\n  Action[\"DragEnd\"] = \"dragEnd\";\n  Action[\"DragCancel\"] = \"dragCancel\";\n  Action[\"DragOver\"] = \"dragOver\";\n  Action[\"RegisterDroppable\"] = \"registerDroppable\";\n  Action[\"SetDroppableDisabled\"] = \"setDroppableDisabled\";\n  Action[\"UnregisterDroppable\"] = \"unregisterDroppable\";\n})(Action || (Action = {}));\n\nfunction noop() {}\n\nfunction useSensor(sensor, options) {\n  return useMemo(() => ({\n    sensor,\n    options: options != null ? options : {}\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [sensor, options]);\n}\n\nfunction useSensors() {\n  for (var _len = arguments.length, sensors = new Array(_len), _key = 0; _key < _len; _key++) {\n    sensors[_key] = arguments[_key];\n  }\n\n  return useMemo(() => [...sensors].filter(sensor => sensor != null), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...sensors]);\n}\n\nconst defaultCoordinates = /*#__PURE__*/Object.freeze({\n  x: 0,\n  y: 0\n});\n\n/**\r\n * Returns the distance between two points\r\n */\nfunction distanceBetween(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n\nfunction getRelativeTransformOrigin(event, rect) {\n  const eventCoordinates = getEventCoordinates(event);\n\n  if (!eventCoordinates) {\n    return '0 0';\n  }\n\n  const transformOrigin = {\n    x: (eventCoordinates.x - rect.left) / rect.width * 100,\n    y: (eventCoordinates.y - rect.top) / rect.height * 100\n  };\n  return transformOrigin.x + \"% \" + transformOrigin.y + \"%\";\n}\n\n/**\r\n * Sort collisions from smallest to greatest value\r\n */\nfunction sortCollisionsAsc(_ref, _ref2) {\n  let {\n    data: {\n      value: a\n    }\n  } = _ref;\n  let {\n    data: {\n      value: b\n    }\n  } = _ref2;\n  return a - b;\n}\n/**\r\n * Sort collisions from greatest to smallest value\r\n */\n\nfunction sortCollisionsDesc(_ref3, _ref4) {\n  let {\n    data: {\n      value: a\n    }\n  } = _ref3;\n  let {\n    data: {\n      value: b\n    }\n  } = _ref4;\n  return b - a;\n}\n/**\r\n * Returns the coordinates of the corners of a given rectangle:\r\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\r\n */\n\nfunction cornersOfRectangle(_ref5) {\n  let {\n    left,\n    top,\n    height,\n    width\n  } = _ref5;\n  return [{\n    x: left,\n    y: top\n  }, {\n    x: left + width,\n    y: top\n  }, {\n    x: left,\n    y: top + height\n  }, {\n    x: left + width,\n    y: top + height\n  }];\n}\nfunction getFirstCollision(collisions, property) {\n  if (!collisions || collisions.length === 0) {\n    return null;\n  }\n\n  const [firstCollision] = collisions;\n  return property ? firstCollision[property] : firstCollision;\n}\n\n/**\r\n * Returns the coordinates of the center of a given ClientRect\r\n */\n\nfunction centerOfRectangle(rect, left, top) {\n  if (left === void 0) {\n    left = rect.left;\n  }\n\n  if (top === void 0) {\n    top = rect.top;\n  }\n\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5\n  };\n}\n/**\r\n * Returns the closest rectangles from an array of rectangles to the center of a given\r\n * rectangle.\r\n */\n\n\nconst closestCenter = _ref => {\n  let {\n    collisionRect,\n    droppableRects,\n    droppableContainers\n  } = _ref;\n  const centerRect = centerOfRectangle(collisionRect, collisionRect.left, collisionRect.top);\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id\n    } = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n      collisions.push({\n        id,\n        data: {\n          droppableContainer,\n          value: distBetween\n        }\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n\n/**\r\n * Returns the closest rectangles from an array of rectangles to the corners of\r\n * another rectangle.\r\n */\n\nconst closestCorners = _ref => {\n  let {\n    collisionRect,\n    droppableRects,\n    droppableContainers\n  } = _ref;\n  const corners = cornersOfRectangle(collisionRect);\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id\n    } = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const rectCorners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner, index) => {\n        return accumulator + distanceBetween(rectCorners[index], corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n      collisions.push({\n        id,\n        data: {\n          droppableContainer,\n          value: effectiveDistance\n        }\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n\n/**\r\n * Returns the intersecting rectangle area between two rectangles\r\n */\n\nfunction getIntersectionRatio(entry, target) {\n  const top = Math.max(target.top, entry.top);\n  const left = Math.max(target.left, entry.left);\n  const right = Math.min(target.left + target.width, entry.left + entry.width);\n  const bottom = Math.min(target.top + target.height, entry.top + entry.height);\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n    return Number(intersectionRatio.toFixed(4));\n  } // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n\n\n  return 0;\n}\n/**\r\n * Returns the rectangles that has the greatest intersection area with a given\r\n * rectangle in an array of rectangles.\r\n */\n\nconst rectIntersection = _ref => {\n  let {\n    collisionRect,\n    droppableRects,\n    droppableContainers\n  } = _ref;\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id\n    } = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > 0) {\n        collisions.push({\n          id,\n          data: {\n            droppableContainer,\n            value: intersectionRatio\n          }\n        });\n      }\n    }\n  }\n\n  return collisions.sort(sortCollisionsDesc);\n};\n\n/**\r\n * Check if a given point is contained within a bounding rectangle\r\n */\n\nfunction isPointWithinRect(point, rect) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = rect;\n  return top <= point.y && point.y <= bottom && left <= point.x && point.x <= right;\n}\n/**\r\n * Returns the rectangles that the pointer is hovering over\r\n */\n\n\nconst pointerWithin = _ref => {\n  let {\n    droppableContainers,\n    droppableRects,\n    pointerCoordinates\n  } = _ref;\n\n  if (!pointerCoordinates) {\n    return [];\n  }\n\n  const collisions = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id\n    } = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect && isPointWithinRect(pointerCoordinates, rect)) {\n      /* There may be more than a single rectangle intersecting\r\n       * with the pointer coordinates. In order to sort the\r\n       * colliding rectangles, we measure the distance between\r\n       * the pointer and the corners of the intersecting rectangle\r\n       */\n      const corners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner) => {\n        return accumulator + distanceBetween(pointerCoordinates, corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n      collisions.push({\n        id,\n        data: {\n          droppableContainer,\n          value: effectiveDistance\n        }\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n\nfunction adjustScale(transform, rect1, rect2) {\n  return { ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1\n  };\n}\n\nfunction getRectDelta(rect1, rect2) {\n  return rect1 && rect2 ? {\n    x: rect1.left - rect2.left,\n    y: rect1.top - rect2.top\n  } : defaultCoordinates;\n}\n\nfunction createRectAdjustmentFn(modifier) {\n  return function adjustClientRect(rect) {\n    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      adjustments[_key - 1] = arguments[_key];\n    }\n\n    return adjustments.reduce((acc, adjustment) => ({ ...acc,\n      top: acc.top + modifier * adjustment.y,\n      bottom: acc.bottom + modifier * adjustment.y,\n      left: acc.left + modifier * adjustment.x,\n      right: acc.right + modifier * adjustment.x\n    }), { ...rect\n    });\n  };\n}\nconst getAdjustedRect = /*#__PURE__*/createRectAdjustmentFn(1);\n\nfunction parseTransform(transform) {\n  if (transform.startsWith('matrix3d(')) {\n    const transformArray = transform.slice(9, -1).split(/, /);\n    return {\n      x: +transformArray[12],\n      y: +transformArray[13],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[5]\n    };\n  } else if (transform.startsWith('matrix(')) {\n    const transformArray = transform.slice(7, -1).split(/, /);\n    return {\n      x: +transformArray[4],\n      y: +transformArray[5],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[3]\n    };\n  }\n\n  return null;\n}\n\nfunction inverseTransform(rect, transform, transformOrigin) {\n  const parsedTransform = parseTransform(transform);\n\n  if (!parsedTransform) {\n    return rect;\n  }\n\n  const {\n    scaleX,\n    scaleY,\n    x: translateX,\n    y: translateY\n  } = parsedTransform;\n  const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);\n  const y = rect.top - translateY - (1 - scaleY) * parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = scaleX ? rect.width / scaleX : rect.width;\n  const h = scaleY ? rect.height / scaleY : rect.height;\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x\n  };\n}\n\nconst defaultOptions = {\n  ignoreTransform: false\n};\n/**\r\n * Returns the bounding client rect of an element relative to the viewport.\r\n */\n\nfunction getClientRect(element, options) {\n  if (options === void 0) {\n    options = defaultOptions;\n  }\n\n  let rect = element.getBoundingClientRect();\n\n  if (options.ignoreTransform) {\n    const {\n      transform,\n      transformOrigin\n    } = getWindow(element).getComputedStyle(element);\n\n    if (transform) {\n      rect = inverseTransform(rect, transform, transformOrigin);\n    }\n  }\n\n  const {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right\n  } = rect;\n  return {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right\n  };\n}\n/**\r\n * Returns the bounding client rect of an element relative to the viewport.\r\n *\r\n * @remarks\r\n * The ClientRect returned by this method does not take into account transforms\r\n * applied to the element it measures.\r\n *\r\n */\n\nfunction getTransformAgnosticClientRect(element) {\n  return getClientRect(element, {\n    ignoreTransform: true\n  });\n}\n\nfunction getWindowClientRect(element) {\n  const width = element.innerWidth;\n  const height = element.innerHeight;\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height\n  };\n}\n\nfunction isFixed(node, computedStyle) {\n  if (computedStyle === void 0) {\n    computedStyle = getWindow(node).getComputedStyle(node);\n  }\n\n  return computedStyle.position === 'fixed';\n}\n\nfunction isScrollable(element, computedStyle) {\n  if (computedStyle === void 0) {\n    computedStyle = getWindow(element).getComputedStyle(element);\n  }\n\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n  return properties.some(property => {\n    const value = computedStyle[property];\n    return typeof value === 'string' ? overflowRegex.test(value) : false;\n  });\n}\n\nfunction getScrollableAncestors(element, limit) {\n  const scrollParents = [];\n\n  function findScrollableAncestors(node) {\n    if (limit != null && scrollParents.length >= limit) {\n      return scrollParents;\n    }\n\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (isDocument(node) && node.scrollingElement != null && !scrollParents.includes(node.scrollingElement)) {\n      scrollParents.push(node.scrollingElement);\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const computedStyle = getWindow(element).getComputedStyle(node);\n\n    if (node !== element) {\n      if (isScrollable(node, computedStyle)) {\n        scrollParents.push(node);\n      }\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\nfunction getFirstScrollableAncestor(node) {\n  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);\n  return firstScrollableAncestor != null ? firstScrollableAncestor : null;\n}\n\nfunction getScrollableElement(element) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (isDocument(element) || element === getOwnerDocument(element).scrollingElement) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n\nfunction getScrollXCoordinate(element) {\n  if (isWindow(element)) {\n    return element.scrollX;\n  }\n\n  return element.scrollLeft;\n}\nfunction getScrollYCoordinate(element) {\n  if (isWindow(element)) {\n    return element.scrollY;\n  }\n\n  return element.scrollTop;\n}\nfunction getScrollCoordinates(element) {\n  return {\n    x: getScrollXCoordinate(element),\n    y: getScrollYCoordinate(element)\n  };\n}\n\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Forward\"] = 1] = \"Forward\";\n  Direction[Direction[\"Backward\"] = -1] = \"Backward\";\n})(Direction || (Direction = {}));\n\nfunction isDocumentScrollingElement(element) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n\nfunction getScrollPosition(scrollingContainer) {\n  const minScroll = {\n    x: 0,\n    y: 0\n  };\n  const dimensions = isDocumentScrollingElement(scrollingContainer) ? {\n    height: window.innerHeight,\n    width: window.innerWidth\n  } : {\n    height: scrollingContainer.clientHeight,\n    width: scrollingContainer.clientWidth\n  };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - dimensions.width,\n    y: scrollingContainer.scrollHeight - dimensions.height\n  };\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll\n  };\n}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2\n};\nfunction getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, _ref, acceleration, thresholdPercentage) {\n  let {\n    top,\n    left,\n    right,\n    bottom\n  } = _ref;\n\n  if (acceleration === void 0) {\n    acceleration = 10;\n  }\n\n  if (thresholdPercentage === void 0) {\n    thresholdPercentage = defaultThreshold;\n  }\n\n  const {\n    isTop,\n    isBottom,\n    isLeft,\n    isRight\n  } = getScrollPosition(scrollContainer);\n  const direction = {\n    x: 0,\n    y: 0\n  };\n  const speed = {\n    x: 0,\n    y: 0\n  };\n  const threshold = {\n    height: scrollContainerRect.height * thresholdPercentage.y,\n    width: scrollContainerRect.width * thresholdPercentage.x\n  };\n\n  if (!isTop && top <= scrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y = acceleration * Math.abs((scrollContainerRect.top + threshold.height - top) / threshold.height);\n  } else if (!isBottom && bottom >= scrollContainerRect.bottom - threshold.height) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y = acceleration * Math.abs((scrollContainerRect.bottom - threshold.height - bottom) / threshold.height);\n  }\n\n  if (!isRight && right >= scrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x = acceleration * Math.abs((scrollContainerRect.right - threshold.width - right) / threshold.width);\n  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x = acceleration * Math.abs((scrollContainerRect.left + threshold.width - left) / threshold.width);\n  }\n\n  return {\n    direction,\n    speed\n  };\n}\n\nfunction getScrollElementRect(element) {\n  if (element === document.scrollingElement) {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight\n    };\n  }\n\n  const {\n    top,\n    left,\n    right,\n    bottom\n  } = element.getBoundingClientRect();\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getScrollOffsets(scrollableAncestors) {\n  return scrollableAncestors.reduce((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\nfunction getScrollXOffset(scrollableAncestors) {\n  return scrollableAncestors.reduce((acc, node) => {\n    return acc + getScrollXCoordinate(node);\n  }, 0);\n}\nfunction getScrollYOffset(scrollableAncestors) {\n  return scrollableAncestors.reduce((acc, node) => {\n    return acc + getScrollYCoordinate(node);\n  }, 0);\n}\n\nfunction scrollIntoViewIfNeeded(element, measure) {\n  if (measure === void 0) {\n    measure = getClientRect;\n  }\n\n  if (!element) {\n    return;\n  }\n\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = measure(element);\n  const firstScrollableAncestor = getFirstScrollableAncestor(element);\n\n  if (!firstScrollableAncestor) {\n    return;\n  }\n\n  if (bottom <= 0 || right <= 0 || top >= window.innerHeight || left >= window.innerWidth) {\n    element.scrollIntoView({\n      block: 'center',\n      inline: 'center'\n    });\n  }\n}\n\nconst properties = [['x', ['left', 'right'], getScrollXOffset], ['y', ['top', 'bottom'], getScrollYOffset]];\nclass Rect {\n  constructor(rect, element) {\n    this.rect = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.top = void 0;\n    this.bottom = void 0;\n    this.right = void 0;\n    this.left = void 0;\n    const scrollableAncestors = getScrollableAncestors(element);\n    const scrollOffsets = getScrollOffsets(scrollableAncestors);\n    this.rect = { ...rect\n    };\n    this.width = rect.width;\n    this.height = rect.height;\n\n    for (const [axis, keys, getScrollOffset] of properties) {\n      for (const key of keys) {\n        Object.defineProperty(this, key, {\n          get: () => {\n            const currentOffsets = getScrollOffset(scrollableAncestors);\n            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;\n            return this.rect[key] + scrollOffsetsDeltla;\n          },\n          enumerable: true\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'rect', {\n      enumerable: false\n    });\n  }\n\n}\n\nclass Listeners {\n  constructor(target) {\n    this.target = void 0;\n    this.listeners = [];\n\n    this.removeAll = () => {\n      this.listeners.forEach(listener => {\n        var _this$target;\n\n        return (_this$target = this.target) == null ? void 0 : _this$target.removeEventListener(...listener);\n      });\n    };\n\n    this.target = target;\n  }\n\n  add(eventName, handler, options) {\n    var _this$target2;\n\n    (_this$target2 = this.target) == null ? void 0 : _this$target2.addEventListener(eventName, handler, options);\n    this.listeners.push([eventName, handler, options]);\n  }\n\n}\n\nfunction getEventListenerTarget(target) {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n  const {\n    EventTarget\n  } = getWindow(target);\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n\nfunction hasExceededDistance(delta, measurement) {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n\nvar EventName;\n\n(function (EventName) {\n  EventName[\"Click\"] = \"click\";\n  EventName[\"DragStart\"] = \"dragstart\";\n  EventName[\"Keydown\"] = \"keydown\";\n  EventName[\"ContextMenu\"] = \"contextmenu\";\n  EventName[\"Resize\"] = \"resize\";\n  EventName[\"SelectionChange\"] = \"selectionchange\";\n  EventName[\"VisibilityChange\"] = \"visibilitychange\";\n})(EventName || (EventName = {}));\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\nvar KeyboardCode;\n\n(function (KeyboardCode) {\n  KeyboardCode[\"Space\"] = \"Space\";\n  KeyboardCode[\"Down\"] = \"ArrowDown\";\n  KeyboardCode[\"Right\"] = \"ArrowRight\";\n  KeyboardCode[\"Left\"] = \"ArrowLeft\";\n  KeyboardCode[\"Up\"] = \"ArrowUp\";\n  KeyboardCode[\"Esc\"] = \"Escape\";\n  KeyboardCode[\"Enter\"] = \"Enter\";\n})(KeyboardCode || (KeyboardCode = {}));\n\nconst defaultKeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter]\n};\nconst defaultKeyboardCoordinateGetter = (event, _ref) => {\n  let {\n    currentCoordinates\n  } = _ref;\n\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return { ...currentCoordinates,\n        x: currentCoordinates.x + 25\n      };\n\n    case KeyboardCode.Left:\n      return { ...currentCoordinates,\n        x: currentCoordinates.x - 25\n      };\n\n    case KeyboardCode.Down:\n      return { ...currentCoordinates,\n        y: currentCoordinates.y + 25\n      };\n\n    case KeyboardCode.Up:\n      return { ...currentCoordinates,\n        y: currentCoordinates.y - 25\n      };\n  }\n\n  return undefined;\n};\n\nclass KeyboardSensor {\n  constructor(props) {\n    this.props = void 0;\n    this.autoScrollEnabled = false;\n    this.referenceCoordinates = void 0;\n    this.listeners = void 0;\n    this.windowListeners = void 0;\n    this.props = props;\n    const {\n      event: {\n        target\n      }\n    } = props;\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.attach();\n  }\n\n  attach() {\n    this.handleStart();\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  handleStart() {\n    const {\n      activeNode,\n      onStart\n    } = this.props;\n    const node = activeNode.node.current;\n\n    if (node) {\n      scrollIntoViewIfNeeded(node);\n    }\n\n    onStart(defaultCoordinates);\n  }\n\n  handleKeyDown(event) {\n    if (isKeyboardEvent(event)) {\n      const {\n        active,\n        context,\n        options\n      } = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth'\n      } = options;\n      const {\n        code\n      } = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const {\n        collisionRect\n      } = context.current;\n      const currentCoordinates = collisionRect ? {\n        x: collisionRect.left,\n        y: collisionRect.top\n      } : defaultCoordinates;\n\n      if (!this.referenceCoordinates) {\n        this.referenceCoordinates = currentCoordinates;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates\n      });\n\n      if (newCoordinates) {\n        const coordinatesDelta = subtract(newCoordinates, currentCoordinates);\n        const scrollDelta = {\n          x: 0,\n          y: 0\n        };\n        const {\n          scrollableAncestors\n        } = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const {\n            isTop,\n            isRight,\n            isLeft,\n            isBottom,\n            maxScroll,\n            minScroll\n          } = getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n          const clampedCoordinates = {\n            x: Math.min(direction === KeyboardCode.Right ? scrollElementRect.right - scrollElementRect.width / 2 : scrollElementRect.right, Math.max(direction === KeyboardCode.Right ? scrollElementRect.left : scrollElementRect.left + scrollElementRect.width / 2, newCoordinates.x)),\n            y: Math.min(direction === KeyboardCode.Down ? scrollElementRect.bottom - scrollElementRect.height / 2 : scrollElementRect.bottom, Math.max(direction === KeyboardCode.Down ? scrollElementRect.top : scrollElementRect.top + scrollElementRect.height / 2, newCoordinates.y))\n          };\n          const canScrollX = direction === KeyboardCode.Right && !isRight || direction === KeyboardCode.Left && !isLeft;\n          const canScrollY = direction === KeyboardCode.Down && !isBottom || direction === KeyboardCode.Up && !isTop;\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const newScrollCoordinates = scrollContainer.scrollLeft + coordinatesDelta.x;\n            const canScrollToNewCoordinates = direction === KeyboardCode.Right && newScrollCoordinates <= maxScroll.x || direction === KeyboardCode.Left && newScrollCoordinates >= minScroll.x;\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.y) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                left: newScrollCoordinates,\n                behavior: scrollBehavior\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;\n            } else {\n              scrollDelta.x = direction === KeyboardCode.Right ? scrollContainer.scrollLeft - maxScroll.x : scrollContainer.scrollLeft - minScroll.x;\n            }\n\n            if (scrollDelta.x) {\n              scrollContainer.scrollBy({\n                left: -scrollDelta.x,\n                behavior: scrollBehavior\n              });\n            }\n\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const newScrollCoordinates = scrollContainer.scrollTop + coordinatesDelta.y;\n            const canScrollToNewCoordinates = direction === KeyboardCode.Down && newScrollCoordinates <= maxScroll.y || direction === KeyboardCode.Up && newScrollCoordinates >= minScroll.y;\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.x) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                top: newScrollCoordinates,\n                behavior: scrollBehavior\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;\n            } else {\n              scrollDelta.y = direction === KeyboardCode.Down ? scrollContainer.scrollTop - maxScroll.y : scrollContainer.scrollTop - minScroll.y;\n            }\n\n            if (scrollDelta.y) {\n              scrollContainer.scrollBy({\n                top: -scrollDelta.y,\n                behavior: scrollBehavior\n              });\n            }\n\n            break;\n          }\n        }\n\n        this.handleMove(event, add(subtract(newCoordinates, this.referenceCoordinates), scrollDelta));\n      }\n    }\n  }\n\n  handleMove(event, coordinates) {\n    const {\n      onMove\n    } = this.props;\n    event.preventDefault();\n    onMove(coordinates);\n  }\n\n  handleEnd(event) {\n    const {\n      onEnd\n    } = this.props;\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  handleCancel(event) {\n    const {\n      onCancel\n    } = this.props;\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n}\nKeyboardSensor.activators = [{\n  eventName: 'onKeyDown',\n  handler: (event, _ref, _ref2) => {\n    let {\n      keyboardCodes = defaultKeyboardCodes,\n      onActivation\n    } = _ref;\n    let {\n      active\n    } = _ref2;\n    const {\n      code\n    } = event.nativeEvent;\n\n    if (keyboardCodes.start.includes(code)) {\n      const activator = active.activatorNode.current;\n\n      if (activator && event.target !== activator) {\n        return false;\n      }\n\n      event.preventDefault();\n      onActivation == null ? void 0 : onActivation({\n        event: event.nativeEvent\n      });\n      return true;\n    }\n\n    return false;\n  }\n}];\n\nfunction isDistanceConstraint(constraint) {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(constraint) {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nclass AbstractPointerSensor {\n  constructor(props, events, listenerTarget) {\n    var _getEventCoordinates;\n\n    if (listenerTarget === void 0) {\n      listenerTarget = getEventListenerTarget(props.event.target);\n    }\n\n    this.props = void 0;\n    this.events = void 0;\n    this.autoScrollEnabled = true;\n    this.document = void 0;\n    this.activated = false;\n    this.initialCoordinates = void 0;\n    this.timeoutId = null;\n    this.listeners = void 0;\n    this.documentListeners = void 0;\n    this.windowListeners = void 0;\n    this.props = props;\n    this.events = events;\n    const {\n      event\n    } = props;\n    const {\n      target\n    } = event;\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = (_getEventCoordinates = getEventCoordinates(event)) != null ? _getEventCoordinates : defaultCoordinates;\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n    this.attach();\n  }\n\n  attach() {\n    const {\n      events,\n      props: {\n        options: {\n          activationConstraint\n        }\n      }\n    } = this;\n    this.listeners.add(events.move.name, this.handleMove, {\n      passive: false\n    });\n    this.listeners.add(events.end.name, this.handleEnd);\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(this.handleStart, activationConstraint.delay);\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll(); // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  handleStart() {\n    const {\n      initialCoordinates\n    } = this;\n    const {\n      onStart\n    } = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true; // Stop propagation of click events once activation constraints are met\n\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true\n      }); // Remove any text selection from the document\n\n      this.removeTextSelection(); // Prevent further text selection while dragging\n\n      this.documentListeners.add(EventName.SelectionChange, this.removeTextSelection);\n      onStart(initialCoordinates);\n    }\n  }\n\n  handleMove(event) {\n    var _getEventCoordinates2;\n\n    const {\n      activated,\n      initialCoordinates,\n      props\n    } = this;\n    const {\n      onMove,\n      options: {\n        activationConstraint\n      }\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = (_getEventCoordinates2 = getEventCoordinates(event)) != null ? _getEventCoordinates2 : defaultCoordinates;\n    const delta = subtract(initialCoordinates, coordinates);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (activationConstraint.tolerance != null && hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  handleEnd() {\n    const {\n      onEnd\n    } = this.props;\n    this.detach();\n    onEnd();\n  }\n\n  handleCancel() {\n    const {\n      onCancel\n    } = this.props;\n    this.detach();\n    onCancel();\n  }\n\n  handleKeydown(event) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  removeTextSelection() {\n    var _this$document$getSel;\n\n    (_this$document$getSel = this.document.getSelection()) == null ? void 0 : _this$document$getSel.removeAllRanges();\n  }\n\n}\n\nconst events = {\n  move: {\n    name: 'pointermove'\n  },\n  end: {\n    name: 'pointerup'\n  }\n};\nclass PointerSensor extends AbstractPointerSensor {\n  constructor(props) {\n    const {\n      event\n    } = props; // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n\n    const listenerTarget = getOwnerDocument(event.target);\n    super(props, events, listenerTarget);\n  }\n\n}\nPointerSensor.activators = [{\n  eventName: 'onPointerDown',\n  handler: (_ref, _ref2) => {\n    let {\n      nativeEvent: event\n    } = _ref;\n    let {\n      onActivation\n    } = _ref2;\n\n    if (!event.isPrimary || event.button !== 0) {\n      return false;\n    }\n\n    onActivation == null ? void 0 : onActivation({\n      event\n    });\n    return true;\n  }\n}];\n\nconst events$1 = {\n  move: {\n    name: 'mousemove'\n  },\n  end: {\n    name: 'mouseup'\n  }\n};\nvar MouseButton;\n\n(function (MouseButton) {\n  MouseButton[MouseButton[\"RightClick\"] = 2] = \"RightClick\";\n})(MouseButton || (MouseButton = {}));\n\nclass MouseSensor extends AbstractPointerSensor {\n  constructor(props) {\n    super(props, events$1, getOwnerDocument(props.event.target));\n  }\n\n}\nMouseSensor.activators = [{\n  eventName: 'onMouseDown',\n  handler: (_ref, _ref2) => {\n    let {\n      nativeEvent: event\n    } = _ref;\n    let {\n      onActivation\n    } = _ref2;\n\n    if (event.button === MouseButton.RightClick) {\n      return false;\n    }\n\n    onActivation == null ? void 0 : onActivation({\n      event\n    });\n    return true;\n  }\n}];\n\nconst events$2 = {\n  move: {\n    name: 'touchmove'\n  },\n  end: {\n    name: 'touchend'\n  }\n};\nclass TouchSensor extends AbstractPointerSensor {\n  constructor(props) {\n    super(props, events$2);\n  }\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events$2.move.name, noop, {\n      capture: false,\n      passive: false\n    });\n    return function teardown() {\n      window.removeEventListener(events$2.move.name, noop);\n    }; // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n\n    function noop() {}\n  }\n\n}\nTouchSensor.activators = [{\n  eventName: 'onTouchStart',\n  handler: (_ref, _ref2) => {\n    let {\n      nativeEvent: event\n    } = _ref;\n    let {\n      onActivation\n    } = _ref2;\n    const {\n      touches\n    } = event;\n\n    if (touches.length > 1) {\n      return false;\n    }\n\n    onActivation == null ? void 0 : onActivation({\n      event\n    });\n    return true;\n  }\n}];\n\nvar AutoScrollActivator;\n\n(function (AutoScrollActivator) {\n  AutoScrollActivator[AutoScrollActivator[\"Pointer\"] = 0] = \"Pointer\";\n  AutoScrollActivator[AutoScrollActivator[\"DraggableRect\"] = 1] = \"DraggableRect\";\n})(AutoScrollActivator || (AutoScrollActivator = {}));\n\nvar TraversalOrder;\n\n(function (TraversalOrder) {\n  TraversalOrder[TraversalOrder[\"TreeOrder\"] = 0] = \"TreeOrder\";\n  TraversalOrder[TraversalOrder[\"ReversedTreeOrder\"] = 1] = \"ReversedTreeOrder\";\n})(TraversalOrder || (TraversalOrder = {}));\n\nfunction useAutoScroller(_ref) {\n  let {\n    acceleration,\n    activator = AutoScrollActivator.Pointer,\n    canScroll,\n    draggingRect,\n    enabled,\n    interval = 5,\n    order = TraversalOrder.TreeOrder,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    delta,\n    threshold\n  } = _ref;\n  const scrollIntent = useScrollIntent({\n    delta,\n    disabled: !enabled\n  });\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef({\n    x: 0,\n    y: 0\n  });\n  const scrollDirection = useRef({\n    x: 0,\n    y: 0\n  });\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates ? {\n          top: pointerCoordinates.y,\n          bottom: pointerCoordinates.y,\n          left: pointerCoordinates.x,\n          right: pointerCoordinates.x\n        } : null;\n\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollContainerRef = useRef(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(() => order === TraversalOrder.TreeOrder ? [...scrollableAncestors].reverse() : scrollableAncestors, [order, scrollableAncestors]);\n  useEffect(() => {\n    if (!enabled || !scrollableAncestors.length || !rect) {\n      clearAutoScrollInterval();\n      return;\n    }\n\n    for (const scrollContainer of sortedScrollableAncestors) {\n      if ((canScroll == null ? void 0 : canScroll(scrollContainer)) === false) {\n        continue;\n      }\n\n      const index = scrollableAncestors.indexOf(scrollContainer);\n      const scrollContainerRect = scrollableAncestorRects[index];\n\n      if (!scrollContainerRect) {\n        continue;\n      }\n\n      const {\n        direction,\n        speed\n      } = getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, rect, acceleration, threshold);\n\n      for (const axis of ['x', 'y']) {\n        if (!scrollIntent[axis][direction[axis]]) {\n          speed[axis] = 0;\n          direction[axis] = 0;\n        }\n      }\n\n      if (speed.x > 0 || speed.y > 0) {\n        clearAutoScrollInterval();\n        scrollContainerRef.current = scrollContainer;\n        setAutoScrollInterval(autoScroll, interval);\n        scrollSpeed.current = speed;\n        scrollDirection.current = direction;\n        return;\n      }\n    }\n\n    scrollSpeed.current = {\n      x: 0,\n      y: 0\n    };\n    scrollDirection.current = {\n      x: 0,\n      y: 0\n    };\n    clearAutoScrollInterval();\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [acceleration, autoScroll, canScroll, clearAutoScrollInterval, enabled, interval, // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(rect), // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(scrollIntent), setAutoScrollInterval, scrollableAncestors, sortedScrollableAncestors, scrollableAncestorRects, // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(threshold)]);\n}\nconst defaultScrollIntent = {\n  x: {\n    [Direction.Backward]: false,\n    [Direction.Forward]: false\n  },\n  y: {\n    [Direction.Backward]: false,\n    [Direction.Forward]: false\n  }\n};\n\nfunction useScrollIntent(_ref2) {\n  let {\n    delta,\n    disabled\n  } = _ref2;\n  const previousDelta = usePrevious(delta);\n  return useLazyMemo(previousIntent => {\n    if (disabled || !previousDelta || !previousIntent) {\n      // Reset scroll intent tracking when auto-scrolling is disabled\n      return defaultScrollIntent;\n    }\n\n    const direction = {\n      x: Math.sign(delta.x - previousDelta.x),\n      y: Math.sign(delta.y - previousDelta.y)\n    }; // Keep track of the user intent to scroll in each direction for both axis\n\n    return {\n      x: {\n        [Direction.Backward]: previousIntent.x[Direction.Backward] || direction.x === -1,\n        [Direction.Forward]: previousIntent.x[Direction.Forward] || direction.x === 1\n      },\n      y: {\n        [Direction.Backward]: previousIntent.y[Direction.Backward] || direction.y === -1,\n        [Direction.Forward]: previousIntent.y[Direction.Forward] || direction.y === 1\n      }\n    };\n  }, [disabled, delta, previousDelta]);\n}\n\nfunction useCachedNode(draggableNodes, id) {\n  const draggableNode = id !== null ? draggableNodes.get(id) : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n  return useLazyMemo(cachedNode => {\n    var _ref;\n\n    if (id === null) {\n      return null;\n    } // In some cases, the draggable node can unmount while dragging\n    // This is the case for virtualized lists. In those situations,\n    // we fall back to the last known value for that node.\n\n\n    return (_ref = node != null ? node : cachedNode) != null ? _ref : null;\n  }, [node, id]);\n}\n\nfunction useCombineActivators(sensors, getSyntheticHandler) {\n  return useMemo(() => sensors.reduce((accumulator, sensor) => {\n    const {\n      sensor: Sensor\n    } = sensor;\n    const sensorActivators = Sensor.activators.map(activator => ({\n      eventName: activator.eventName,\n      handler: getSyntheticHandler(activator.handler, sensor)\n    }));\n    return [...accumulator, ...sensorActivators];\n  }, []), [sensors, getSyntheticHandler]);\n}\n\nvar MeasuringStrategy;\n\n(function (MeasuringStrategy) {\n  MeasuringStrategy[MeasuringStrategy[\"Always\"] = 0] = \"Always\";\n  MeasuringStrategy[MeasuringStrategy[\"BeforeDragging\"] = 1] = \"BeforeDragging\";\n  MeasuringStrategy[MeasuringStrategy[\"WhileDragging\"] = 2] = \"WhileDragging\";\n})(MeasuringStrategy || (MeasuringStrategy = {}));\n\nvar MeasuringFrequency;\n\n(function (MeasuringFrequency) {\n  MeasuringFrequency[\"Optimized\"] = \"optimized\";\n})(MeasuringFrequency || (MeasuringFrequency = {}));\n\nconst defaultValue = /*#__PURE__*/new Map();\nfunction useDroppableMeasuring(containers, _ref) {\n  let {\n    dragging,\n    dependencies,\n    config\n  } = _ref;\n  const [queue, setQueue] = useState(null);\n  const {\n    frequency,\n    measure,\n    strategy\n  } = config;\n  const containersRef = useRef(containers);\n  const disabled = isDisabled();\n  const disabledRef = useLatestValue(disabled);\n  const measureDroppableContainers = useCallback(function (ids) {\n    if (ids === void 0) {\n      ids = [];\n    }\n\n    if (disabledRef.current) {\n      return;\n    }\n\n    setQueue(value => {\n      if (value === null) {\n        return ids;\n      }\n\n      return value.concat(ids.filter(id => !value.includes(id)));\n    });\n  }, [disabledRef]);\n  const timeoutId = useRef(null);\n  const droppableRects = useLazyMemo(previousValue => {\n    if (disabled && !dragging) {\n      return defaultValue;\n    }\n\n    if (!previousValue || previousValue === defaultValue || containersRef.current !== containers || queue != null) {\n      const map = new Map();\n\n      for (let container of containers) {\n        if (!container) {\n          continue;\n        }\n\n        if (queue && queue.length > 0 && !queue.includes(container.id) && container.rect.current) {\n          // This container does not need to be re-measured\n          map.set(container.id, container.rect.current);\n          continue;\n        }\n\n        const node = container.node.current;\n        const rect = node ? new Rect(measure(node), node) : null;\n        container.rect.current = rect;\n\n        if (rect) {\n          map.set(container.id, rect);\n        }\n      }\n\n      return map;\n    }\n\n    return previousValue;\n  }, [containers, queue, dragging, disabled, measure]);\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n  useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    measureDroppableContainers();\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [dragging, disabled]);\n  useEffect(() => {\n    if (queue && queue.length > 0) {\n      setQueue(null);\n    }\n  }, //eslint-disable-next-line react-hooks/exhaustive-deps\n  [JSON.stringify(queue)]);\n  useEffect(() => {\n    if (disabled || typeof frequency !== 'number' || timeoutId.current !== null) {\n      return;\n    }\n\n    timeoutId.current = setTimeout(() => {\n      measureDroppableContainers();\n      timeoutId.current = null;\n    }, frequency);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [frequency, disabled, measureDroppableContainers, ...dependencies]);\n  return {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled: queue != null\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n\n      default:\n        return !dragging;\n    }\n  }\n}\n\nfunction useInitialValue(value, computeFn) {\n  return useLazyMemo(previousValue => {\n    if (!value) {\n      return null;\n    }\n\n    if (previousValue) {\n      return previousValue;\n    }\n\n    return typeof computeFn === 'function' ? computeFn(value) : value;\n  }, [computeFn, value]);\n}\n\nfunction useInitialRect(node, measure) {\n  return useInitialValue(node, measure);\n}\n\n/**\r\n * Returns a new MutationObserver instance.\r\n * If `MutationObserver` is undefined in the execution environment, returns `undefined`.\r\n */\n\nfunction useMutationObserver(_ref) {\n  let {\n    callback,\n    disabled\n  } = _ref;\n  const handleMutations = useEvent(callback);\n  const mutationObserver = useMemo(() => {\n    if (disabled || typeof window === 'undefined' || typeof window.MutationObserver === 'undefined') {\n      return undefined;\n    }\n\n    const {\n      MutationObserver\n    } = window;\n    return new MutationObserver(handleMutations);\n  }, [handleMutations, disabled]);\n  useEffect(() => {\n    return () => mutationObserver == null ? void 0 : mutationObserver.disconnect();\n  }, [mutationObserver]);\n  return mutationObserver;\n}\n\n/**\r\n * Returns a new ResizeObserver instance bound to the `onResize` callback.\r\n * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.\r\n */\n\nfunction useResizeObserver(_ref) {\n  let {\n    callback,\n    disabled\n  } = _ref;\n  const handleResize = useEvent(callback);\n  const resizeObserver = useMemo(() => {\n    if (disabled || typeof window === 'undefined' || typeof window.ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const {\n      ResizeObserver\n    } = window;\n    return new ResizeObserver(handleResize);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [disabled]);\n  useEffect(() => {\n    return () => resizeObserver == null ? void 0 : resizeObserver.disconnect();\n  }, [resizeObserver]);\n  return resizeObserver;\n}\n\nfunction defaultMeasure(element) {\n  return new Rect(getClientRect(element), element);\n}\n\nfunction useRect(element, measure, fallbackRect) {\n  if (measure === void 0) {\n    measure = defaultMeasure;\n  }\n\n  const [rect, measureRect] = useReducer(reducer, null);\n  const mutationObserver = useMutationObserver({\n    callback(records) {\n      if (!element) {\n        return;\n      }\n\n      for (const record of records) {\n        const {\n          type,\n          target\n        } = record;\n\n        if (type === 'childList' && target instanceof HTMLElement && target.contains(element)) {\n          measureRect();\n          break;\n        }\n      }\n    }\n\n  });\n  const resizeObserver = useResizeObserver({\n    callback: measureRect\n  });\n  useIsomorphicLayoutEffect(() => {\n    measureRect();\n\n    if (element) {\n      resizeObserver == null ? void 0 : resizeObserver.observe(element);\n      mutationObserver == null ? void 0 : mutationObserver.observe(document.body, {\n        childList: true,\n        subtree: true\n      });\n    } else {\n      resizeObserver == null ? void 0 : resizeObserver.disconnect();\n      mutationObserver == null ? void 0 : mutationObserver.disconnect();\n    }\n  }, [element]);\n  return rect;\n\n  function reducer(currentRect) {\n    if (!element) {\n      return null;\n    }\n\n    if (element.isConnected === false) {\n      var _ref;\n\n      // Fall back to last rect we measured if the element is\n      // no longer connected to the DOM.\n      return (_ref = currentRect != null ? currentRect : fallbackRect) != null ? _ref : null;\n    }\n\n    const newRect = measure(element);\n\n    if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {\n      return currentRect;\n    }\n\n    return newRect;\n  }\n}\n\nfunction useRectDelta(rect) {\n  const initialRect = useInitialValue(rect);\n  return getRectDelta(rect, initialRect);\n}\n\nconst defaultValue$1 = [];\nfunction useScrollableAncestors(node) {\n  const previousNode = useRef(node);\n  const ancestors = useLazyMemo(previousValue => {\n    if (!node) {\n      return defaultValue$1;\n    }\n\n    if (previousValue && previousValue !== defaultValue$1 && node && previousNode.current && node.parentNode === previousNode.current.parentNode) {\n      return previousValue;\n    }\n\n    return getScrollableAncestors(node);\n  }, [node]);\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n  return ancestors;\n}\n\nfunction useScrollOffsets(elements) {\n  const [scrollCoordinates, setScrollCoordinates] = useState(null);\n  const prevElements = useRef(elements); // To-do: Throttle the handleScroll callback\n\n  const handleScroll = useCallback(event => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates(scrollCoordinates => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(scrollingElement, getScrollCoordinates(scrollingElement));\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n      const entries = elements.map(element => {\n        const scrollableElement = getScrollableElement(element);\n\n        if (scrollableElement) {\n          scrollableElement.addEventListener('scroll', handleScroll, {\n            passive: true\n          });\n          return [scrollableElement, getScrollCoordinates(scrollableElement)];\n        }\n\n        return null;\n      }).filter(entry => entry != null);\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements) {\n      elements.forEach(element => {\n        const scrollableElement = getScrollableElement(element);\n        scrollableElement == null ? void 0 : scrollableElement.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates ? Array.from(scrollCoordinates.values()).reduce((acc, coordinates) => add(acc, coordinates), defaultCoordinates) : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n\nfunction useScrollOffsetsDelta(scrollOffsets, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  }\n\n  const initialScrollOffsets = useRef(null);\n  useEffect(() => {\n    initialScrollOffsets.current = null;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  dependencies);\n  useEffect(() => {\n    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;\n\n    if (hasScrollOffsets && !initialScrollOffsets.current) {\n      initialScrollOffsets.current = scrollOffsets;\n    }\n\n    if (!hasScrollOffsets && initialScrollOffsets.current) {\n      initialScrollOffsets.current = null;\n    }\n  }, [scrollOffsets]);\n  return initialScrollOffsets.current ? subtract(scrollOffsets, initialScrollOffsets.current) : defaultCoordinates;\n}\n\nfunction useSensorSetup(sensors) {\n  useEffect(() => {\n    if (!canUseDOM) {\n      return;\n    }\n\n    const teardownFns = sensors.map(_ref => {\n      let {\n        sensor\n      } = _ref;\n      return sensor.setup == null ? void 0 : sensor.setup();\n    });\n    return () => {\n      for (const teardown of teardownFns) {\n        teardown == null ? void 0 : teardown();\n      }\n    };\n  }, // TO-DO: Sensors length could theoretically change which would not be a valid dependency\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  sensors.map(_ref2 => {\n    let {\n      sensor\n    } = _ref2;\n    return sensor;\n  }));\n}\n\nfunction useSyntheticListeners(listeners, id) {\n  return useMemo(() => {\n    return listeners.reduce((acc, _ref) => {\n      let {\n        eventName,\n        handler\n      } = _ref;\n\n      acc[eventName] = event => {\n        handler(event, id);\n      };\n\n      return acc;\n    }, {});\n  }, [listeners, id]);\n}\n\nfunction useWindowRect(element) {\n  return useMemo(() => element ? getWindowClientRect(element) : null, [element]);\n}\n\nconst defaultValue$2 = [];\nfunction useRects(elements, measure) {\n  if (measure === void 0) {\n    measure = getClientRect;\n  }\n\n  const [firstElement] = elements;\n  const windowRect = useWindowRect(firstElement ? getWindow(firstElement) : null);\n  const [rects, measureRects] = useReducer(reducer, defaultValue$2);\n  const resizeObserver = useResizeObserver({\n    callback: measureRects\n  });\n\n  if (elements.length > 0 && rects === defaultValue$2) {\n    measureRects();\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (elements.length) {\n      elements.forEach(element => resizeObserver == null ? void 0 : resizeObserver.observe(element));\n    } else {\n      resizeObserver == null ? void 0 : resizeObserver.disconnect();\n      measureRects();\n    }\n  }, [elements]);\n  return rects;\n\n  function reducer() {\n    if (!elements.length) {\n      return defaultValue$2;\n    }\n\n    return elements.map(element => isDocumentScrollingElement(element) ? windowRect : new Rect(measure(element), element));\n  }\n}\n\nfunction getMeasurableNode(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n\n  const firstChild = node.children[0];\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n\nfunction useDragOverlayMeasuring(_ref) {\n  let {\n    measure\n  } = _ref;\n  const [rect, setRect] = useState(null);\n  const handleResize = useCallback(entries => {\n    for (const {\n      target\n    } of entries) {\n      if (isHTMLElement(target)) {\n        setRect(rect => {\n          const newRect = measure(target);\n          return rect ? { ...rect,\n            width: newRect.width,\n            height: newRect.height\n          } : newRect;\n        });\n        break;\n      }\n    }\n  }, [measure]);\n  const resizeObserver = useResizeObserver({\n    callback: handleResize\n  });\n  const handleNodeChange = useCallback(element => {\n    const node = getMeasurableNode(element);\n    resizeObserver == null ? void 0 : resizeObserver.disconnect();\n\n    if (node) {\n      resizeObserver == null ? void 0 : resizeObserver.observe(node);\n    }\n\n    setRect(node ? measure(node) : null);\n  }, [measure, resizeObserver]);\n  const [nodeRef, setRef] = useNodeRef(handleNodeChange);\n  return useMemo(() => ({\n    nodeRef,\n    rect,\n    setRef\n  }), [rect, nodeRef, setRef]);\n}\n\nconst defaultSensors = [{\n  sensor: PointerSensor,\n  options: {}\n}, {\n  sensor: KeyboardSensor,\n  options: {}\n}];\nconst defaultData = {\n  current: {}\n};\nconst defaultMeasuringConfiguration = {\n  draggable: {\n    measure: getTransformAgnosticClientRect\n  },\n  droppable: {\n    measure: getTransformAgnosticClientRect,\n    strategy: MeasuringStrategy.WhileDragging,\n    frequency: MeasuringFrequency.Optimized\n  },\n  dragOverlay: {\n    measure: getClientRect\n  }\n};\n\nclass DroppableContainersMap extends Map {\n  get(id) {\n    var _super$get;\n\n    return id != null ? (_super$get = super.get(id)) != null ? _super$get : undefined : undefined;\n  }\n\n  toArray() {\n    return Array.from(this.values());\n  }\n\n  getEnabled() {\n    return this.toArray().filter(_ref => {\n      let {\n        disabled\n      } = _ref;\n      return !disabled;\n    });\n  }\n\n  getNodeFor(id) {\n    var _this$get$node$curren, _this$get;\n\n    return (_this$get$node$curren = (_this$get = this.get(id)) == null ? void 0 : _this$get.node.current) != null ? _this$get$node$curren : undefined;\n  }\n\n}\n\nconst defaultPublicContext = {\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  collisions: null,\n  containerNodeRect: null,\n  draggableNodes: /*#__PURE__*/new Map(),\n  droppableRects: /*#__PURE__*/new Map(),\n  droppableContainers: /*#__PURE__*/new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null\n    },\n    rect: null,\n    setRef: noop\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  measuringConfiguration: defaultMeasuringConfiguration,\n  measureDroppableContainers: noop,\n  windowRect: null,\n  measuringScheduled: false\n};\nconst defaultInternalContext = {\n  activatorEvent: null,\n  activators: [],\n  active: null,\n  activeNodeRect: null,\n  ariaDescribedById: {\n    draggable: ''\n  },\n  dispatch: noop,\n  draggableNodes: /*#__PURE__*/new Map(),\n  over: null,\n  measureDroppableContainers: noop\n};\nconst InternalContext = /*#__PURE__*/createContext(defaultInternalContext);\nconst PublicContext = /*#__PURE__*/createContext(defaultPublicContext);\n\nfunction getInitialState() {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {\n        x: 0,\n        y: 0\n      },\n      nodes: new Map(),\n      translate: {\n        x: 0,\n        y: 0\n      }\n    },\n    droppable: {\n      containers: new DroppableContainersMap()\n    }\n  };\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case Action.DragStart:\n      return { ...state,\n        draggable: { ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active\n        }\n      };\n\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return { ...state,\n        draggable: { ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y\n          }\n        }\n      };\n\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return { ...state,\n        draggable: { ...state.draggable,\n          active: null,\n          initialCoordinates: {\n            x: 0,\n            y: 0\n          },\n          translate: {\n            x: 0,\n            y: 0\n          }\n        }\n      };\n\n    case Action.RegisterDroppable:\n      {\n        const {\n          element\n        } = action;\n        const {\n          id\n        } = element;\n        const containers = new DroppableContainersMap(state.droppable.containers);\n        containers.set(id, element);\n        return { ...state,\n          droppable: { ...state.droppable,\n            containers\n          }\n        };\n      }\n\n    case Action.SetDroppableDisabled:\n      {\n        const {\n          id,\n          key,\n          disabled\n        } = action;\n        const element = state.droppable.containers.get(id);\n\n        if (!element || key !== element.key) {\n          return state;\n        }\n\n        const containers = new DroppableContainersMap(state.droppable.containers);\n        containers.set(id, { ...element,\n          disabled\n        });\n        return { ...state,\n          droppable: { ...state.droppable,\n            containers\n          }\n        };\n      }\n\n    case Action.UnregisterDroppable:\n      {\n        const {\n          id,\n          key\n        } = action;\n        const element = state.droppable.containers.get(id);\n\n        if (!element || key !== element.key) {\n          return state;\n        }\n\n        const containers = new DroppableContainersMap(state.droppable.containers);\n        containers.delete(id);\n        return { ...state,\n          droppable: { ...state.droppable,\n            containers\n          }\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nfunction RestoreFocus(_ref) {\n  let {\n    disabled\n  } = _ref;\n  const {\n    active,\n    activatorEvent,\n    draggableNodes\n  } = useContext(InternalContext);\n  const previousActivatorEvent = usePrevious(activatorEvent);\n  const previousActiveId = usePrevious(active == null ? void 0 : active.id); // Restore keyboard focus on the activator node\n\n  useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {\n      if (!isKeyboardEvent(previousActivatorEvent)) {\n        return;\n      }\n\n      if (document.activeElement === previousActivatorEvent.target) {\n        // No need to restore focus\n        return;\n      }\n\n      const draggableNode = draggableNodes.get(previousActiveId);\n\n      if (!draggableNode) {\n        return;\n      }\n\n      const {\n        activatorNode,\n        node\n      } = draggableNode;\n\n      if (!activatorNode.current && !node.current) {\n        return;\n      }\n\n      requestAnimationFrame(() => {\n        for (const element of [activatorNode.current, node.current]) {\n          if (!element) {\n            continue;\n          }\n\n          const focusableNode = findFirstFocusableNode(element);\n\n          if (focusableNode) {\n            focusableNode.focus();\n            break;\n          }\n        }\n      });\n    }\n  }, [activatorEvent, disabled, draggableNodes, previousActiveId, previousActivatorEvent]);\n  return null;\n}\n\nfunction applyModifiers(modifiers, _ref) {\n  let {\n    transform,\n    ...args\n  } = _ref;\n  return modifiers != null && modifiers.length ? modifiers.reduce((accumulator, modifier) => {\n    return modifier({\n      transform: accumulator,\n      ...args\n    });\n  }, transform) : transform;\n}\n\nfunction useMeasuringConfiguration(config) {\n  return useMemo(() => ({\n    draggable: { ...defaultMeasuringConfiguration.draggable,\n      ...(config == null ? void 0 : config.draggable)\n    },\n    droppable: { ...defaultMeasuringConfiguration.droppable,\n      ...(config == null ? void 0 : config.droppable)\n    },\n    dragOverlay: { ...defaultMeasuringConfiguration.dragOverlay,\n      ...(config == null ? void 0 : config.dragOverlay)\n    }\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [config == null ? void 0 : config.draggable, config == null ? void 0 : config.droppable, config == null ? void 0 : config.dragOverlay]);\n}\n\nfunction useLayoutShiftScrollCompensation(_ref) {\n  let {\n    activeNode,\n    measure,\n    initialRect,\n    config = true\n  } = _ref;\n  const initialized = useRef(false);\n  const {\n    x,\n    y\n  } = typeof config === 'boolean' ? {\n    x: config,\n    y: config\n  } : config;\n  useIsomorphicLayoutEffect(() => {\n    const disabled = !x && !y;\n\n    if (disabled || !activeNode) {\n      initialized.current = false;\n      return;\n    }\n\n    if (initialized.current || !initialRect) {\n      // Return early if layout shift scroll compensation was already attempted\n      // or if there is no initialRect to compare to.\n      return;\n    } // Get the most up to date node ref for the active draggable\n\n\n    const node = activeNode == null ? void 0 : activeNode.node.current;\n\n    if (!node || node.isConnected === false) {\n      // Return early if there is no attached node ref or if the node is\n      // disconnected from the document.\n      return;\n    }\n\n    const rect = measure(node);\n    const rectDelta = getRectDelta(rect, initialRect);\n\n    if (!x) {\n      rectDelta.x = 0;\n    }\n\n    if (!y) {\n      rectDelta.y = 0;\n    } // Only perform layout shift scroll compensation once\n\n\n    initialized.current = true;\n\n    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {\n      const firstScrollableAncestor = getFirstScrollableAncestor(node);\n\n      if (firstScrollableAncestor) {\n        firstScrollableAncestor.scrollBy({\n          top: rectDelta.y,\n          left: rectDelta.x\n        });\n      }\n    }\n  }, [activeNode, x, y, initialRect, measure]);\n}\n\nconst ActiveDraggableContext = /*#__PURE__*/createContext({ ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1\n});\nvar Status;\n\n(function (Status) {\n  Status[Status[\"Uninitialized\"] = 0] = \"Uninitialized\";\n  Status[Status[\"Initializing\"] = 1] = \"Initializing\";\n  Status[Status[\"Initialized\"] = 2] = \"Initialized\";\n})(Status || (Status = {}));\n\nconst DndContext = /*#__PURE__*/memo(function DndContext(_ref) {\n  var _sensorContext$curren, _dragOverlay$nodeRef$, _dragOverlay$rect, _over$rect;\n\n  let {\n    id,\n    accessibility,\n    autoScroll = true,\n    children,\n    sensors = defaultSensors,\n    collisionDetection = rectIntersection,\n    measuring,\n    modifiers,\n    ...props\n  } = _ref;\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [dispatchMonitorEvent, registerMonitorListener] = useDndMonitorProvider();\n  const [status, setStatus] = useState(Status.Uninitialized);\n  const isInitialized = status === Status.Initialized;\n  const {\n    draggable: {\n      active: activeId,\n      nodes: draggableNodes,\n      translate\n    },\n    droppable: {\n      containers: droppableContainers\n    }\n  } = state;\n  const node = activeId ? draggableNodes.get(activeId) : null;\n  const activeRects = useRef({\n    initial: null,\n    translated: null\n  });\n  const active = useMemo(() => {\n    var _node$data;\n\n    return activeId != null ? {\n      id: activeId,\n      // It's possible for the active node to unmount while dragging\n      data: (_node$data = node == null ? void 0 : node.data) != null ? _node$data : defaultData,\n      rect: activeRects\n    } : null;\n  }, [activeId, node]);\n  const activeRef = useRef(null);\n  const [activeSensor, setActiveSensor] = useState(null);\n  const [activatorEvent, setActivatorEvent] = useState(null);\n  const latestProps = useLatestValue(props, Object.values(props));\n  const draggableDescribedById = useUniqueId(\"DndDescribedBy\", id);\n  const enabledDroppableContainers = useMemo(() => droppableContainers.getEnabled(), [droppableContainers]);\n  const measuringConfiguration = useMeasuringConfiguration(measuring);\n  const {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled\n  } = useDroppableMeasuring(enabledDroppableContainers, {\n    dragging: isInitialized,\n    dependencies: [translate.x, translate.y],\n    config: measuringConfiguration.droppable\n  });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = useMemo(() => activatorEvent ? getEventCoordinates(activatorEvent) : null, [activatorEvent]);\n  const autoScrollOptions = getAutoScrollerOptions();\n  const initialActiveNodeRect = useInitialRect(activeNode, measuringConfiguration.draggable.measure);\n  useLayoutShiftScrollCompensation({\n    activeNode: activeId ? draggableNodes.get(activeId) : null,\n    config: autoScrollOptions.layoutShiftCompensation,\n    initialRect: initialActiveNodeRect,\n    measure: measuringConfiguration.draggable.measure\n  });\n  const activeNodeRect = useRect(activeNode, measuringConfiguration.draggable.measure, initialActiveNodeRect);\n  const containerNodeRect = useRect(activeNode ? activeNode.parentElement : null);\n  const sensorContext = useRef({\n    activatorEvent: null,\n    active: null,\n    activeNode,\n    collisionRect: null,\n    collisions: null,\n    droppableRects,\n    draggableNodes,\n    draggingNode: null,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null\n  });\n  const overNode = droppableContainers.getNodeFor((_sensorContext$curren = sensorContext.current.over) == null ? void 0 : _sensorContext$curren.id);\n  const dragOverlay = useDragOverlayMeasuring({\n    measure: measuringConfiguration.dragOverlay.measure\n  }); // Use the rect of the drag overlay if it is mounted\n\n  const draggingNode = (_dragOverlay$nodeRef$ = dragOverlay.nodeRef.current) != null ? _dragOverlay$nodeRef$ : activeNode;\n  const draggingNodeRect = isInitialized ? (_dragOverlay$rect = dragOverlay.rect) != null ? _dragOverlay$rect : activeNodeRect : null;\n  const usesDragOverlay = Boolean(dragOverlay.nodeRef.current && dragOverlay.rect); // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n\n  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect); // Get the window rect of the dragging node\n\n  const windowRect = useWindowRect(draggingNode ? getWindow(draggingNode) : null); // Get scrollable ancestors of the dragging node\n\n  const scrollableAncestors = useScrollableAncestors(isInitialized ? overNode != null ? overNode : activeNode : null);\n  const scrollableAncestorRects = useRects(scrollableAncestors); // Apply modifiers\n\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1\n    },\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect\n  });\n  const pointerCoordinates = activationCoordinates ? add(activationCoordinates, translate) : null;\n  const scrollOffsets = useScrollOffsets(scrollableAncestors); // Represents the scroll delta since dragging was initiated\n\n  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets); // Represents the scroll delta since the last time the active node rect was measured\n\n  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [activeNodeRect]);\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n  const collisionRect = draggingNodeRect ? getAdjustedRect(draggingNodeRect, modifiedTranslate) : null;\n  const collisions = active && collisionRect ? collisionDetection({\n    active,\n    collisionRect,\n    droppableRects,\n    droppableContainers: enabledDroppableContainers,\n    pointerCoordinates\n  }) : null;\n  const overId = getFirstCollision(collisions, 'id');\n  const [over, setOver] = useState(null); // When there is no drag overlay used, we need to account for the\n  // window scroll delta\n\n  const appliedTranslate = usesDragOverlay ? modifiedTranslate : add(modifiedTranslate, activeNodeScrollDelta);\n  const transform = adjustScale(appliedTranslate, (_over$rect = over == null ? void 0 : over.rect) != null ? _over$rect : null, activeNodeRect);\n  const instantiateSensor = useCallback((event, _ref2) => {\n    let {\n      sensor: Sensor,\n      options\n    } = _ref2;\n\n    if (activeRef.current == null) {\n      return;\n    }\n\n    const activeNode = draggableNodes.get(activeRef.current);\n\n    if (!activeNode) {\n      return;\n    }\n\n    const activatorEvent = event.nativeEvent;\n    const sensorInstance = new Sensor({\n      active: activeRef.current,\n      activeNode,\n      event: activatorEvent,\n      options,\n      // Sensors need to be instantiated with refs for arguments that change over time\n      // otherwise they are frozen in time with the stale arguments\n      context: sensorContext,\n\n      onStart(initialCoordinates) {\n        const id = activeRef.current;\n\n        if (id == null) {\n          return;\n        }\n\n        const draggableNode = draggableNodes.get(id);\n\n        if (!draggableNode) {\n          return;\n        }\n\n        const {\n          onDragStart\n        } = latestProps.current;\n        const event = {\n          active: {\n            id,\n            data: draggableNode.data,\n            rect: activeRects\n          }\n        };\n        unstable_batchedUpdates(() => {\n          onDragStart == null ? void 0 : onDragStart(event);\n          setStatus(Status.Initializing);\n          dispatch({\n            type: Action.DragStart,\n            initialCoordinates,\n            active: id\n          });\n          dispatchMonitorEvent({\n            type: 'onDragStart',\n            event\n          });\n        });\n      },\n\n      onMove(coordinates) {\n        dispatch({\n          type: Action.DragMove,\n          coordinates\n        });\n      },\n\n      onEnd: createHandler(Action.DragEnd),\n      onCancel: createHandler(Action.DragCancel)\n    });\n    unstable_batchedUpdates(() => {\n      setActiveSensor(sensorInstance);\n      setActivatorEvent(event.nativeEvent);\n    });\n\n    function createHandler(type) {\n      return async function handler() {\n        const {\n          active,\n          collisions,\n          over,\n          scrollAdjustedTranslate\n        } = sensorContext.current;\n        let event = null;\n\n        if (active && scrollAdjustedTranslate) {\n          const {\n            cancelDrop\n          } = latestProps.current;\n          event = {\n            activatorEvent,\n            active: active,\n            collisions,\n            delta: scrollAdjustedTranslate,\n            over\n          };\n\n          if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n            const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n            if (shouldCancel) {\n              type = Action.DragCancel;\n            }\n          }\n        }\n\n        activeRef.current = null;\n        unstable_batchedUpdates(() => {\n          dispatch({\n            type\n          });\n          setStatus(Status.Uninitialized);\n          setOver(null);\n          setActiveSensor(null);\n          setActivatorEvent(null);\n          const eventName = type === Action.DragEnd ? 'onDragEnd' : 'onDragCancel';\n\n          if (event) {\n            const handler = latestProps.current[eventName];\n            handler == null ? void 0 : handler(event);\n            dispatchMonitorEvent({\n              type: eventName,\n              event\n            });\n          }\n        });\n      };\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [draggableNodes]);\n  const bindActivatorToSensorInstantiator = useCallback((handler, sensor) => {\n    return (event, active) => {\n      const nativeEvent = event.nativeEvent;\n      const activeDraggableNode = draggableNodes.get(active);\n\n      if ( // Another sensor is already instantiating\n      activeRef.current !== null || // No active draggable\n      !activeDraggableNode || // Event has already been captured\n      nativeEvent.dndKit || nativeEvent.defaultPrevented) {\n        return;\n      }\n\n      const activationContext = {\n        active: activeDraggableNode\n      };\n      const shouldActivate = handler(event, sensor.options, activationContext);\n\n      if (shouldActivate === true) {\n        nativeEvent.dndKit = {\n          capturedBy: sensor.sensor\n        };\n        activeRef.current = active;\n        instantiateSensor(event, sensor);\n      }\n    };\n  }, [draggableNodes, instantiateSensor]);\n  const activators = useCombineActivators(sensors, bindActivatorToSensorInstantiator);\n  useSensorSetup(sensors);\n  useIsomorphicLayoutEffect(() => {\n    if (activeNodeRect && status === Status.Initializing) {\n      setStatus(Status.Initialized);\n    }\n  }, [activeNodeRect, status]);\n  useEffect(() => {\n    const {\n      onDragMove\n    } = latestProps.current;\n    const {\n      active,\n      activatorEvent,\n      collisions,\n      over\n    } = sensorContext.current;\n\n    if (!active || !activatorEvent) {\n      return;\n    }\n\n    const event = {\n      active,\n      activatorEvent,\n      collisions,\n      delta: {\n        x: scrollAdjustedTranslate.x,\n        y: scrollAdjustedTranslate.y\n      },\n      over\n    };\n    unstable_batchedUpdates(() => {\n      onDragMove == null ? void 0 : onDragMove(event);\n      dispatchMonitorEvent({\n        type: 'onDragMove',\n        event\n      });\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]);\n  useEffect(() => {\n    const {\n      active,\n      activatorEvent,\n      collisions,\n      droppableContainers,\n      scrollAdjustedTranslate\n    } = sensorContext.current;\n\n    if (!active || activeRef.current == null || !activatorEvent || !scrollAdjustedTranslate) {\n      return;\n    }\n\n    const {\n      onDragOver\n    } = latestProps.current;\n    const overContainer = droppableContainers.get(overId);\n    const over = overContainer && overContainer.rect.current ? {\n      id: overContainer.id,\n      rect: overContainer.rect.current,\n      data: overContainer.data,\n      disabled: overContainer.disabled\n    } : null;\n    const event = {\n      active,\n      activatorEvent,\n      collisions,\n      delta: {\n        x: scrollAdjustedTranslate.x,\n        y: scrollAdjustedTranslate.y\n      },\n      over\n    };\n    unstable_batchedUpdates(() => {\n      setOver(over);\n      onDragOver == null ? void 0 : onDragOver(event);\n      dispatchMonitorEvent({\n        type: 'onDragOver',\n        event\n      });\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [overId]);\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      activatorEvent,\n      active,\n      activeNode,\n      collisionRect,\n      collisions,\n      droppableRects,\n      draggableNodes,\n      draggingNode,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate\n    };\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: collisionRect\n    };\n  }, [active, activeNode, collisions, collisionRect, draggableNodes, draggingNode, draggingNodeRect, droppableRects, droppableContainers, over, scrollableAncestors, scrollAdjustedTranslate]);\n  useAutoScroller({ ...autoScrollOptions,\n    delta: translate,\n    draggingRect: collisionRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects\n  });\n  const publicContext = useMemo(() => {\n    const context = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activatorEvent,\n      collisions,\n      containerNodeRect,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      measureDroppableContainers,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      measuringConfiguration,\n      measuringScheduled,\n      windowRect\n    };\n    return context;\n  }, [active, activeNode, activeNodeRect, activatorEvent, collisions, containerNodeRect, dragOverlay, draggableNodes, droppableContainers, droppableRects, over, measureDroppableContainers, scrollableAncestors, scrollableAncestorRects, measuringConfiguration, measuringScheduled, windowRect]);\n  const internalContext = useMemo(() => {\n    const context = {\n      activatorEvent,\n      activators,\n      active,\n      activeNodeRect,\n      ariaDescribedById: {\n        draggable: draggableDescribedById\n      },\n      dispatch,\n      draggableNodes,\n      over,\n      measureDroppableContainers\n    };\n    return context;\n  }, [activatorEvent, activators, active, activeNodeRect, dispatch, draggableDescribedById, draggableNodes, over, measureDroppableContainers]);\n  return React.createElement(DndMonitorContext.Provider, {\n    value: registerMonitorListener\n  }, React.createElement(InternalContext.Provider, {\n    value: internalContext\n  }, React.createElement(PublicContext.Provider, {\n    value: publicContext\n  }, React.createElement(ActiveDraggableContext.Provider, {\n    value: transform\n  }, children)), React.createElement(RestoreFocus, {\n    disabled: (accessibility == null ? void 0 : accessibility.restoreFocus) === false\n  })), React.createElement(Accessibility, { ...accessibility,\n    hiddenTextDescribedById: draggableDescribedById\n  }));\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll = (activeSensor == null ? void 0 : activeSensor.autoScrollEnabled) === false;\n    const autoScrollGloballyDisabled = typeof autoScroll === 'object' ? autoScroll.enabled === false : autoScroll === false;\n    const enabled = isInitialized && !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return { ...autoScroll,\n        enabled\n      };\n    }\n\n    return {\n      enabled\n    };\n  }\n});\n\nconst NullContext = /*#__PURE__*/createContext(null);\nconst defaultRole = 'button';\nconst ID_PREFIX = 'Droppable';\nfunction useDraggable(_ref) {\n  let {\n    id,\n    data,\n    disabled = false,\n    attributes\n  } = _ref;\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    activators,\n    activatorEvent,\n    active,\n    activeNodeRect,\n    ariaDescribedById,\n    draggableNodes,\n    over\n  } = useContext(InternalContext);\n  const {\n    role = defaultRole,\n    roleDescription = 'draggable',\n    tabIndex = 0\n  } = attributes != null ? attributes : {};\n  const isDragging = (active == null ? void 0 : active.id) === id;\n  const transform = useContext(isDragging ? ActiveDraggableContext : NullContext);\n  const [node, setNodeRef] = useNodeRef();\n  const [activatorNode, setActivatorNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useLatestValue(data);\n  useIsomorphicLayoutEffect(() => {\n    draggableNodes.set(id, {\n      id,\n      key,\n      node,\n      activatorNode,\n      data: dataRef\n    });\n    return () => {\n      const node = draggableNodes.get(id);\n\n      if (node && node.key === key) {\n        draggableNodes.delete(id);\n      }\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [draggableNodes, id]);\n  const memoizedAttributes = useMemo(() => ({\n    role,\n    tabIndex,\n    'aria-disabled': disabled,\n    'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n    'aria-roledescription': roleDescription,\n    'aria-describedby': ariaDescribedById.draggable\n  }), [disabled, role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]);\n  return {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes: memoizedAttributes,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    transform\n  };\n}\n\nfunction useDndContext() {\n  return useContext(PublicContext);\n}\n\nconst ID_PREFIX$1 = 'Droppable';\nconst defaultResizeObserverConfig = {\n  timeout: 25\n};\nfunction useDroppable(_ref) {\n  let {\n    data,\n    disabled = false,\n    id,\n    resizeObserverConfig\n  } = _ref;\n  const key = useUniqueId(ID_PREFIX$1);\n  const {\n    active,\n    dispatch,\n    over,\n    measureDroppableContainers\n  } = useContext(InternalContext);\n  const previous = useRef({\n    disabled\n  });\n  const resizeObserverConnected = useRef(false);\n  const rect = useRef(null);\n  const callbackId = useRef(null);\n  const {\n    disabled: resizeObserverDisabled,\n    updateMeasurementsFor,\n    timeout: resizeObserverTimeout\n  } = { ...defaultResizeObserverConfig,\n    ...resizeObserverConfig\n  };\n  const ids = useLatestValue(updateMeasurementsFor != null ? updateMeasurementsFor : id);\n  const handleResize = useCallback(() => {\n    if (!resizeObserverConnected.current) {\n      // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,\n      // assuming the element is rendered and displayed.\n      resizeObserverConnected.current = true;\n      return;\n    }\n\n    if (callbackId.current != null) {\n      clearTimeout(callbackId.current);\n    }\n\n    callbackId.current = setTimeout(() => {\n      measureDroppableContainers(Array.isArray(ids.current) ? ids.current : [ids.current]);\n      callbackId.current = null;\n    }, resizeObserverTimeout);\n  }, //eslint-disable-next-line react-hooks/exhaustive-deps\n  [resizeObserverTimeout]);\n  const resizeObserver = useResizeObserver({\n    callback: handleResize,\n    disabled: resizeObserverDisabled || !active\n  });\n  const handleNodeChange = useCallback((newElement, previousElement) => {\n    if (!resizeObserver) {\n      return;\n    }\n\n    if (previousElement) {\n      resizeObserver.unobserve(previousElement);\n      resizeObserverConnected.current = false;\n    }\n\n    if (newElement) {\n      resizeObserver.observe(newElement);\n    }\n  }, [resizeObserver]);\n  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);\n  const dataRef = useLatestValue(data);\n  useEffect(() => {\n    if (!resizeObserver || !nodeRef.current) {\n      return;\n    }\n\n    resizeObserver.disconnect();\n    resizeObserverConnected.current = false;\n    resizeObserver.observe(nodeRef.current);\n  }, [nodeRef, resizeObserver]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: Action.RegisterDroppable,\n      element: {\n        id,\n        key,\n        disabled,\n        node: nodeRef,\n        rect,\n        data: dataRef\n      }\n    });\n    return () => dispatch({\n      type: Action.UnregisterDroppable,\n      key,\n      id\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [id]);\n  useEffect(() => {\n    if (disabled !== previous.current.disabled) {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        key,\n        disabled\n      });\n      previous.current.disabled = disabled;\n    }\n  }, [id, key, disabled, dispatch]);\n  return {\n    active,\n    rect,\n    isOver: (over == null ? void 0 : over.id) === id,\n    node: nodeRef,\n    over,\n    setNodeRef\n  };\n}\n\nfunction AnimationManager(_ref) {\n  let {\n    animation,\n    children\n  } = _ref;\n  const [clonedChildren, setClonedChildren] = useState(null);\n  const [element, setElement] = useState(null);\n  const previousChildren = usePrevious(children);\n\n  if (!children && !clonedChildren && previousChildren) {\n    setClonedChildren(previousChildren);\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    const key = clonedChildren == null ? void 0 : clonedChildren.key;\n    const id = clonedChildren == null ? void 0 : clonedChildren.props.id;\n\n    if (key == null || id == null) {\n      setClonedChildren(null);\n      return;\n    }\n\n    Promise.resolve(animation(id, element)).then(() => {\n      setClonedChildren(null);\n    });\n  }, [animation, clonedChildren, element]);\n  return React.createElement(React.Fragment, null, children, clonedChildren ? cloneElement(clonedChildren, {\n    ref: setElement\n  }) : null);\n}\n\nconst defaultTransform = {\n  x: 0,\n  y: 0,\n  scaleX: 1,\n  scaleY: 1\n};\nfunction NullifiedContextProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  return React.createElement(InternalContext.Provider, {\n    value: defaultInternalContext\n  }, React.createElement(ActiveDraggableContext.Provider, {\n    value: defaultTransform\n  }, children));\n}\n\nconst baseStyles = {\n  position: 'fixed',\n  touchAction: 'none'\n};\n\nconst defaultTransition = activatorEvent => {\n  const isKeyboardActivator = isKeyboardEvent(activatorEvent);\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nconst PositionedOverlay = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    as,\n    activatorEvent,\n    adjustScale,\n    children,\n    className,\n    rect,\n    style,\n    transform,\n    transition = defaultTransition\n  } = _ref;\n\n  if (!rect) {\n    return null;\n  }\n\n  const scaleAdjustedTransform = adjustScale ? transform : { ...transform,\n    scaleX: 1,\n    scaleY: 1\n  };\n  const styles = { ...baseStyles,\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    left: rect.left,\n    transform: CSS.Transform.toString(scaleAdjustedTransform),\n    transformOrigin: adjustScale && activatorEvent ? getRelativeTransformOrigin(activatorEvent, rect) : undefined,\n    transition: typeof transition === 'function' ? transition(activatorEvent) : transition,\n    ...style\n  };\n  return React.createElement(as, {\n    className,\n    style: styles,\n    ref\n  }, children);\n});\n\nconst defaultDropAnimationSideEffects = options => _ref => {\n  let {\n    active,\n    dragOverlay\n  } = _ref;\n  const originalStyles = {};\n  const {\n    styles,\n    className\n  } = options;\n\n  if (styles != null && styles.active) {\n    for (const [key, value] of Object.entries(styles.active)) {\n      if (value === undefined) {\n        continue;\n      }\n\n      originalStyles[key] = active.node.style.getPropertyValue(key);\n      active.node.style.setProperty(key, value);\n    }\n  }\n\n  if (styles != null && styles.dragOverlay) {\n    for (const [key, value] of Object.entries(styles.dragOverlay)) {\n      if (value === undefined) {\n        continue;\n      }\n\n      dragOverlay.node.style.setProperty(key, value);\n    }\n  }\n\n  if (className != null && className.active) {\n    active.node.classList.add(className.active);\n  }\n\n  if (className != null && className.dragOverlay) {\n    dragOverlay.node.classList.add(className.dragOverlay);\n  }\n\n  return function cleanup() {\n    for (const [key, value] of Object.entries(originalStyles)) {\n      active.node.style.setProperty(key, value);\n    }\n\n    if (className != null && className.active) {\n      active.node.classList.remove(className.active);\n    }\n  };\n};\n\nconst defaultKeyframeResolver = _ref2 => {\n  let {\n    transform: {\n      initial,\n      final\n    }\n  } = _ref2;\n  return [{\n    transform: CSS.Transform.toString(initial)\n  }, {\n    transform: CSS.Transform.toString(final)\n  }];\n};\n\nconst defaultDropAnimationConfiguration = {\n  duration: 250,\n  easing: 'ease',\n  keyframes: defaultKeyframeResolver,\n  sideEffects: /*#__PURE__*/defaultDropAnimationSideEffects({\n    styles: {\n      active: {\n        opacity: '0'\n      }\n    }\n  })\n};\nfunction useDropAnimation(_ref3) {\n  let {\n    config,\n    draggableNodes,\n    droppableContainers,\n    measuringConfiguration\n  } = _ref3;\n  return useEvent((id, node) => {\n    if (config === null) {\n      return;\n    }\n\n    const activeDraggable = draggableNodes.get(id);\n\n    if (!activeDraggable) {\n      return;\n    }\n\n    const activeNode = activeDraggable.node.current;\n\n    if (!activeNode) {\n      return;\n    }\n\n    const measurableNode = getMeasurableNode(node);\n\n    if (!measurableNode) {\n      return;\n    }\n\n    const {\n      transform\n    } = getWindow(node).getComputedStyle(node);\n    const parsedTransform = parseTransform(transform);\n\n    if (!parsedTransform) {\n      return;\n    }\n\n    const animation = typeof config === 'function' ? config : createDefaultDropAnimation(config);\n    scrollIntoViewIfNeeded(activeNode, measuringConfiguration.draggable.measure);\n    return animation({\n      active: {\n        id,\n        data: activeDraggable.data,\n        node: activeNode,\n        rect: measuringConfiguration.draggable.measure(activeNode)\n      },\n      draggableNodes,\n      dragOverlay: {\n        node,\n        rect: measuringConfiguration.dragOverlay.measure(measurableNode)\n      },\n      droppableContainers,\n      measuringConfiguration,\n      transform: parsedTransform\n    });\n  });\n}\n\nfunction createDefaultDropAnimation(options) {\n  const {\n    duration,\n    easing,\n    sideEffects,\n    keyframes\n  } = { ...defaultDropAnimationConfiguration,\n    ...options\n  };\n  return _ref4 => {\n    let {\n      active,\n      dragOverlay,\n      transform,\n      ...rest\n    } = _ref4;\n\n    if (!duration) {\n      // Do not animate if animation duration is zero.\n      return;\n    }\n\n    const delta = {\n      x: dragOverlay.rect.left - active.rect.left,\n      y: dragOverlay.rect.top - active.rect.top\n    };\n    const scale = {\n      scaleX: transform.scaleX !== 1 ? active.rect.width * transform.scaleX / dragOverlay.rect.width : 1,\n      scaleY: transform.scaleY !== 1 ? active.rect.height * transform.scaleY / dragOverlay.rect.height : 1\n    };\n    const finalTransform = {\n      x: transform.x - delta.x,\n      y: transform.y - delta.y,\n      ...scale\n    };\n    const animationKeyframes = keyframes({ ...rest,\n      active,\n      dragOverlay,\n      transform: {\n        initial: transform,\n        final: finalTransform\n      }\n    });\n    const [firstKeyframe] = animationKeyframes;\n    const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];\n\n    if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) {\n      // The start and end keyframes are the same, infer that there is no animation needed.\n      return;\n    }\n\n    const cleanup = sideEffects == null ? void 0 : sideEffects({\n      active,\n      dragOverlay,\n      ...rest\n    });\n    const animation = dragOverlay.node.animate(animationKeyframes, {\n      duration,\n      easing,\n      fill: 'forwards'\n    });\n    return new Promise(resolve => {\n      animation.onfinish = () => {\n        cleanup == null ? void 0 : cleanup();\n        resolve();\n      };\n    });\n  };\n}\n\nlet key = 0;\nfunction useKey(id) {\n  return useMemo(() => {\n    if (id == null) {\n      return;\n    }\n\n    key++;\n    return key;\n  }, [id]);\n}\n\nconst DragOverlay = /*#__PURE__*/React.memo(_ref => {\n  let {\n    adjustScale = false,\n    children,\n    dropAnimation: dropAnimationConfig,\n    style,\n    transition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999\n  } = _ref;\n  const {\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggableNodes,\n    droppableContainers,\n    dragOverlay,\n    over,\n    measuringConfiguration,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect\n  } = useDndContext();\n  const transform = useContext(ActiveDraggableContext);\n  const key = useKey(active == null ? void 0 : active.id);\n  const modifiedTransform = applyModifiers(modifiers, {\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect: dragOverlay.rect,\n    over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    transform,\n    windowRect\n  });\n  const initialRect = useInitialValue(activeNodeRect);\n  const dropAnimation = useDropAnimation({\n    config: dropAnimationConfig,\n    draggableNodes,\n    droppableContainers,\n    measuringConfiguration\n  }); // We need to wait for the active node to be measured before connecting the drag overlay ref\n  // otherwise collisions can be computed against a mispositioned drag overlay\n\n  const ref = initialRect ? dragOverlay.setRef : undefined;\n  return React.createElement(NullifiedContextProvider, null, React.createElement(AnimationManager, {\n    animation: dropAnimation\n  }, active && key ? React.createElement(PositionedOverlay, {\n    key: key,\n    id: active.id,\n    ref: ref,\n    as: wrapperElement,\n    activatorEvent: activatorEvent,\n    adjustScale: adjustScale,\n    className: className,\n    transition: transition,\n    rect: initialRect,\n    style: {\n      zIndex,\n      ...style\n    },\n    transform: modifiedTransform\n  }, children) : null));\n});\n\nexport { AutoScrollActivator, DndContext, DragOverlay, KeyboardCode, KeyboardSensor, MeasuringFrequency, MeasuringStrategy, MouseSensor, PointerSensor, TouchSensor, TraversalOrder, applyModifiers, closestCenter, closestCorners, defaultAnnouncements, defaultCoordinates, defaultDropAnimationConfiguration as defaultDropAnimation, defaultDropAnimationSideEffects, defaultScreenReaderInstructions, getClientRect, getFirstCollision, getScrollableAncestors, pointerWithin, rectIntersection, useDndContext, useDndMonitor, useDraggable, useDroppable, useSensor, useSensors };\n//# sourceMappingURL=core.esm.js.map\n","import React, { useMemo, useRef, useEffect, useState, useContext } from 'react';\nimport { useDndContext, getClientRect, useDroppable, useDraggable, closestCorners, getFirstCollision, getScrollableAncestors, KeyboardCode } from '@dnd-kit/core';\nimport { useUniqueId, useIsomorphicLayoutEffect, CSS, useCombinedRefs, isKeyboardEvent, subtract } from '@dnd-kit/utilities';\n\n/**\r\n * Move an array item to a different position. Returns a new array with the item moved to the new position.\r\n */\nfunction arrayMove(array, from, to) {\n  const newArray = array.slice();\n  newArray.splice(to < 0 ? newArray.length + to : to, 0, newArray.splice(from, 1)[0]);\n  return newArray;\n}\n\n/**\r\n * Swap an array item to a different position. Returns a new array with the item swapped to the new position.\r\n */\nfunction arraySwap(array, from, to) {\n  const newArray = array.slice();\n  newArray[from] = array[to];\n  newArray[to] = array[from];\n  return newArray;\n}\n\nfunction getSortedRects(items, rects) {\n  return items.reduce((accumulator, id, index) => {\n    const rect = rects.get(id);\n\n    if (rect) {\n      accumulator[index] = rect;\n    }\n\n    return accumulator;\n  }, Array(items.length));\n}\n\nfunction isValidIndex(index) {\n  return index !== null && index >= 0;\n}\n\nfunction itemsEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction normalizeDisabled(disabled) {\n  if (typeof disabled === 'boolean') {\n    return {\n      draggable: disabled,\n      droppable: disabled\n    };\n  }\n\n  return disabled;\n}\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1\n};\nconst horizontalListSortingStrategy = _ref => {\n  var _rects$activeIndex;\n\n  let {\n    rects,\n    activeNodeRect: fallbackActiveRect,\n    activeIndex,\n    overIndex,\n    index\n  } = _ref;\n  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index === activeIndex) {\n    const newIndexRect = rects[overIndex];\n\n    if (!newIndexRect) {\n      return null;\n    }\n\n    return {\n      x: activeIndex < overIndex ? newIndexRect.left + newIndexRect.width - (activeNodeRect.left + activeNodeRect.width) : newIndexRect.left - activeNodeRect.left,\n      y: 0,\n      ...defaultScale\n    };\n  }\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: -activeNodeRect.width - itemGap,\n      y: 0,\n      ...defaultScale\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: activeNodeRect.width + itemGap,\n      y: 0,\n      ...defaultScale\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale\n  };\n};\n\nfunction getItemGap(rects, index, activeIndex) {\n  const currentRect = rects[index];\n  const previousRect = rects[index - 1];\n  const nextRect = rects[index + 1];\n\n  if (!currentRect || !previousRect && !nextRect) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect ? currentRect.left - (previousRect.left + previousRect.width) : nextRect.left - (currentRect.left + currentRect.width);\n  }\n\n  return nextRect ? nextRect.left - (currentRect.left + currentRect.width) : currentRect.left - (previousRect.left + previousRect.width);\n}\n\nconst rectSortingStrategy = _ref => {\n  let {\n    rects,\n    activeIndex,\n    overIndex,\n    index\n  } = _ref;\n  const newRects = arrayMove(rects, overIndex, activeIndex);\n  const oldRect = rects[index];\n  const newRect = newRects[index];\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height\n  };\n};\n\nconst rectSwappingStrategy = _ref => {\n  let {\n    activeIndex,\n    index,\n    rects,\n    overIndex\n  } = _ref;\n  let oldRect;\n  let newRect;\n\n  if (index === activeIndex) {\n    oldRect = rects[index];\n    newRect = rects[overIndex];\n  }\n\n  if (index === overIndex) {\n    oldRect = rects[index];\n    newRect = rects[activeIndex];\n  }\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height\n  };\n};\n\n// To-do: We should be calculating scale transformation\nconst defaultScale$1 = {\n  scaleX: 1,\n  scaleY: 1\n};\nconst verticalListSortingStrategy = _ref => {\n  var _rects$activeIndex;\n\n  let {\n    activeIndex,\n    activeNodeRect: fallbackActiveRect,\n    index,\n    rects,\n    overIndex\n  } = _ref;\n  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  if (index === activeIndex) {\n    const overIndexRect = rects[overIndex];\n\n    if (!overIndexRect) {\n      return null;\n    }\n\n    return {\n      x: 0,\n      y: activeIndex < overIndex ? overIndexRect.top + overIndexRect.height - (activeNodeRect.top + activeNodeRect.height) : overIndexRect.top - activeNodeRect.top,\n      ...defaultScale$1\n    };\n  }\n\n  const itemGap = getItemGap$1(rects, index, activeIndex);\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: 0,\n      y: -activeNodeRect.height - itemGap,\n      ...defaultScale$1\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: 0,\n      y: activeNodeRect.height + itemGap,\n      ...defaultScale$1\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale$1\n  };\n};\n\nfunction getItemGap$1(clientRects, index, activeIndex) {\n  const currentRect = clientRects[index];\n  const previousRect = clientRects[index - 1];\n  const nextRect = clientRects[index + 1];\n\n  if (!currentRect) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect ? currentRect.top - (previousRect.top + previousRect.height) : nextRect ? nextRect.top - (currentRect.top + currentRect.height) : 0;\n  }\n\n  return nextRect ? nextRect.top - (currentRect.top + currentRect.height) : previousRect ? currentRect.top - (previousRect.top + previousRect.height) : 0;\n}\n\nconst ID_PREFIX = 'Sortable';\nconst Context = /*#__PURE__*/React.createContext({\n  activeIndex: -1,\n  containerId: ID_PREFIX,\n  disableTransforms: false,\n  items: [],\n  overIndex: -1,\n  useDragOverlay: false,\n  sortedRects: [],\n  strategy: rectSortingStrategy,\n  disabled: {\n    draggable: false,\n    droppable: false\n  }\n});\nfunction SortableContext(_ref) {\n  let {\n    children,\n    id,\n    items: userDefinedItems,\n    strategy = rectSortingStrategy,\n    disabled: disabledProp = false\n  } = _ref;\n  const {\n    active,\n    dragOverlay,\n    droppableRects,\n    over,\n    measureDroppableContainers\n  } = useDndContext();\n  const containerId = useUniqueId(ID_PREFIX, id);\n  const useDragOverlay = Boolean(dragOverlay.rect !== null);\n  const items = useMemo(() => userDefinedItems.map(item => typeof item === 'object' && 'id' in item ? item.id : item), [userDefinedItems]);\n  const isDragging = active != null;\n  const activeIndex = active ? items.indexOf(active.id) : -1;\n  const overIndex = over ? items.indexOf(over.id) : -1;\n  const previousItemsRef = useRef(items);\n  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);\n  const disableTransforms = overIndex !== -1 && activeIndex === -1 || itemsHaveChanged;\n  const disabled = normalizeDisabled(disabledProp);\n  useIsomorphicLayoutEffect(() => {\n    if (itemsHaveChanged && isDragging) {\n      measureDroppableContainers(items);\n    }\n  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);\n  useEffect(() => {\n    previousItemsRef.current = items;\n  }, [items]);\n  const contextValue = useMemo(() => ({\n    activeIndex,\n    containerId,\n    disabled,\n    disableTransforms,\n    items,\n    overIndex,\n    useDragOverlay,\n    sortedRects: getSortedRects(items, droppableRects),\n    strategy\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [activeIndex, containerId, disabled.draggable, disabled.droppable, disableTransforms, items, overIndex, droppableRects, useDragOverlay, strategy]);\n  return React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nconst defaultNewIndexGetter = _ref => {\n  let {\n    id,\n    items,\n    activeIndex,\n    overIndex\n  } = _ref;\n  return arrayMove(items, activeIndex, overIndex).indexOf(id);\n};\nconst defaultAnimateLayoutChanges = _ref2 => {\n  let {\n    containerId,\n    isSorting,\n    wasDragging,\n    index,\n    items,\n    newIndex,\n    previousItems,\n    previousContainerId,\n    transition\n  } = _ref2;\n\n  if (!transition || !wasDragging) {\n    return false;\n  }\n\n  if (previousItems !== items && index === newIndex) {\n    return false;\n  }\n\n  if (isSorting) {\n    return true;\n  }\n\n  return newIndex !== index && containerId === previousContainerId;\n};\nconst defaultTransition = {\n  duration: 200,\n  easing: 'ease'\n};\nconst transitionProperty = 'transform';\nconst disabledTransition = /*#__PURE__*/CSS.Transition.toString({\n  property: transitionProperty,\n  duration: 0,\n  easing: 'linear'\n});\nconst defaultAttributes = {\n  roleDescription: 'sortable'\n};\n\n/*\r\n * When the index of an item changes while sorting,\r\n * we need to temporarily disable the transforms\r\n */\n\nfunction useDerivedTransform(_ref) {\n  let {\n    disabled,\n    index,\n    node,\n    rect\n  } = _ref;\n  const [derivedTransform, setDerivedtransform] = useState(null);\n  const previousIndex = useRef(index);\n  useIsomorphicLayoutEffect(() => {\n    if (!disabled && index !== previousIndex.current && node.current) {\n      const initial = rect.current;\n\n      if (initial) {\n        const current = getClientRect(node.current, {\n          ignoreTransform: true\n        });\n        const delta = {\n          x: initial.left - current.left,\n          y: initial.top - current.top,\n          scaleX: initial.width / current.width,\n          scaleY: initial.height / current.height\n        };\n\n        if (delta.x || delta.y) {\n          setDerivedtransform(delta);\n        }\n      }\n    }\n\n    if (index !== previousIndex.current) {\n      previousIndex.current = index;\n    }\n  }, [disabled, index, node, rect]);\n  useEffect(() => {\n    if (derivedTransform) {\n      setDerivedtransform(null);\n    }\n  }, [derivedTransform]);\n  return derivedTransform;\n}\n\nfunction useSortable(_ref) {\n  let {\n    animateLayoutChanges = defaultAnimateLayoutChanges,\n    attributes: userDefinedAttributes,\n    disabled: localDisabled,\n    data: customData,\n    getNewIndex = defaultNewIndexGetter,\n    id,\n    strategy: localStrategy,\n    resizeObserverConfig,\n    transition = defaultTransition\n  } = _ref;\n  const {\n    items,\n    containerId,\n    activeIndex,\n    disabled: globalDisabled,\n    disableTransforms,\n    sortedRects,\n    overIndex,\n    useDragOverlay,\n    strategy: globalStrategy\n  } = useContext(Context);\n  const disabled = normalizeLocalDisabled(localDisabled, globalDisabled);\n  const index = items.indexOf(id);\n  const data = useMemo(() => ({\n    sortable: {\n      containerId,\n      index,\n      items\n    },\n    ...customData\n  }), [containerId, customData, index, items]);\n  const itemsAfterCurrentSortable = useMemo(() => items.slice(items.indexOf(id)), [items, id]);\n  const {\n    rect,\n    node,\n    isOver,\n    setNodeRef: setDroppableNodeRef\n  } = useDroppable({\n    id,\n    data,\n    disabled: disabled.droppable,\n    resizeObserverConfig: {\n      updateMeasurementsFor: itemsAfterCurrentSortable,\n      ...resizeObserverConfig\n    }\n  });\n  const {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes,\n    setNodeRef: setDraggableNodeRef,\n    listeners,\n    isDragging,\n    over,\n    setActivatorNodeRef,\n    transform\n  } = useDraggable({\n    id,\n    data,\n    attributes: { ...defaultAttributes,\n      ...userDefinedAttributes\n    },\n    disabled: disabled.draggable\n  });\n  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);\n  const isSorting = Boolean(active);\n  const displaceItem = isSorting && !disableTransforms && isValidIndex(activeIndex) && isValidIndex(overIndex);\n  const shouldDisplaceDragSource = !useDragOverlay && isDragging;\n  const dragSourceDisplacement = shouldDisplaceDragSource && displaceItem ? transform : null;\n  const strategy = localStrategy != null ? localStrategy : globalStrategy;\n  const finalTransform = displaceItem ? dragSourceDisplacement != null ? dragSourceDisplacement : strategy({\n    rects: sortedRects,\n    activeNodeRect,\n    activeIndex,\n    overIndex,\n    index\n  }) : null;\n  const newIndex = isValidIndex(activeIndex) && isValidIndex(overIndex) ? getNewIndex({\n    id,\n    items,\n    activeIndex,\n    overIndex\n  }) : index;\n  const activeId = active == null ? void 0 : active.id;\n  const previous = useRef({\n    activeId,\n    items,\n    newIndex,\n    containerId\n  });\n  const itemsHaveChanged = items !== previous.current.items;\n  const shouldAnimateLayoutChanges = animateLayoutChanges({\n    active,\n    containerId,\n    isDragging,\n    isSorting,\n    id,\n    index,\n    items,\n    newIndex: previous.current.newIndex,\n    previousItems: previous.current.items,\n    previousContainerId: previous.current.containerId,\n    transition,\n    wasDragging: previous.current.activeId != null\n  });\n  const derivedTransform = useDerivedTransform({\n    disabled: !shouldAnimateLayoutChanges,\n    index,\n    node,\n    rect\n  });\n  useEffect(() => {\n    if (isSorting && previous.current.newIndex !== newIndex) {\n      previous.current.newIndex = newIndex;\n    }\n\n    if (containerId !== previous.current.containerId) {\n      previous.current.containerId = containerId;\n    }\n\n    if (items !== previous.current.items) {\n      previous.current.items = items;\n    }\n  }, [isSorting, newIndex, containerId, items]);\n  useEffect(() => {\n    if (activeId === previous.current.activeId) {\n      return;\n    }\n\n    if (activeId && !previous.current.activeId) {\n      previous.current.activeId = activeId;\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      previous.current.activeId = activeId;\n    }, 50);\n    return () => clearTimeout(timeoutId);\n  }, [activeId]);\n  return {\n    active,\n    activeIndex,\n    attributes,\n    data,\n    rect,\n    index,\n    newIndex,\n    items,\n    isOver,\n    isSorting,\n    isDragging,\n    listeners,\n    node,\n    overIndex,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    setDroppableNodeRef,\n    setDraggableNodeRef,\n    transform: derivedTransform != null ? derivedTransform : finalTransform,\n    transition: getTransition()\n  };\n\n  function getTransition() {\n    if ( // Temporarily disable transitions for a single frame to set up derived transforms\n    derivedTransform || // Or to prevent items jumping to back to their \"new\" position when items change\n    itemsHaveChanged && previous.current.newIndex === index) {\n      return disabledTransition;\n    }\n\n    if (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent) || !transition) {\n      return undefined;\n    }\n\n    if (isSorting || shouldAnimateLayoutChanges) {\n      return CSS.Transition.toString({ ...transition,\n        property: transitionProperty\n      });\n    }\n\n    return undefined;\n  }\n}\n\nfunction normalizeLocalDisabled(localDisabled, globalDisabled) {\n  var _localDisabled$dragga, _localDisabled$droppa;\n\n  if (typeof localDisabled === 'boolean') {\n    return {\n      draggable: localDisabled,\n      // Backwards compatibility\n      droppable: false\n    };\n  }\n\n  return {\n    draggable: (_localDisabled$dragga = localDisabled == null ? void 0 : localDisabled.draggable) != null ? _localDisabled$dragga : globalDisabled.draggable,\n    droppable: (_localDisabled$droppa = localDisabled == null ? void 0 : localDisabled.droppable) != null ? _localDisabled$droppa : globalDisabled.droppable\n  };\n}\n\nfunction hasSortableData(entry) {\n  if (!entry) {\n    return false;\n  }\n\n  const data = entry.data.current;\n\n  if (data && 'sortable' in data && typeof data.sortable === 'object' && 'containerId' in data.sortable && 'items' in data.sortable && 'index' in data.sortable) {\n    return true;\n  }\n\n  return false;\n}\n\nconst directions = [KeyboardCode.Down, KeyboardCode.Right, KeyboardCode.Up, KeyboardCode.Left];\nconst sortableKeyboardCoordinates = (event, _ref) => {\n  let {\n    context: {\n      active,\n      collisionRect,\n      droppableRects,\n      droppableContainers,\n      over,\n      scrollableAncestors\n    }\n  } = _ref;\n\n  if (directions.includes(event.code)) {\n    event.preventDefault();\n\n    if (!active || !collisionRect) {\n      return;\n    }\n\n    const filteredContainers = [];\n    droppableContainers.getEnabled().forEach(entry => {\n      if (!entry || entry != null && entry.disabled) {\n        return;\n      }\n\n      const rect = droppableRects.get(entry.id);\n\n      if (!rect) {\n        return;\n      }\n\n      switch (event.code) {\n        case KeyboardCode.Down:\n          if (collisionRect.top < rect.top) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n\n        case KeyboardCode.Up:\n          if (collisionRect.top > rect.top) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n\n        case KeyboardCode.Left:\n          if (collisionRect.left > rect.left) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n\n        case KeyboardCode.Right:\n          if (collisionRect.left < rect.left) {\n            filteredContainers.push(entry);\n          }\n\n          break;\n      }\n    });\n    const collisions = closestCorners({\n      active,\n      collisionRect: collisionRect,\n      droppableRects,\n      droppableContainers: filteredContainers,\n      pointerCoordinates: null\n    });\n    let closestId = getFirstCollision(collisions, 'id');\n\n    if (closestId === (over == null ? void 0 : over.id) && collisions.length > 1) {\n      closestId = collisions[1].id;\n    }\n\n    if (closestId != null) {\n      const activeDroppable = droppableContainers.get(active.id);\n      const newDroppable = droppableContainers.get(closestId);\n      const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;\n      const newNode = newDroppable == null ? void 0 : newDroppable.node.current;\n\n      if (newNode && newRect && activeDroppable && newDroppable) {\n        const newScrollAncestors = getScrollableAncestors(newNode);\n        const hasDifferentScrollAncestors = newScrollAncestors.some((element, index) => scrollableAncestors[index] !== element);\n        const hasSameContainer = isSameContainer(activeDroppable, newDroppable);\n        const isAfterActive = isAfter(activeDroppable, newDroppable);\n        const offset = hasDifferentScrollAncestors || !hasSameContainer ? {\n          x: 0,\n          y: 0\n        } : {\n          x: isAfterActive ? collisionRect.width - newRect.width : 0,\n          y: isAfterActive ? collisionRect.height - newRect.height : 0\n        };\n        const rectCoordinates = {\n          x: newRect.left,\n          y: newRect.top\n        };\n        const newCoordinates = offset.x && offset.y ? rectCoordinates : subtract(rectCoordinates, offset);\n        return newCoordinates;\n      }\n    }\n  }\n\n  return undefined;\n};\n\nfunction isSameContainer(a, b) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  return a.data.current.sortable.containerId === b.data.current.sortable.containerId;\n}\n\nfunction isAfter(a, b) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  if (!isSameContainer(a, b)) {\n    return false;\n  }\n\n  return a.data.current.sortable.index < b.data.current.sortable.index;\n}\n\nexport { SortableContext, arrayMove, arraySwap, defaultAnimateLayoutChanges, defaultNewIndexGetter, hasSortableData, horizontalListSortingStrategy, rectSortingStrategy, rectSwappingStrategy, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy };\n//# sourceMappingURL=sortable.esm.js.map\n"],"names":["useCombinedRefs","_len","refs","_key","useMemo","node","ref","canUseDOM","isWindow","element","elementString","isNode","getWindow","target","_target$ownerDocument","_target$ownerDocument2","isDocument","Document","isHTMLElement","isSVGElement","getOwnerDocument","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useEvent","handler","handlerRef","useRef","useCallback","args","useInterval","intervalRef","set","listener","duration","clear","useLatestValue","value","dependencies","valueRef","useLazyMemo","callback","newValue","useNodeRef","onChange","onChangeHandler","setNodeRef","usePrevious","ids","useUniqueId","prefix","id","createAdjustmentFn","modifier","object","adjustments","accumulator","adjustment","entries","key","valueAdjustment","add","subtract","hasViewportRelativeCoordinates","event","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","getEventCoordinates","x","y","CSS","transform","scaleX","scaleY","_ref","property","easing","SELECTOR","findFirstFocusableNode","hiddenStyles","HiddenText","React","visuallyHidden","LiveRegion","announcement","useAnnouncement","setAnnouncement","useState","DndMonitorContext","createContext","useDndMonitor","registerListener","useContext","useDndMonitorProvider","listeners","type","_listener$type","defaultScreenReaderInstructions","defaultAnnouncements","active","_ref2","over","_ref3","_ref4","Accessibility","announcements","container","hiddenTextDescribedById","screenReaderInstructions","announce","liveRegionId","mounted","setMounted","_ref5","_ref6","markup","createPortal","Action","noop","useSensor","sensor","options","useSensors","sensors","defaultCoordinates","distanceBetween","p1","p2","getRelativeTransformOrigin","rect","eventCoordinates","transformOrigin","sortCollisionsAsc","a","b","sortCollisionsDesc","cornersOfRectangle","left","top","height","width","getFirstCollision","collisions","firstCollision","centerOfRectangle","closestCenter","collisionRect","droppableRects","droppableContainers","centerRect","droppableContainer","distBetween","closestCorners","corners","rectCorners","distances","corner","index","effectiveDistance","getIntersectionRatio","entry","right","bottom","targetArea","entryArea","intersectionArea","intersectionRatio","rectIntersection","adjustScale","rect1","rect2","getRectDelta","createRectAdjustmentFn","acc","getAdjustedRect","parseTransform","transformArray","inverseTransform","parsedTransform","translateX","translateY","w","h","defaultOptions","getClientRect","getTransformAgnosticClientRect","getWindowClientRect","isFixed","computedStyle","isScrollable","overflowRegex","getScrollableAncestors","limit","scrollParents","findScrollableAncestors","getFirstScrollableAncestor","firstScrollableAncestor","getScrollableElement","getScrollXCoordinate","getScrollYCoordinate","getScrollCoordinates","Direction","isDocumentScrollingElement","getScrollPosition","scrollingContainer","minScroll","dimensions","maxScroll","isTop","isLeft","isBottom","isRight","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","direction","speed","threshold","getScrollElementRect","innerWidth","innerHeight","getScrollOffsets","scrollableAncestors","getScrollXOffset","getScrollYOffset","scrollIntoViewIfNeeded","measure","properties","Rect","scrollOffsets","axis","keys","getScrollOffset","currentOffsets","scrollOffsetsDeltla","Listeners","_this$target","eventName","_this$target2","getEventListenerTarget","EventTarget","hasExceededDistance","delta","measurement","dx","dy","EventName","preventDefault","stopPropagation","KeyboardCode","defaultKeyboardCodes","defaultKeyboardCoordinateGetter","currentCoordinates","KeyboardSensor","props","activeNode","onStart","context","keyboardCodes","coordinateGetter","scrollBehavior","code","newCoordinates","coordinatesDelta","scrollDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","newScrollCoordinates","canScrollToNewCoordinates","coordinates","onMove","onEnd","onCancel","onActivation","activator","isDistanceConstraint","constraint","isDelayConstraint","AbstractPointerSensor","events","listenerTarget","_getEventCoordinates","activationConstraint","initialCoordinates","_getEventCoordinates2","activated","_this$document$getSel","PointerSensor","events$1","MouseButton","MouseSensor","events$2","TouchSensor","touches","AutoScrollActivator","TraversalOrder","useAutoScroller","canScroll","draggingRect","enabled","interval","order","pointerCoordinates","scrollableAncestorRects","scrollIntent","useScrollIntent","setAutoScrollInterval","clearAutoScrollInterval","scrollSpeed","scrollDirection","scrollContainerRef","autoScroll","scrollLeft","scrollTop","sortedScrollableAncestors","defaultScrollIntent","disabled","previousDelta","previousIntent","useCachedNode","draggableNodes","draggableNode","cachedNode","useCombineActivators","getSyntheticHandler","Sensor","sensorActivators","MeasuringStrategy","MeasuringFrequency","defaultValue","useDroppableMeasuring","containers","dragging","config","queue","setQueue","frequency","strategy","containersRef","isDisabled","disabledRef","measureDroppableContainers","timeoutId","previousValue","map","useInitialValue","computeFn","useInitialRect","useMutationObserver","handleMutations","mutationObserver","MutationObserver","useResizeObserver","handleResize","resizeObserver","ResizeObserver","defaultMeasure","useRect","fallbackRect","measureRect","useReducer","reducer","records","record","currentRect","newRect","useRectDelta","initialRect","defaultValue$1","useScrollableAncestors","previousNode","ancestors","useScrollOffsets","elements","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","scrollingElement","previousElements","cleanup","scrollableElement","useScrollOffsetsDelta","initialScrollOffsets","hasScrollOffsets","useSensorSetup","teardownFns","teardown","useSyntheticListeners","useWindowRect","defaultValue$2","useRects","firstElement","windowRect","rects","measureRects","getMeasurableNode","firstChild","useDragOverlayMeasuring","setRect","handleNodeChange","nodeRef","setRef","defaultSensors","defaultData","defaultMeasuringConfiguration","DroppableContainersMap","_super$get","_this$get$node$curren","_this$get","defaultPublicContext","defaultInternalContext","InternalContext","PublicContext","getInitialState","state","action","RestoreFocus","activatorEvent","previousActivatorEvent","previousActiveId","activatorNode","focusableNode","applyModifiers","modifiers","useMeasuringConfiguration","useLayoutShiftScrollCompensation","initialized","rectDelta","ActiveDraggableContext","Status","DndContext","memo","_sensorContext$curren","_dragOverlay$nodeRef$","_dragOverlay$rect","_over$rect","accessibility","children","collisionDetection","measuring","store","dispatch","dispatchMonitorEvent","registerMonitorListener","status","setStatus","isInitialized","activeId","translate","activeRects","_node$data","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","draggableDescribedById","enabledDroppableContainers","measuringConfiguration","measuringScheduled","activationCoordinates","autoScrollOptions","getAutoScrollerOptions","initialActiveNodeRect","activeNodeRect","containerNodeRect","sensorContext","overNode","dragOverlay","draggingNode","draggingNodeRect","usesDragOverlay","nodeRectDelta","modifiedTranslate","scrollAdjustment","activeNodeScrollDelta","scrollAdjustedTranslate","overId","setOver","appliedTranslate","instantiateSensor","sensorInstance","onDragStart","unstable_batchedUpdates","createHandler","cancelDrop","bindActivatorToSensorInstantiator","nativeEvent","activeDraggableNode","activationContext","activators","onDragMove","onDragOver","overContainer","publicContext","internalContext","activeSensorDisablesAutoscroll","autoScrollGloballyDisabled","NullContext","defaultRole","ID_PREFIX","useDraggable","data","attributes","ariaDescribedById","role","roleDescription","tabIndex","isDragging","setActivatorNodeRef","dataRef","memoizedAttributes","useDndContext","ID_PREFIX$1","defaultResizeObserverConfig","useDroppable","resizeObserverConfig","previous","resizeObserverConnected","callbackId","resizeObserverDisabled","updateMeasurementsFor","resizeObserverTimeout","newElement","previousElement","AnimationManager","animation","clonedChildren","setClonedChildren","setElement","previousChildren","cloneElement","defaultTransform","NullifiedContextProvider","baseStyles","defaultTransition","PositionedOverlay","forwardRef","as","className","style","transition","scaleAdjustedTransform","styles","defaultDropAnimationSideEffects","originalStyles","defaultKeyframeResolver","initial","final","defaultDropAnimationConfiguration","useDropAnimation","activeDraggable","measurableNode","createDefaultDropAnimation","sideEffects","keyframes","rest","scale","finalTransform","animationKeyframes","firstKeyframe","lastKeyframe","resolve","useKey","DragOverlay","dropAnimationConfig","wrapperElement","zIndex","modifiedTransform","dropAnimation","arrayMove","array","from","to","newArray","getSortedRects","items","isValidIndex","itemsEqual","i","normalizeDisabled","rectSortingStrategy","activeIndex","overIndex","newRects","oldRect","defaultScale$1","verticalListSortingStrategy","_rects$activeIndex","fallbackActiveRect","overIndexRect","itemGap","getItemGap$1","clientRects","previousRect","nextRect","Context","SortableContext","userDefinedItems","disabledProp","containerId","useDragOverlay","item","previousItemsRef","itemsHaveChanged","disableTransforms","contextValue","defaultNewIndexGetter","defaultAnimateLayoutChanges","isSorting","wasDragging","newIndex","previousItems","previousContainerId","transitionProperty","disabledTransition","defaultAttributes","useDerivedTransform","derivedTransform","setDerivedtransform","previousIndex","current","useSortable","animateLayoutChanges","userDefinedAttributes","localDisabled","customData","getNewIndex","localStrategy","globalDisabled","sortedRects","globalStrategy","normalizeLocalDisabled","itemsAfterCurrentSortable","isOver","setDroppableNodeRef","setDraggableNodeRef","displaceItem","shouldDisplaceDragSource","dragSourceDisplacement","shouldAnimateLayoutChanges","getTransition","_localDisabled$dragga","_localDisabled$droppa","hasSortableData","directions","sortableKeyboardCoordinates","filteredContainers","closestId","activeDroppable","newDroppable","newNode","hasDifferentScrollAncestors","hasSameContainer","isSameContainer","isAfterActive","isAfter","offset","rectCoordinates"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}