import{j as I}from"./jsx-runtime-f8a6c6ea.js";import{r as l}from"./index-5284b0bf.js";import{f as F,u as k,a as K,b as h,c as R,r as i,e as U,v as A,W as D,d as G,g as Q,h as X,m as Z,i as $}from"./Window-c2725e0b.js";import{L as ee}from"./ListItem-73a65083.js";const x=l.forwardRef(({children:c,overscan:g=4,initialItemSize:T,initialItemCount:q,horizontal:L,mode:y,cache:E,element:W=D,itemElement:j="div",onScroll:H,onScrollStop:M,onRangeChange:b,...m},O)=>{const d=l.useMemo(()=>F(c),[c]),a=d.length,v=k(H),S=k(M),[N,J]=l.useState(!1),[t,_,s,r,P]=K(()=>{const e=!!L,o=y==="rtl",n=G(a,T,q,y==="reverse",u=>{J(u),u||S[i]&&S[i]()},E,u=>{v[i]&&v[i](u)});return[n,Q(n,e),X(n,e,o),e,o]});t._updateCacheLength(a);const[p,f]=h(t,t._getRange),Y=h(t,t._getJumpCount),C=h(t,t._getCorrectedScrollSize,!0),z=l.useRef(null);R(()=>{const e=z[i],o=_._observeRoot(e),n=s._initRoot(e);return()=>{o(),n()}},[]),R(()=>{const e=t._flushJump();e&&s._fixScrollJump(e)},[Y]),l.useEffect(()=>{b&&b({start:p,end:f,count:a})},[p,f]),l.useImperativeHandle(O,()=>({get cache(){return t._getCache()},get scrollOffset(){return t._getScrollOffset()},get scrollSize(){return s._getActualScrollSize()},get viewportSize(){return t._getViewportSize()},scrollToIndex:s._scrollToIndex,scrollTo:s._scrollTo,scrollBy(e){s._scrollTo(t._getScrollOffset()+e)}}),[]);const V=Z(p-g,0),w=$(f+g,a-1),B=l.useMemo(()=>{const e=[];for(let o=V;o<=w;o++){const n=d[o];U(n)&&e.push(I(ee,{_resizer:_,_store:t,_index:o,_element:j,_children:n,_isHorizontal:r,_isRtl:P},n.key||o))}return e},[d,V,w]);return I(W,{ref:z,width:r?C:void 0,height:r?void 0:C,scrolling:N,attrs:l.useMemo(()=>({...m,style:{overflow:r?"auto hidden":"hidden auto",display:r?"inline-block":"block",contain:"strict",width:"100%",height:"100%",padding:0,margin:0,...m.style}}),A(m)),children:B})});try{x.displayName="VList",x.__docgenInfo={description:"Virtualized list component. See {@link VListProps} and {@link VListHandle}.",displayName:"VList",props:{children:{defaultValue:null,description:"Elements rendered by this component.",name:"children",required:!0,type:{name:"ReactNode"}},overscan:{defaultValue:{value:"4"},description:`Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.
@defaultValue 4`,name:"overscan",required:!1,type:{name:"number"}},initialItemSize:{defaultValue:null,description:`Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.

- If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.
- If set, you can opt out estimation and use the value as initial item size.`,name:"initialItemSize",required:!1,type:{name:"number"}},initialItemCount:{defaultValue:null,description:"If set, the specified amount of items will be mounted in the initial rendering regardless of the container size. This prop is mostly for SSR.",name:"initialItemCount",required:!1,type:{name:"number"}},horizontal:{defaultValue:null,description:"If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.",name:"horizontal",required:!1,type:{name:"boolean"}},mode:{defaultValue:null,description:"Scroll modes that should be set in certain situations.\n\n- `reverse`: This mode will adjust some styles to be suitable for bottom-to-top scrolling.\n- `rtl`: You have to set this mode if you use this component under `direction: rtl` style.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"reverse"'},{value:'"rtl"'}]}},cache:{defaultValue:null,description:"You can restore cache by passing a {@link CacheSnapshot} on mount. This is useful when you want to restore scroll position after navigation. The snapshot can be obtained from {@link VListHandle.cache}.",name:"cache",required:!1,type:{name:"CacheSnapshot"}},element:{defaultValue:null,description:`Customized element type for scrollable element. This element will get {@link CustomWindowComponentProps} as props.
@defaultValue {@link Window }`,name:"element",required:!1,type:{name:"ForwardRefExoticComponent<CustomWindowComponentProps & RefAttributes<any>>"}},itemElement:{defaultValue:{value:"div"},description:`Customized element type for item element. This element will get {@link CustomItemComponentProps } as props.
@defaultValue "div"`,name:"itemElement",required:!1,type:{name:"CustomItemComponentOrElement"}},onScroll:{defaultValue:null,description:`Callback invoked whenever scroll offset changes.
@param offset Current scrollTop or scrollLeft.`,name:"onScroll",required:!1,type:{name:"(offset: number) => void"}},onScrollStop:{defaultValue:null,description:"Callback invoked when scrolling stops.",name:"onScrollStop",required:!1,type:{name:"() => void"}},onRangeChange:{defaultValue:null,description:"Callback invoked when visible items range changes.",name:"onRangeChange",required:!1,type:{name:"(payload: { start: number; end: number; count: number; }) => void"}}}}}catch{}export{x as V};
//# sourceMappingURL=VList-8e1702ac.js.map
