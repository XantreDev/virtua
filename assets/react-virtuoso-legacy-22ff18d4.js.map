{"version":3,"file":"react-virtuoso-legacy-22ff18d4.js","sources":["../../node_modules/react-virtuoso/dist/index.mjs","../../stories/comparisons/components/react-virtuoso.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst PUBLISH = 0;\nconst SUBSCRIBE = 1;\nconst RESET = 2;\nconst VALUE = 4;\nfunction compose(a, b) {\n  return (arg) => a(b(arg));\n}\nfunction thrush(arg, proc) {\n  return proc(arg);\n}\nfunction curry2to1(proc, arg1) {\n  return (arg2) => proc(arg1, arg2);\n}\nfunction curry1to0(proc, arg) {\n  return () => proc(arg);\n}\nfunction tap(arg, proc) {\n  proc(arg);\n  return arg;\n}\nfunction tup(...args) {\n  return args;\n}\nfunction call(proc) {\n  proc();\n}\nfunction always(value) {\n  return () => value;\n}\nfunction joinProc(...procs) {\n  return () => {\n    procs.map(call);\n  };\n}\nfunction isDefined(arg) {\n  return arg !== void 0;\n}\nfunction noop() {\n}\nfunction subscribe(emitter, subscription) {\n  return emitter(SUBSCRIBE, subscription);\n}\nfunction publish(publisher, value) {\n  publisher(PUBLISH, value);\n}\nfunction reset(emitter) {\n  emitter(RESET);\n}\nfunction getValue(depot) {\n  return depot(VALUE);\n}\nfunction connect(emitter, publisher) {\n  return subscribe(emitter, curry2to1(publisher, PUBLISH));\n}\nfunction handleNext(emitter, subscription) {\n  const unsub = emitter(SUBSCRIBE, (value) => {\n    unsub();\n    subscription(value);\n  });\n  return unsub;\n}\nfunction stream() {\n  const subscriptions = [];\n  return (action, arg) => {\n    switch (action) {\n      case RESET:\n        subscriptions.splice(0, subscriptions.length);\n        return;\n      case SUBSCRIBE:\n        subscriptions.push(arg);\n        return () => {\n          const indexOf = subscriptions.indexOf(arg);\n          if (indexOf > -1) {\n            subscriptions.splice(indexOf, 1);\n          }\n        };\n      case PUBLISH:\n        subscriptions.slice().forEach((subscription) => {\n          subscription(arg);\n        });\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction statefulStream(initial) {\n  let value = initial;\n  const innerSubject = stream();\n  return (action, arg) => {\n    switch (action) {\n      case SUBSCRIBE:\n        const subscription = arg;\n        subscription(value);\n        break;\n      case PUBLISH:\n        value = arg;\n        break;\n      case VALUE:\n        return value;\n    }\n    return innerSubject(action, arg);\n  };\n}\nfunction eventHandler(emitter) {\n  let unsub;\n  let currentSubscription;\n  const cleanup = () => unsub && unsub();\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (subscription) {\n          if (currentSubscription === subscription) {\n            return;\n          }\n          cleanup();\n          currentSubscription = subscription;\n          unsub = subscribe(emitter, subscription);\n          return unsub;\n        } else {\n          cleanup();\n          return noop;\n        }\n      case RESET:\n        cleanup();\n        currentSubscription = null;\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction streamFromEmitter(emitter) {\n  return tap(stream(), (stream2) => connect(emitter, stream2));\n}\nfunction statefulStreamFromEmitter(emitter, initial) {\n  return tap(statefulStream(initial), (stream2) => connect(emitter, stream2));\n}\nfunction combineOperators(...operators) {\n  return (subscriber) => {\n    return operators.reduceRight(thrush, subscriber);\n  };\n}\nfunction pipe(source, ...operators) {\n  const project = combineOperators(...operators);\n  return (action, subscription) => {\n    switch (action) {\n      case SUBSCRIBE:\n        return subscribe(source, project(subscription));\n      case RESET:\n        reset(source);\n        return;\n    }\n  };\n}\nfunction defaultComparator(previous, next) {\n  return previous === next;\n}\nfunction distinctUntilChanged(comparator = defaultComparator) {\n  let current;\n  return (done) => (next) => {\n    if (!comparator(current, next)) {\n      current = next;\n      done(next);\n    }\n  };\n}\nfunction filter(predicate) {\n  return (done) => (value) => {\n    predicate(value) && done(value);\n  };\n}\nfunction map(project) {\n  return (done) => compose(done, project);\n}\nfunction mapTo(value) {\n  return (done) => () => done(value);\n}\nfunction scan(scanner, initial) {\n  return (done) => (value) => done(initial = scanner(initial, value));\n}\nfunction skip(times) {\n  return (done) => (value) => {\n    times > 0 ? times-- : done(value);\n  };\n}\nfunction throttleTime(interval) {\n  let currentValue;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      return;\n    }\n    timeout = setTimeout(() => {\n      timeout = void 0;\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction debounceTime(interval) {\n  let currentValue;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction withLatestFrom(...sources) {\n  const values = new Array(sources.length);\n  let called = 0;\n  let pendingCall = null;\n  const allCalled = Math.pow(2, sources.length) - 1;\n  sources.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      const prevCalled = called;\n      called = called | bit;\n      values[index] = value;\n      if (prevCalled !== allCalled && called === allCalled && pendingCall) {\n        pendingCall();\n        pendingCall = null;\n      }\n    });\n  });\n  return (done) => (value) => {\n    const call2 = () => done([value].concat(values));\n    if (called === allCalled) {\n      call2();\n    } else {\n      pendingCall = call2;\n    }\n  };\n}\nfunction merge(...sources) {\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        return joinProc(...sources.map((source) => subscribe(source, subscription)));\n      case RESET:\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction duc(source, comparator = defaultComparator) {\n  return pipe(source, distinctUntilChanged(comparator));\n}\nfunction combineLatest(...emitters) {\n  const innerSubject = stream();\n  const values = new Array(emitters.length);\n  let called = 0;\n  const allCalled = Math.pow(2, emitters.length) - 1;\n  emitters.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      values[index] = value;\n      called = called | bit;\n      if (called === allCalled) {\n        publish(innerSubject, values);\n      }\n    });\n  });\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (called === allCalled) {\n          subscription(values);\n        }\n        return subscribe(innerSubject, subscription);\n      case RESET:\n        return reset(innerSubject);\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction system(constructor, dependencies = [], { singleton } = { singleton: true }) {\n  return {\n    id: id(),\n    constructor,\n    dependencies,\n    singleton\n  };\n}\nconst id = () => Symbol();\nfunction init(systemSpec) {\n  const singletons = /* @__PURE__ */ new Map();\n  const _init = ({ id: id2, constructor, dependencies, singleton }) => {\n    if (singleton && singletons.has(id2)) {\n      return singletons.get(id2);\n    }\n    const system2 = constructor(dependencies.map((e) => _init(e)));\n    if (singleton) {\n      singletons.set(id2, system2);\n    }\n    return system2;\n  };\n  return _init(systemSpec);\n}\nfunction omit(keys, obj) {\n  const result = {};\n  const index = {};\n  let idx = 0;\n  const len = keys.length;\n  while (idx < len) {\n    index[keys[idx]] = 1;\n    idx += 1;\n  }\n  for (const prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n}\nconst useIsomorphicLayoutEffect$2 = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction systemToComponent(systemSpec, map2, Root) {\n  const requiredPropNames = Object.keys(map2.required || {});\n  const optionalPropNames = Object.keys(map2.optional || {});\n  const methodNames = Object.keys(map2.methods || {});\n  const eventNames = Object.keys(map2.events || {});\n  const Context = React.createContext({});\n  function applyPropsToSystem(system2, props) {\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], false);\n    }\n    for (const requiredPropName of requiredPropNames) {\n      const stream2 = system2[map2.required[requiredPropName]];\n      publish(stream2, props[requiredPropName]);\n    }\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream2 = system2[map2.optional[optionalPropName]];\n        publish(stream2, props[optionalPropName]);\n      }\n    }\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], true);\n    }\n  }\n  function buildMethods(system2) {\n    return methodNames.reduce((acc, methodName) => {\n      acc[methodName] = (value) => {\n        const stream2 = system2[map2.methods[methodName]];\n        publish(stream2, value);\n      };\n      return acc;\n    }, {});\n  }\n  function buildEventHandlers(system2) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system2[map2.events[eventName]]);\n      return handlers;\n    }, {});\n  }\n  const Component = React.forwardRef((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren;\n    const [system2] = React.useState(() => {\n      return tap(init(systemSpec), (system22) => applyPropsToSystem(system22, props));\n    });\n    const [handlers] = React.useState(curry1to0(buildEventHandlers, system2));\n    useIsomorphicLayoutEffect$2(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName]);\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset);\n      };\n    }, [props, handlers, system2]);\n    useIsomorphicLayoutEffect$2(() => {\n      applyPropsToSystem(system2, props);\n    });\n    React.useImperativeHandle(ref, always(buildMethods(system2)));\n    return React.createElement(\n      Context.Provider,\n      { value: system2 },\n      Root ? React.createElement(\n        Root,\n        omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n        children\n      ) : children\n    );\n  });\n  const usePublisher2 = (key) => {\n    return React.useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]);\n  };\n  const useEmitterValue2 = (key) => {\n    const system2 = React.useContext(Context);\n    const source = system2[key];\n    const [value, setValue] = React.useState(curry1to0(getValue, source));\n    useIsomorphicLayoutEffect$2(\n      () => subscribe(source, (next) => {\n        if (next !== value) {\n          setValue(always(next));\n        }\n      }),\n      [source, value]\n    );\n    return value;\n  };\n  const useEmitter2 = (key, callback) => {\n    const context = React.useContext(Context);\n    const source = context[key];\n    useIsomorphicLayoutEffect$2(() => subscribe(source, callback), [callback, source]);\n  };\n  return {\n    Component,\n    usePublisher: usePublisher2,\n    useEmitterValue: useEmitterValue2,\n    useEmitter: useEmitter2\n  };\n}\nconst useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nconst useIsomorphicLayoutEffect$1 = useIsomorphicLayoutEffect;\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel2[LogLevel2[\"INFO\"] = 1] = \"INFO\";\n  LogLevel2[LogLevel2[\"WARN\"] = 2] = \"WARN\";\n  LogLevel2[LogLevel2[\"ERROR\"] = 3] = \"ERROR\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CONSOLE_METHOD_MAP = {\n  [0]: \"debug\",\n  [1]: \"log\",\n  [2]: \"warn\",\n  [3]: \"error\"\n};\nconst getGlobalThis = () => typeof globalThis === \"undefined\" ? window : globalThis;\nconst loggerSystem = system(\n  () => {\n    const logLevel = statefulStream(3);\n    const log = statefulStream((label, message, level = 1) => {\n      var _a;\n      const currentLevel = (_a = getGlobalThis()[\"VIRTUOSO_LOG_LEVEL\"]) != null ? _a : getValue(logLevel);\n      if (level >= currentLevel) {\n        console[CONSOLE_METHOD_MAP[level]](\n          \"%creact-virtuoso: %c%s %o\",\n          \"color: #0253b3; font-weight: bold\",\n          \"color: initial\",\n          label,\n          message\n        );\n      }\n    });\n    return {\n      log,\n      logLevel\n    };\n  },\n  [],\n  { singleton: true }\n);\nfunction useSizeWithElRef(callback, enabled = true) {\n  const ref = React.useRef(null);\n  let callbackRef = (_el) => {\n  };\n  if (typeof ResizeObserver !== \"undefined\") {\n    const observer = React.useMemo(() => {\n      return new ResizeObserver((entries) => {\n        const element = entries[0].target;\n        if (element.offsetParent !== null) {\n          callback(element);\n        }\n      });\n    }, [callback]);\n    callbackRef = (elRef) => {\n      if (elRef && enabled) {\n        observer.observe(elRef);\n        ref.current = elRef;\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n        ref.current = null;\n      }\n    };\n  }\n  return { ref, callbackRef };\n}\nfunction useSize(callback, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef;\n}\nfunction useChangedListContentsSizes(callback, itemSize, enabled, scrollContainerStateCallback, log, gap, customScrollParent) {\n  const memoedCallback = React.useCallback(\n    (el) => {\n      const ranges = getChangedChildSizes(el.children, itemSize, \"offsetHeight\", log);\n      let scrollableElement = el.parentElement;\n      while (!scrollableElement.dataset[\"virtuosoScroller\"]) {\n        scrollableElement = scrollableElement.parentElement;\n      }\n      const windowScrolling = scrollableElement.lastElementChild.dataset[\"viewportType\"] === \"window\";\n      const scrollTop = customScrollParent ? customScrollParent.scrollTop : windowScrolling ? window.pageYOffset || document.documentElement.scrollTop : scrollableElement.scrollTop;\n      const scrollHeight = customScrollParent ? customScrollParent.scrollHeight : windowScrolling ? document.documentElement.scrollHeight : scrollableElement.scrollHeight;\n      const viewportHeight = customScrollParent ? customScrollParent.offsetHeight : windowScrolling ? window.innerHeight : scrollableElement.offsetHeight;\n      scrollContainerStateCallback({\n        scrollTop: Math.max(scrollTop, 0),\n        scrollHeight,\n        viewportHeight\n      });\n      gap == null ? void 0 : gap(resolveGapValue$1(\"row-gap\", getComputedStyle(el).rowGap, log));\n      if (ranges !== null) {\n        callback(ranges);\n      }\n    },\n    [callback, itemSize, log, gap, customScrollParent, scrollContainerStateCallback]\n  );\n  return useSizeWithElRef(memoedCallback, enabled);\n}\nfunction getChangedChildSizes(children, itemSize, field, log) {\n  const length = children.length;\n  if (length === 0) {\n    return null;\n  }\n  const results = [];\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i);\n    if (!child || child.dataset.index === void 0) {\n      continue;\n    }\n    const index = parseInt(child.dataset.index);\n    const knownSize = parseFloat(child.dataset.knownSize);\n    const size = itemSize(child, field);\n    if (size === 0) {\n      log(\"Zero-sized element, this should not happen\", { child }, LogLevel.ERROR);\n    }\n    if (size === knownSize) {\n      continue;\n    }\n    const lastResult = results[results.length - 1];\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size });\n    } else {\n      results[results.length - 1].endIndex++;\n    }\n  }\n  return results;\n}\nfunction resolveGapValue$1(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nfunction correctItemSize(el, dimension) {\n  return Math.round(el.getBoundingClientRect()[dimension]);\n}\nfunction approximatelyEqual(num1, num2) {\n  return Math.abs(num1 - num2) < 1.01;\n}\nfunction useScrollTop(scrollContainerStateCallback, smoothScrollTargetReached, scrollerElement, scrollerRefCallback = noop, customScrollParent) {\n  const scrollerRef = React.useRef(null);\n  const scrollTopTarget = React.useRef(null);\n  const timeoutRef = React.useRef(null);\n  const handler = React.useCallback(\n    (ev) => {\n      const el = ev.target;\n      const windowScroll = el === window || el === document;\n      const scrollTop = windowScroll ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop;\n      const scrollHeight = windowScroll ? document.documentElement.scrollHeight : el.scrollHeight;\n      const viewportHeight = windowScroll ? window.innerHeight : el.offsetHeight;\n      const call2 = () => {\n        scrollContainerStateCallback({\n          scrollTop: Math.max(scrollTop, 0),\n          scrollHeight,\n          viewportHeight\n        });\n      };\n      if (ev.suppressFlushSync) {\n        call2();\n      } else {\n        ReactDOM.flushSync(call2);\n      }\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === scrollHeight - viewportHeight) {\n          scrollTopTarget.current = null;\n          smoothScrollTargetReached(true);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n            timeoutRef.current = null;\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  );\n  React.useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current;\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current);\n    handler({ target: localRef, suppressFlushSync: true });\n    localRef.addEventListener(\"scroll\", handler, { passive: true });\n    return () => {\n      scrollerRefCallback(null);\n      localRef.removeEventListener(\"scroll\", handler);\n    };\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent]);\n  function scrollToCallback(location) {\n    const scrollerElement2 = scrollerRef.current;\n    if (!scrollerElement2 || \"offsetHeight\" in scrollerElement2 && scrollerElement2.offsetHeight === 0) {\n      return;\n    }\n    const isSmooth = location.behavior === \"smooth\";\n    let offsetHeight;\n    let scrollHeight;\n    let scrollTop;\n    if (scrollerElement2 === window) {\n      scrollHeight = Math.max(correctItemSize(document.documentElement, \"height\"), document.documentElement.scrollHeight);\n      offsetHeight = window.innerHeight;\n      scrollTop = document.documentElement.scrollTop;\n    } else {\n      scrollHeight = scrollerElement2.scrollHeight;\n      offsetHeight = correctItemSize(scrollerElement2, \"height\");\n      scrollTop = scrollerElement2.scrollTop;\n    }\n    const maxScrollTop = scrollHeight - offsetHeight;\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top), 0));\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight });\n      if (isSmooth) {\n        smoothScrollTargetReached(true);\n      }\n      return;\n    }\n    if (isSmooth) {\n      scrollTopTarget.current = location.top;\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null;\n        scrollTopTarget.current = null;\n        smoothScrollTargetReached(true);\n      }, 1e3);\n    } else {\n      scrollTopTarget.current = null;\n    }\n    scrollerElement2.scrollTo(location);\n  }\n  function scrollByCallback(location) {\n    scrollerRef.current.scrollBy(location);\n  }\n  return { scrollerRef, scrollByCallback, scrollToCallback };\n}\nconst domIOSystem = system(\n  () => {\n    const scrollContainerState = stream();\n    const scrollTop = stream();\n    const deviation = statefulStream(0);\n    const smoothScrollTargetReached = stream();\n    const statefulScrollTop = statefulStream(0);\n    const viewportHeight = stream();\n    const scrollHeight = stream();\n    const headerHeight = statefulStream(0);\n    const fixedHeaderHeight = statefulStream(0);\n    const fixedFooterHeight = statefulStream(0);\n    const footerHeight = statefulStream(0);\n    const scrollTo = stream();\n    const scrollBy = stream();\n    const scrollingInProgress = statefulStream(false);\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollTop: scrollTop2 }) => scrollTop2)\n      ),\n      scrollTop\n    );\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollHeight: scrollHeight2 }) => scrollHeight2)\n      ),\n      scrollHeight\n    );\n    connect(scrollTop, statefulScrollTop);\n    return {\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      scrollTo,\n      scrollBy,\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress\n    };\n  },\n  [],\n  { singleton: true }\n);\nconst NIL_NODE = { lvl: 0 };\nfunction newAANode(k, v, lvl, l = NIL_NODE, r = NIL_NODE) {\n  return { k, v, lvl, l, r };\n}\nfunction empty(node) {\n  return node === NIL_NODE;\n}\nfunction newTree() {\n  return NIL_NODE;\n}\nfunction remove(node, key) {\n  if (empty(node))\n    return NIL_NODE;\n  const { k, l, r } = node;\n  if (key === k) {\n    if (empty(l)) {\n      return r;\n    } else if (empty(r)) {\n      return l;\n    } else {\n      const [lastKey, lastValue] = last(l);\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }));\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }));\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }));\n  }\n}\nfunction find(node, key) {\n  if (empty(node)) {\n    return;\n  }\n  if (key === node.k) {\n    return node.v;\n  } else if (key < node.k) {\n    return find(node.l, key);\n  } else {\n    return find(node.r, key);\n  }\n}\nfunction findMaxKeyValue(node, value, field = \"k\") {\n  if (empty(node)) {\n    return [-Infinity, void 0];\n  }\n  if (node[field] === value) {\n    return [node.k, node.v];\n  }\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field);\n    if (r[0] === -Infinity) {\n      return [node.k, node.v];\n    } else {\n      return r;\n    }\n  }\n  return findMaxKeyValue(node.l, value, field);\n}\nfunction insert(node, k, v) {\n  if (empty(node)) {\n    return newAANode(k, v, 1);\n  }\n  if (k === node.k) {\n    return clone(node, { k, v });\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }));\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }));\n  }\n}\nfunction walkWithin(node, start, end) {\n  if (empty(node)) {\n    return [];\n  }\n  const { k, v, l, r } = node;\n  let result = [];\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end));\n  }\n  if (k >= start && k <= end) {\n    result.push({ k, v });\n  }\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end));\n  }\n  return result;\n}\nfunction walk(node) {\n  if (empty(node)) {\n    return [];\n  }\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)];\n}\nfunction last(node) {\n  return empty(node.r) ? [node.k, node.v] : last(node.r);\n}\nfunction deleteLast(node) {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }));\n}\nfunction clone(node, args) {\n  return newAANode(\n    args.k !== void 0 ? args.k : node.k,\n    args.v !== void 0 ? args.v : node.v,\n    args.lvl !== void 0 ? args.lvl : node.lvl,\n    args.l !== void 0 ? args.l : node.l,\n    args.r !== void 0 ? args.r : node.r\n  );\n}\nfunction isSingle(node) {\n  return empty(node) || node.lvl > node.r.lvl;\n}\nfunction rebalance(node) {\n  return split(skew(node));\n}\nfunction adjust(node) {\n  const { l, r, lvl } = node;\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node;\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1\n          }),\n          lvl\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l;\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl;\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  }\n}\nfunction rangesWithin(node, startIndex, endIndex) {\n  if (empty(node)) {\n    return [];\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0];\n  return toRanges(walkWithin(node, adjustedStart, endIndex));\n}\nfunction arrayToRanges(items, parser) {\n  const length = items.length;\n  if (length === 0) {\n    return [];\n  }\n  let { index: start, value } = parser(items[0]);\n  const result = [];\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i]);\n    result.push({ start, end: nextIndex - 1, value });\n    start = nextIndex;\n    value = nextValue;\n  }\n  result.push({ start, end: Infinity, value });\n  return result;\n}\nfunction toRanges(nodes) {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }));\n}\nfunction split(node) {\n  const { r, lvl } = node;\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node;\n}\nfunction skew(node) {\n  const { l } = node;\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node;\n}\nfunction findIndexOfClosestSmallerOrEqual(items, value, comparator, start = 0) {\n  let end = items.length - 1;\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2);\n    const item = items[index];\n    const match = comparator(item, value);\n    if (match === 0) {\n      return index;\n    }\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1;\n      }\n      end = index - 1;\n    } else {\n      if (end === start) {\n        return index;\n      }\n      start = index + 1;\n    }\n  }\n  throw new Error(`Failed binary finding record in array - ${items.join(\",\")}, searched for ${value}`);\n}\nfunction findClosestSmallerOrEqual(items, value, comparator) {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)];\n}\nfunction findRange(items, startValue, endValue, comparator) {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator);\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex);\n  return items.slice(startIndex, endIndex + 1);\n}\nconst recalcSystem = system(\n  () => {\n    const recalcInProgress = statefulStream(false);\n    return { recalcInProgress };\n  },\n  [],\n  { singleton: true }\n);\nfunction rangeIncludes(refRange) {\n  const { size, startIndex, endIndex } = refRange;\n  return (range) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size;\n  };\n}\nfunction affectedGroupCount(offset, groupIndices) {\n  let recognizedOffsetItems = 0;\n  let groupIndex = 0;\n  while (recognizedOffsetItems < offset) {\n    recognizedOffsetItems += groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n    groupIndex++;\n  }\n  const offsetIsExact = recognizedOffsetItems === offset;\n  return groupIndex - (offsetIsExact ? 0 : 1);\n}\nfunction insertRanges(sizeTree, ranges) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity;\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range;\n    syncStart = Math.min(syncStart, startIndex);\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size);\n      continue;\n    }\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1);\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue;\n    }\n    let firstPassDone = false;\n    let shouldInsert = false;\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size;\n        firstPassDone = true;\n      } else {\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart);\n        }\n      }\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue);\n        }\n      }\n    }\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size);\n    }\n  }\n  return [sizeTree, syncStart];\n}\nfunction initialSizeState() {\n  return {\n    offsetTree: [],\n    sizeTree: newTree(),\n    groupOffsetTree: newTree(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: []\n  };\n}\nfunction indexComparator({ index: itemIndex }, index) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1;\n}\nfunction offsetComparator({ offset: itemOffset }, offset) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1;\n}\nfunction offsetPointParser(point) {\n  return { index: point.index, value: point };\n}\nfunction rangesWithinOffsets(tree, startOffset, endOffset, minStartIndex = 0) {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset);\n  }\n  return arrayToRanges(findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser);\n}\nfunction createOffsetTree(prevOffsetTree, syncStart, sizeTree, gap) {\n  let offsetTree = prevOffsetTree;\n  let prevIndex = 0;\n  let prevSize = 0;\n  let prevOffset = 0;\n  let startIndex = 0;\n  if (syncStart !== 0) {\n    startIndex = findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator);\n    const offsetInfo = offsetTree[startIndex];\n    prevOffset = offsetInfo.offset;\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1);\n    prevIndex = kv[0];\n    prevSize = kv[1];\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1;\n    }\n    offsetTree = offsetTree.slice(0, startIndex + 1);\n  } else {\n    offsetTree = [];\n  }\n  for (const { start: startIndex2, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const indexOffset = startIndex2 - prevIndex;\n    const aOffset = indexOffset * prevSize + prevOffset + indexOffset * gap;\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex2\n    });\n    prevIndex = startIndex2;\n    prevOffset = aOffset;\n    prevSize = value;\n  }\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize\n  };\n}\nfunction sizeStateReducer(state, [ranges, groupIndices, log, gap]) {\n  if (ranges.length > 0) {\n    log(\"received item sizes\", ranges, LogLevel.DEBUG);\n  }\n  const sizeTree = state.sizeTree;\n  let newSizeTree = sizeTree;\n  let syncStart = 0;\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size;\n    const itemSize = ranges[1].size;\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize);\n    }, newSizeTree);\n  } else {\n    [newSizeTree, syncStart] = insertRanges(newSizeTree, ranges);\n  }\n  if (newSizeTree === sizeTree) {\n    return state;\n  }\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree, gap);\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree, gap));\n    }, newTree()),\n    groupIndices\n  };\n}\nfunction offsetOf(index, tree, gap) {\n  if (tree.length === 0) {\n    return 0;\n  }\n  const { offset, index: startIndex, size } = findClosestSmallerOrEqual(tree, index, indexComparator);\n  const itemCount = index - startIndex;\n  const top = size * itemCount + (itemCount - 1) * gap + offset;\n  return top > 0 ? top + gap : top;\n}\nfunction isGroupLocation(location) {\n  return typeof location.groupIndex !== \"undefined\";\n}\nfunction originalIndexFromLocation(location, sizes, lastIndex) {\n  if (isGroupLocation(location)) {\n    return sizes.groupIndices[location.groupIndex] + 1;\n  } else {\n    const numericIndex = location.index === \"LAST\" ? lastIndex : location.index;\n    let result = originalIndexFromItemIndex(numericIndex, sizes);\n    result = Math.max(0, result, Math.min(lastIndex, result));\n    return result;\n  }\n}\nfunction originalIndexFromItemIndex(itemIndex, sizes) {\n  if (!hasGroups(sizes)) {\n    return itemIndex;\n  }\n  let groupOffset = 0;\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++;\n  }\n  return itemIndex + groupOffset;\n}\nfunction hasGroups(sizes) {\n  return !empty(sizes.groupOffsetTree);\n}\nfunction sizeTreeToRanges(sizeTree) {\n  return walk(sizeTree).map(({ k: startIndex, v: size }, index, sizeArray) => {\n    const nextSize = sizeArray[index + 1];\n    const endIndex = nextSize ? nextSize.k - 1 : Infinity;\n    return { startIndex, endIndex, size };\n  });\n}\nconst SIZE_MAP = {\n  offsetHeight: \"height\",\n  offsetWidth: \"width\"\n};\nconst sizeSystem = system(\n  ([{ log }, { recalcInProgress }]) => {\n    const sizeRanges = stream();\n    const totalCount = stream();\n    const statefulTotalCount = statefulStreamFromEmitter(totalCount, 0);\n    const unshiftWith = stream();\n    const shiftWith = stream();\n    const firstItemIndex = statefulStream(0);\n    const groupIndices = statefulStream([]);\n    const fixedItemSize = statefulStream(void 0);\n    const defaultItemSize = statefulStream(void 0);\n    const itemSize = statefulStream((el, field) => correctItemSize(el, SIZE_MAP[field]));\n    const data = statefulStream(void 0);\n    const gap = statefulStream(0);\n    const initial = initialSizeState();\n    const sizes = statefulStreamFromEmitter(\n      pipe(sizeRanges, withLatestFrom(groupIndices, log, gap), scan(sizeStateReducer, initial), distinctUntilChanged()),\n      initial\n    );\n    const prevGroupIndices = statefulStreamFromEmitter(\n      pipe(\n        groupIndices,\n        distinctUntilChanged(),\n        scan((prev, curr) => ({ prev: prev.current, current: curr }), {\n          prev: [],\n          current: []\n        }),\n        map(({ prev }) => prev)\n      ),\n      []\n    );\n    connect(\n      pipe(\n        groupIndices,\n        filter((indexes) => indexes.length > 0),\n        withLatestFrom(sizes, gap),\n        map(([groupIndices2, sizes2, gap2]) => {\n          const groupOffsetTree = groupIndices2.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes2.offsetTree, gap2) || idx);\n          }, newTree());\n          return {\n            ...sizes2,\n            groupIndices: groupIndices2,\n            groupOffsetTree\n          };\n        })\n      ),\n      sizes\n    );\n    connect(\n      pipe(\n        totalCount,\n        withLatestFrom(sizes),\n        filter(([totalCount2, { lastIndex, groupIndices: groupIndices2 }]) => {\n          return totalCount2 < lastIndex && groupIndices2.length === 0;\n        }),\n        map(([totalCount2, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount2,\n              endIndex: lastIndex,\n              size: lastSize\n            }\n          ];\n        })\n      ),\n      sizeRanges\n    );\n    connect(fixedItemSize, defaultItemSize);\n    const trackItemSizes = statefulStreamFromEmitter(\n      pipe(\n        fixedItemSize,\n        map((size) => size === void 0)\n      ),\n      true\n    );\n    connect(\n      pipe(\n        defaultItemSize,\n        filter((value) => {\n          return value !== void 0 && empty(getValue(sizes).sizeTree);\n        }),\n        map((size) => [{ startIndex: 0, endIndex: 0, size }])\n      ),\n      sizeRanges\n    );\n    const listRefresh = streamFromEmitter(\n      pipe(\n        sizeRanges,\n        withLatestFrom(sizes),\n        scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes\n            };\n          },\n          { changed: false, sizes: initial }\n        ),\n        map((value) => value.changed)\n      )\n    );\n    subscribe(\n      pipe(\n        firstItemIndex,\n        scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next };\n          },\n          { diff: 0, prev: 0 }\n        ),\n        map((val) => val.diff)\n      ),\n      (offset) => {\n        const { groupIndices: groupIndices2 } = getValue(sizes);\n        if (offset > 0) {\n          publish(recalcInProgress, true);\n          publish(unshiftWith, offset + affectedGroupCount(offset, groupIndices2));\n        } else if (offset < 0) {\n          const prevGroupIndicesValue = getValue(prevGroupIndices);\n          if (prevGroupIndicesValue.length > 0) {\n            publish(shiftWith, offset - affectedGroupCount(-offset, prevGroupIndicesValue));\n          }\n        }\n      }\n    );\n    subscribe(pipe(firstItemIndex, withLatestFrom(log)), ([index, log2]) => {\n      if (index < 0) {\n        log2(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        );\n      }\n    });\n    const beforeUnshiftWith = streamFromEmitter(unshiftWith);\n    connect(\n      pipe(\n        unshiftWith,\n        withLatestFrom(sizes),\n        map(([unshiftWith2, sizes2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          const initialRanges = [];\n          const defaultSize = sizes2.lastSize;\n          if (groupedMode) {\n            const firstGroupSize = find(sizes2.sizeTree, 0);\n            let prependedGroupItemsCount = 0;\n            let groupIndex = 0;\n            while (prependedGroupItemsCount < unshiftWith2) {\n              const theGroupIndex = sizes2.groupIndices[groupIndex];\n              const groupItemCount = sizes2.groupIndices.length === groupIndex + 1 ? Infinity : sizes2.groupIndices[groupIndex + 1] - theGroupIndex - 1;\n              initialRanges.push({\n                startIndex: theGroupIndex,\n                endIndex: theGroupIndex,\n                size: firstGroupSize\n              });\n              initialRanges.push({\n                startIndex: theGroupIndex + 1,\n                endIndex: theGroupIndex + 1 + groupItemCount - 1,\n                size: defaultSize\n              });\n              groupIndex++;\n              prependedGroupItemsCount += groupItemCount + 1;\n            }\n            const sizeTreeKV = walk(sizes2.sizeTree);\n            const firstGroupIsExpanded = prependedGroupItemsCount !== unshiftWith2;\n            if (firstGroupIsExpanded) {\n              sizeTreeKV.shift();\n            }\n            return sizeTreeKV.reduce(\n              (acc, { k: index, v: size }) => {\n                let ranges = acc.ranges;\n                if (acc.prevSize !== 0) {\n                  ranges = [\n                    ...acc.ranges,\n                    {\n                      startIndex: acc.prevIndex,\n                      endIndex: index + unshiftWith2 - 1,\n                      size: acc.prevSize\n                    }\n                  ];\n                }\n                return {\n                  ranges,\n                  prevIndex: index + unshiftWith2,\n                  prevSize: size\n                };\n              },\n              {\n                ranges: initialRanges,\n                prevIndex: unshiftWith2,\n                prevSize: 0\n              }\n            ).ranges;\n          }\n          return walk(sizes2.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith2 - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith2,\n                prevSize: size\n              };\n            },\n            {\n              ranges: [],\n              prevIndex: 0,\n              prevSize: defaultSize\n            }\n          ).ranges;\n        })\n      ),\n      sizeRanges\n    );\n    const shiftWithOffset = streamFromEmitter(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, { offsetTree }, gap2]) => {\n          const newFirstItemIndex = -shiftWith2;\n          return offsetOf(newFirstItemIndex, offsetTree, gap2);\n        })\n      )\n    );\n    connect(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, sizes2, gap2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          if (groupedMode) {\n            let newSizeTree = newTree();\n            const prevGroupIndicesValue = getValue(prevGroupIndices);\n            let removedItemsCount = 0;\n            let groupIndex = 0;\n            let groupOffset = 0;\n            while (removedItemsCount < -shiftWith2) {\n              groupOffset = prevGroupIndicesValue[groupIndex];\n              const groupItemCount = prevGroupIndicesValue[groupIndex + 1] - groupOffset - 1;\n              groupIndex++;\n              removedItemsCount += groupItemCount + 1;\n            }\n            newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newSizeTree);\n            const aGroupIsShrunk = removedItemsCount !== -shiftWith2;\n            if (aGroupIsShrunk) {\n              const firstGroupSize = find(sizes2.sizeTree, groupOffset);\n              newSizeTree = insert(newSizeTree, 0, firstGroupSize);\n              const nextItemSize = findMaxKeyValue(sizes2.sizeTree, -shiftWith2 + 1)[1];\n              newSizeTree = insert(newSizeTree, 1, nextItemSize);\n            }\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          } else {\n            const newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newTree());\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          }\n        })\n      ),\n      sizes\n    );\n    return {\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n      gap,\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize\n    };\n  },\n  tup(loggerSystem, recalcSystem),\n  { singleton: true }\n);\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== \"undefined\" && \"scrollBehavior\" in document.documentElement.style;\nfunction normalizeIndexLocation(location) {\n  const result = typeof location === \"number\" ? { index: location } : location;\n  if (!result.align) {\n    result.align = \"start\";\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = \"auto\";\n  }\n  if (!result.offset) {\n    result.offset = 0;\n  }\n  return result;\n}\nconst scrollToIndexSystem = system(\n  ([\n    { sizes, totalCount, listRefresh, gap },\n    {\n      scrollingInProgress,\n      viewportHeight,\n      scrollTo,\n      smoothScrollTargetReached,\n      headerHeight,\n      footerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight\n    },\n    { log }\n  ]) => {\n    const scrollToIndex = stream();\n    const topListHeight = statefulStream(0);\n    let unsubscribeNextListRefresh = null;\n    let cleartTimeoutRef = null;\n    let unsubscribeListRefresh = null;\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh();\n        unsubscribeNextListRefresh = null;\n      }\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh();\n        unsubscribeListRefresh = null;\n      }\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef);\n        cleartTimeoutRef = null;\n      }\n      publish(scrollingInProgress, false);\n    }\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        withLatestFrom(gap, fixedHeaderHeight, fixedFooterHeight),\n        map(\n          ([\n            [location, sizes2, viewportHeight2, totalCount2, topListHeight2, headerHeight2, footerHeight2, log2],\n            gap2,\n            fixedHeaderHeight2,\n            fixedFooterHeight2\n          ]) => {\n            const normalLocation = normalizeIndexLocation(location);\n            const { align, behavior, offset } = normalLocation;\n            const lastIndex = totalCount2 - 1;\n            const index = originalIndexFromLocation(normalLocation, sizes2, lastIndex);\n            let top = offsetOf(index, sizes2.offsetTree, gap2) + headerHeight2;\n            if (align === \"end\") {\n              top += fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2;\n              if (index === lastIndex) {\n                top += footerHeight2;\n              }\n            } else if (align === \"center\") {\n              top += (fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2) / 2;\n            } else {\n              top -= topListHeight2;\n            }\n            if (offset) {\n              top += offset;\n            }\n            const retry = (listChanged) => {\n              cleanup();\n              if (listChanged) {\n                log2(\"retrying to scroll to\", { location }, LogLevel.DEBUG);\n                publish(scrollToIndex, location);\n              } else {\n                log2(\"list did not change, scroll successful\", {}, LogLevel.DEBUG);\n              }\n            };\n            cleanup();\n            if (behavior === \"smooth\") {\n              let listChanged = false;\n              unsubscribeListRefresh = subscribe(listRefresh, (changed) => {\n                listChanged = listChanged || changed;\n              });\n              unsubscribeNextListRefresh = handleNext(smoothScrollTargetReached, () => {\n                retry(listChanged);\n              });\n            } else {\n              unsubscribeNextListRefresh = handleNext(pipe(listRefresh, watchChangesFor(150)), retry);\n            }\n            cleartTimeoutRef = setTimeout(() => {\n              cleanup();\n            }, 1200);\n            publish(scrollingInProgress, true);\n            log2(\"scrolling from index to\", { index, top, behavior }, LogLevel.DEBUG);\n            return { top, behavior };\n          }\n        )\n      ),\n      scrollTo\n    );\n    return {\n      scrollToIndex,\n      topListHeight\n    };\n  },\n  tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n);\nfunction watchChangesFor(limit) {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false);\n    }, limit);\n    return (value) => {\n      if (value) {\n        done(true);\n        clearTimeout(timeoutRef);\n      }\n    };\n  };\n}\nconst UP = \"up\";\nconst DOWN = \"down\";\nconst NONE$1 = \"none\";\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: \"NOT_SHOWING_LAST_ITEM\",\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0\n  }\n};\nconst DEFAULT_AT_TOP_THRESHOLD = 0;\nconst stateFlagsSystem = system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = statefulStream(false);\n  const isAtTop = statefulStream(true);\n  const atBottomStateChange = stream();\n  const atTopStateChange = stream();\n  const atBottomThreshold = statefulStream(4);\n  const atTopThreshold = statefulStream(DEFAULT_AT_TOP_THRESHOLD);\n  const isScrolling = statefulStreamFromEmitter(\n    pipe(\n      merge(pipe(duc(scrollTop), skip(1), mapTo(true)), pipe(duc(scrollTop), skip(1), mapTo(false), debounceTime(100))),\n      distinctUntilChanged()\n    ),\n    false\n  );\n  const isScrollingBy = statefulStreamFromEmitter(\n    pipe(merge(pipe(scrollBy, mapTo(true)), pipe(scrollBy, mapTo(false), debounceTime(200))), distinctUntilChanged()),\n    false\n  );\n  connect(\n    pipe(\n      combineLatest(duc(scrollTop), duc(atTopThreshold)),\n      map(([top, atTopThreshold2]) => top <= atTopThreshold2),\n      distinctUntilChanged()\n    ),\n    isAtTop\n  );\n  connect(pipe(isAtTop, throttleTime(50)), atTopStateChange);\n  const atBottomState = streamFromEmitter(\n    pipe(\n      combineLatest(scrollContainerState, duc(viewportHeight), duc(headerHeight), duc(footerHeight), duc(atBottomThreshold)),\n      scan((current, [{ scrollTop: scrollTop2, scrollHeight }, viewportHeight2, _headerHeight, _footerHeight, atBottomThreshold2]) => {\n        const isAtBottom2 = scrollTop2 + viewportHeight2 - scrollHeight > -atBottomThreshold2;\n        const state = {\n          viewportHeight: viewportHeight2,\n          scrollTop: scrollTop2,\n          scrollHeight\n        };\n        if (isAtBottom2) {\n          let atBottomBecause;\n          let scrollTopDelta;\n          if (scrollTop2 > current.state.scrollTop) {\n            atBottomBecause = \"SCROLLED_DOWN\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2;\n          } else {\n            atBottomBecause = \"SIZE_DECREASED\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2 || current.scrollTopDelta;\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta\n          };\n        }\n        let notAtBottomBecause;\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = \"SIZE_INCREASED\";\n        } else if (viewportHeight2 < current.state.viewportHeight) {\n          notAtBottomBecause = \"VIEWPORT_HEIGHT_DECREASING\";\n        } else if (scrollTop2 < current.state.scrollTop) {\n          notAtBottomBecause = \"SCROLLING_UPWARDS\";\n        } else {\n          notAtBottomBecause = \"NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM\";\n        }\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state\n        };\n      }, INITIAL_BOTTOM_STATE),\n      distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom;\n      })\n    )\n  );\n  const lastJumpDueToItemResize = statefulStreamFromEmitter(\n    pipe(\n      scrollContainerState,\n      scan(\n        (current, { scrollTop: scrollTop2, scrollHeight, viewportHeight: viewportHeight2 }) => {\n          if (!approximatelyEqual(current.scrollHeight, scrollHeight)) {\n            const atBottom = scrollHeight - (scrollTop2 + viewportHeight2) < 1;\n            if (current.scrollTop !== scrollTop2 && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: current.scrollTop - scrollTop2,\n                changed: true\n              };\n            } else {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: 0,\n                changed: true\n              };\n            }\n          } else {\n            return {\n              scrollTop: scrollTop2,\n              scrollHeight,\n              jump: 0,\n              changed: false\n            };\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      filter((value) => value.changed),\n      map((value) => value.jump)\n    ),\n    0\n  );\n  connect(\n    pipe(\n      atBottomState,\n      map((state) => state.atBottom)\n    ),\n    isAtBottom\n  );\n  connect(pipe(isAtBottom, throttleTime(50)), atBottomStateChange);\n  const scrollDirection = statefulStream(DOWN);\n  connect(\n    pipe(\n      scrollContainerState,\n      map(({ scrollTop: scrollTop2 }) => scrollTop2),\n      distinctUntilChanged(),\n      scan(\n        (acc, scrollTop2) => {\n          if (getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop2 };\n          }\n          return { direction: scrollTop2 < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop2 };\n        },\n        { direction: DOWN, prevScrollTop: 0 }\n      ),\n      map((value) => value.direction)\n    ),\n    scrollDirection\n  );\n  connect(pipe(scrollContainerState, throttleTime(50), mapTo(NONE$1)), scrollDirection);\n  const scrollVelocity = statefulStream(0);\n  connect(\n    pipe(\n      isScrolling,\n      filter((value) => !value),\n      mapTo(0)\n    ),\n    scrollVelocity\n  );\n  connect(\n    pipe(\n      scrollTop,\n      throttleTime(100),\n      withLatestFrom(isScrolling),\n      filter(([_, isScrolling2]) => !!isScrolling2),\n      scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  );\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize\n  };\n}, tup(domIOSystem));\nconst propsReadySystem = system(\n  ([{ log }]) => {\n    const propsReady = statefulStream(false);\n    const didMount = streamFromEmitter(\n      pipe(\n        propsReady,\n        filter((ready) => ready),\n        distinctUntilChanged()\n      )\n    );\n    subscribe(propsReady, (value) => {\n      value && getValue(log)(\"props updated\", {}, LogLevel.DEBUG);\n    });\n    return { propsReady, didMount };\n  },\n  tup(loggerSystem),\n  { singleton: true }\n);\nfunction getInitialTopMostItemIndexNumber(location, totalCount) {\n  const lastIndex = totalCount - 1;\n  const index = typeof location === \"number\" ? location : location.index === \"LAST\" ? lastIndex : location.index;\n  return index;\n}\nfunction skipFrames(frameCount, callback) {\n  if (frameCount == 0) {\n    callback();\n  } else {\n    requestAnimationFrame(() => skipFrames(frameCount - 1, callback));\n  }\n}\nconst initialTopMostItemIndexSystem = system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = statefulStream(true);\n    const initialTopMostItemIndex = statefulStream(0);\n    const scrollScheduled = statefulStream(false);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location),\n        mapTo(false)\n      ),\n      scrolledToInitialItem\n    );\n    subscribe(\n      pipe(\n        combineLatest(listRefresh, didMount),\n        withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize, scrollScheduled),\n        filter(([[, didMount2], scrolledToInitialItem2, { sizeTree }, defaultItemSize2, scrollScheduled2]) => {\n          return didMount2 && (!empty(sizeTree) || isDefined(defaultItemSize2)) && !scrolledToInitialItem2 && !scrollScheduled2;\n        }),\n        withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex2]) => {\n        publish(scrollScheduled, true);\n        skipFrames(2, () => {\n          handleNext(scrollTop, () => publish(scrolledToInitialItem, true));\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n      }\n    );\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n);\nfunction normalizeFollowOutput(follow) {\n  if (!follow) {\n    return false;\n  }\n  return follow === \"smooth\" ? \"smooth\" : \"auto\";\n}\nconst behaviorFromFollowOutput = (follow, isAtBottom) => {\n  if (typeof follow === \"function\") {\n    return normalizeFollowOutput(follow(isAtBottom));\n  }\n  return isAtBottom && normalizeFollowOutput(follow);\n};\nconst followOutputSystem = system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress }\n  ]) => {\n    const followOutput = statefulStream(false);\n    const autoscrollToBottom = stream();\n    let pendingScrollHandle = null;\n    function scrollToBottom(followOutputBehavior) {\n      publish(scrollToIndex, {\n        index: \"LAST\",\n        align: \"end\",\n        behavior: followOutputBehavior\n      });\n    }\n    subscribe(\n      pipe(\n        combineLatest(pipe(duc(totalCount), skip(1)), didMount),\n        withLatestFrom(duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        map(([[totalCount2, didMount2], followOutput2, isAtBottom2, scrolledToInitialItem2, scrollingInProgress2]) => {\n          let shouldFollow = didMount2 && scrolledToInitialItem2;\n          let followOutputBehavior = \"auto\";\n          if (shouldFollow) {\n            followOutputBehavior = behaviorFromFollowOutput(followOutput2, isAtBottom2 || scrollingInProgress2);\n            shouldFollow = shouldFollow && !!followOutputBehavior;\n          }\n          return { totalCount: totalCount2, shouldFollow, followOutputBehavior };\n        }),\n        filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount: totalCount2, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle();\n          pendingScrollHandle = null;\n        }\n        pendingScrollHandle = handleNext(listRefresh, () => {\n          getValue(log)(\"following output to \", { totalCount: totalCount2 }, LogLevel.DEBUG);\n          scrollToBottom(followOutputBehavior);\n          pendingScrollHandle = null;\n        });\n      }\n    );\n    function trapNextSizeIncrease(followOutput2) {\n      const cancel = handleNext(atBottomState, (state) => {\n        if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"SIZE_INCREASED\" && !pendingScrollHandle) {\n          getValue(log)(\"scrolling to bottom due to increased size\", {}, LogLevel.DEBUG);\n          scrollToBottom(\"auto\");\n        }\n      });\n      setTimeout(cancel, 100);\n    }\n    subscribe(\n      pipe(\n        combineLatest(duc(followOutput), totalCount, propsReady),\n        filter(([follow, , ready]) => follow && ready),\n        scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next };\n          },\n          { refreshed: false, value: 0 }\n        ),\n        filter(({ refreshed }) => refreshed),\n        withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput2]) => {\n        trapNextSizeIncrease(followOutput2 !== false);\n      }\n    );\n    subscribe(autoscrollToBottom, () => {\n      trapNextSizeIncrease(getValue(followOutput) !== false);\n    });\n    subscribe(combineLatest(duc(followOutput), atBottomState), ([followOutput2, state]) => {\n      if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"VIEWPORT_HEIGHT_DECREASING\") {\n        scrollToBottom(\"auto\");\n      }\n    });\n    return { followOutput, autoscrollToBottom };\n  },\n  tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n);\nfunction groupCountsToIndicesAndCount(counts) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount);\n      acc.totalCount += groupCount + 1;\n      return acc;\n    },\n    {\n      totalCount: 0,\n      groupIndices: []\n    }\n  );\n}\nconst groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream();\n  const topItemsIndexes = stream();\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)));\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.totalCount)\n    ),\n    totalCount\n  );\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.groupIndices)\n    ),\n    groupIndices\n  );\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes2]) => hasGroups(sizes2)),\n      map(([scrollTop2, state, headerHeight2]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop2 - headerHeight2, 0), \"v\")[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  );\n  return { groupCounts, topItemsIndexes };\n}, tup(sizeSystem, domIOSystem));\nfunction tupleComparator(prev, current) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1]);\n}\nfunction rangeComparator(prev, next) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex);\n}\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst NONE = \"none\";\nfunction getOverscan(overscan, end, direction) {\n  if (typeof overscan === \"number\") {\n    return direction === UP && end === TOP || direction === DOWN && end === BOTTOM ? overscan : 0;\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse;\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse;\n    }\n  }\n}\nfunction getViewportIncrease(value, end) {\n  return typeof value === \"number\" ? value : value[end] || 0;\n}\nconst sizeRangeSystem = system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = stream();\n    const topListHeight = statefulStream(0);\n    const increaseViewportBy = statefulStream(0);\n    const overscan = statefulStream(0);\n    const visibleRange = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          duc(scrollTop),\n          duc(viewportHeight),\n          duc(headerHeight),\n          duc(listBoundary, tupleComparator),\n          duc(overscan),\n          duc(topListHeight),\n          duc(fixedHeaderHeight),\n          duc(deviation),\n          duc(increaseViewportBy)\n        ),\n        map(\n          ([\n            scrollTop2,\n            viewportHeight2,\n            headerHeight2,\n            [listTop, listBottom],\n            overscan2,\n            topListHeight2,\n            fixedHeaderHeight2,\n            deviation2,\n            increaseViewportBy2\n          ]) => {\n            const top = scrollTop2 - deviation2;\n            const stickyHeaderHeight = topListHeight2 + fixedHeaderHeight2;\n            const headerVisible = Math.max(headerHeight2 - top, 0);\n            let direction = NONE;\n            const topViewportAddition = getViewportIncrease(increaseViewportBy2, TOP);\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy2, BOTTOM);\n            listTop -= deviation2;\n            listTop += headerHeight2 + fixedHeaderHeight2;\n            listBottom += headerHeight2 + fixedHeaderHeight2;\n            listBottom -= deviation2;\n            if (listTop > scrollTop2 + stickyHeaderHeight - topViewportAddition) {\n              direction = UP;\n            }\n            if (listBottom < scrollTop2 - headerVisible + viewportHeight2 + bottomViewportAddition) {\n              direction = DOWN;\n            }\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight2 - getOverscan(overscan2, TOP, direction) - topViewportAddition, 0),\n                top - headerVisible - fixedHeaderHeight2 + viewportHeight2 + getOverscan(overscan2, BOTTOM, direction) + bottomViewportAddition\n              ];\n            }\n            return null;\n          }\n        ),\n        filter((value) => value != null),\n        distinctUntilChanged(tupleComparator)\n      ),\n      [0, 0]\n    );\n    return {\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n      visibleRange\n    };\n  },\n  tup(domIOSystem),\n  { singleton: true }\n);\nfunction probeItemSet(index, sizes, data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes);\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0];\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] }\n    ];\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }];\n}\nconst EMPTY_LIST_STATE = {\n  items: [],\n  topItems: [],\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n  firstItemIndex: 0\n};\nfunction transposeItems(items, sizes, firstItemIndex) {\n  if (items.length === 0) {\n    return [];\n  }\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }));\n  }\n  const startIndex = items[0].index;\n  const endIndex = items[items.length - 1].index;\n  const transposedItems = [];\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex);\n  let currentRange = void 0;\n  let currentGroupIndex = 0;\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift();\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start);\n    }\n    let transposedItem;\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: \"group\",\n        index: currentGroupIndex\n      };\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex\n      };\n    }\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data\n    });\n  }\n  return transposedItems;\n}\nfunction buildListState(items, topItems, totalCount, gap, sizes, firstItemIndex) {\n  const { lastSize, lastOffset, lastIndex } = sizes;\n  let offsetTop = 0;\n  let bottom = 0;\n  if (items.length > 0) {\n    offsetTop = items[0].offset;\n    const lastItem = items[items.length - 1];\n    bottom = lastItem.offset + lastItem.size;\n  }\n  const itemCount = totalCount - lastIndex;\n  const total = lastOffset + itemCount * lastSize + (itemCount - 1) * gap;\n  const top = offsetTop;\n  const offsetBottom = total - bottom;\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n    firstItemIndex\n  };\n}\nconst listStateSystem = system(\n  ([\n    { sizes, totalCount, data, firstItemIndex, gap },\n    groupedListSystem2,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n    { recalcInProgress }\n  ]) => {\n    const topItemsIndexes = statefulStream([]);\n    const itemsRendered = stream();\n    connect(groupedListSystem2.topItemsIndexes, topItemsIndexes);\n    const listState = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          didMount,\n          recalcInProgress,\n          duc(visibleRange, tupleComparator),\n          duc(totalCount),\n          duc(sizes),\n          duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          duc(topItemsIndexes),\n          duc(firstItemIndex),\n          duc(gap),\n          data\n        ),\n        filter(([mount, recalcInProgress2, , totalCount2, , , , , , , data2]) => {\n          const dataChangeInProgress = data2 && data2.length !== totalCount2;\n          return mount && !recalcInProgress2 && !dataChangeInProgress;\n        }),\n        map(\n          ([\n            ,\n            ,\n            [startOffset, endOffset],\n            totalCount2,\n            sizes2,\n            initialTopMostItemIndex2,\n            scrolledToInitialItem2,\n            topItemsIndexes2,\n            firstItemIndex2,\n            gap2,\n            data2\n          ]) => {\n            const sizesValue = sizes2;\n            const { sizeTree, offsetTree } = sizesValue;\n            if (totalCount2 === 0 || startOffset === 0 && endOffset === 0) {\n              return { ...EMPTY_LIST_STATE, totalCount: totalCount2 };\n            }\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2), sizesValue, data2),\n                [],\n                totalCount2,\n                gap2,\n                sizesValue,\n                firstItemIndex2\n              );\n            }\n            const topItems = [];\n            if (topItemsIndexes2.length > 0) {\n              const startIndex = topItemsIndexes2[0];\n              const endIndex = topItemsIndexes2[topItemsIndexes2.length - 1];\n              let offset = 0;\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value;\n                const rangeStartIndex = Math.max(range.start, startIndex);\n                const rangeEndIndex = Math.min(range.end, endIndex);\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size;\n                }\n              }\n            }\n            if (!scrolledToInitialItem2) {\n              return buildListState([], topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n            }\n            const minStartIndex = topItemsIndexes2.length > 0 ? topItemsIndexes2[topItemsIndexes2.length - 1] + 1 : 0;\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex);\n            if (offsetPointRanges.length === 0) {\n              return null;\n            }\n            const maxIndex = totalCount2 - 1;\n            const items = tap([], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value;\n                let offset = point.offset;\n                let rangeStartIndex = range.start;\n                const size = point.size;\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset + gap2) / (size + gap2));\n                  const itemCount = rangeStartIndex - range.start;\n                  offset += itemCount * size + itemCount * gap2;\n                }\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size;\n                  rangeStartIndex = minStartIndex;\n                }\n                const endIndex = Math.min(range.end, maxIndex);\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break;\n                  }\n                  result.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size + gap2;\n                }\n              }\n            });\n            return buildListState(items, topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n          }\n        ),\n        filter((value) => value !== null),\n        distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    );\n    connect(\n      pipe(\n        data,\n        filter(isDefined),\n        map((data2) => data2 == null ? void 0 : data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        listState,\n        map((value) => value.topListHeight)\n      ),\n      topListHeight\n    );\n    connect(topListHeight, rangeTopListHeight);\n    connect(\n      pipe(\n        listState,\n        map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    );\n    connect(\n      pipe(\n        listState,\n        map((state) => state.items)\n      ),\n      itemsRendered\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, data),\n        filter(([{ items }, totalCount2]) => items[items.length - 1].originalIndex === totalCount2 - 1),\n        map(([, totalCount2, data2]) => [totalCount2 - 1, data2]),\n        distinctUntilChanged(tupleComparator),\n        map(([count]) => count)\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        listState,\n        throttleTime(200),\n        filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length;\n        }),\n        map(({ items }) => items[0].index),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        map(({ items }) => {\n          let startIndex = 0;\n          let endIndex = items.length - 1;\n          while (items[startIndex].type === \"group\" && startIndex < endIndex) {\n            startIndex++;\n          }\n          while (items[endIndex].type === \"group\" && endIndex > startIndex) {\n            endIndex--;\n          }\n          return {\n            startIndex: items[startIndex].index,\n            endIndex: items[endIndex].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator)\n      )\n    );\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags };\n  },\n  tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem,\n    recalcSystem\n  ),\n  { singleton: true }\n);\nconst initialItemCountSystem = system(\n  ([{ sizes, firstItemIndex, data, gap }, { listState }, { didMount }]) => {\n    const initialItemCount = statefulStream(0);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialItemCount),\n        filter(([, count]) => count !== 0),\n        withLatestFrom(sizes, firstItemIndex, gap, data),\n        map(([[, count], sizes2, firstItemIndex2, gap2, data2 = []]) => {\n          let includedGroupsCount = 0;\n          if (sizes2.groupIndices.length > 0) {\n            for (const index of sizes2.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break;\n              }\n              includedGroupsCount++;\n            }\n          }\n          const adjustedCount = count + includedGroupsCount;\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data2[index] }));\n          return buildListState(items, [], adjustedCount, gap2, sizes2, firstItemIndex2);\n        })\n      ),\n      listState\n    );\n    return { initialItemCount };\n  },\n  tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n);\nconst scrollSeekSystem = system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = statefulStream(false);\n    const rangeChanged = stream();\n    const scrollSeekConfiguration = statefulStream(false);\n    connect(\n      pipe(\n        scrollVelocity,\n        withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        filter(([_, config]) => !!config),\n        map(([speed, config, isSeeking2, range]) => {\n          const { exit, enter } = config;\n          if (isSeeking2) {\n            if (exit(speed, range)) {\n              return false;\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true;\n            }\n          }\n          return isSeeking2;\n        }),\n        distinctUntilChanged()\n      ),\n      isSeeking\n    );\n    subscribe(\n      pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking2, velocity, range], config]) => isSeeking2 && config && config.change && config.change(velocity, range)\n    );\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged };\n  },\n  tup(stateFlagsSystem),\n  { singleton: true }\n);\nconst topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0);\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  );\n  return { topItemCount };\n}, tup(listStateSystem));\nconst totalListHeightSystem = system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight }, { listState }]) => {\n    const totalListHeightChanged = stream();\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState),\n        map(([footerHeight2, fixedFooterHeight2, headerHeight2, fixedHeaderHeight2, listState2]) => {\n          return footerHeight2 + fixedFooterHeight2 + headerHeight2 + fixedHeaderHeight2 + listState2.offsetBottom + listState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(duc(totalListHeight), totalListHeightChanged);\n    return { totalListHeight, totalListHeightChanged };\n  },\n  tup(domIOSystem, listStateSystem),\n  { singleton: true }\n);\nfunction simpleMemoize(func) {\n  let called = false;\n  let result;\n  return () => {\n    if (!called) {\n      called = true;\n      result = func();\n    }\n    return result;\n  };\n}\nconst isMobileSafari = simpleMemoize(() => {\n  return /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent);\n});\nconst upwardScrollFixSystem = system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes, gap },\n    { log },\n    { recalcInProgress }\n  ]) => {\n    const deviationOffset = streamFromEmitter(\n      pipe(\n        listState,\n        withLatestFrom(lastJumpDueToItemResize),\n        scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize2]) => {\n            const totalHeight = bottom + offsetBottom;\n            let newDev = 0;\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0;\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight;\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize2;\n                  }\n                }\n              }\n            }\n            return [newDev, items, totalCount, totalHeight];\n          },\n          [0, [], 0, 0]\n        ),\n        filter(([amount]) => amount !== 0),\n        withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, isAtBottom, log, recalcInProgress),\n        filter(([, scrollTop2, scrollDirection2, scrollingInProgress2, , , recalcInProgress2]) => {\n          return !recalcInProgress2 && !scrollingInProgress2 && scrollTop2 !== 0 && scrollDirection2 === UP;\n        }),\n        map(([[amount], , , , , log2]) => {\n          log2(\"Upward scrolling compensation\", { amount }, LogLevel.DEBUG);\n          return amount;\n        })\n      )\n    );\n    function scrollByWith(offset) {\n      if (offset > 0) {\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n        publish(deviation, 0);\n      } else {\n        publish(deviation, 0);\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n      }\n    }\n    subscribe(pipe(deviationOffset, withLatestFrom(deviation, isScrolling)), ([offset, deviationAmount, isScrolling2]) => {\n      if (isScrolling2 && isMobileSafari()) {\n        publish(deviation, deviationAmount - offset);\n      } else {\n        scrollByWith(-offset);\n      }\n    });\n    subscribe(\n      pipe(\n        combineLatest(statefulStreamFromEmitter(isScrolling, false), deviation, recalcInProgress),\n        filter(([is, deviation2, recalc]) => !is && !recalc && deviation2 !== 0),\n        map(([_, deviation2]) => deviation2),\n        throttleTime(1)\n      ),\n      scrollByWith\n    );\n    connect(\n      pipe(\n        shiftWithOffset,\n        map((offset) => {\n          return { top: -offset };\n        })\n      ),\n      scrollBy\n    );\n    subscribe(\n      pipe(\n        beforeUnshiftWith,\n        withLatestFrom(sizes, gap),\n        map(([offset, { lastSize: defaultItemSize, groupIndices, sizeTree }, gap2]) => {\n          function getItemOffset(itemCount) {\n            return itemCount * (defaultItemSize + gap2);\n          }\n          if (groupIndices.length === 0) {\n            return getItemOffset(offset);\n          } else {\n            let amount = 0;\n            const defaultGroupSize = find(sizeTree, 0);\n            let recognizedOffsetItems = 0;\n            let groupIndex = 0;\n            while (recognizedOffsetItems < offset) {\n              recognizedOffsetItems++;\n              amount += defaultGroupSize;\n              let groupItemCount = groupIndices.length === groupIndex + 1 ? Infinity : groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n              if (recognizedOffsetItems + groupItemCount > offset) {\n                amount -= defaultGroupSize;\n                groupItemCount = offset - recognizedOffsetItems + 1;\n              }\n              recognizedOffsetItems += groupItemCount;\n              amount += getItemOffset(groupItemCount);\n              groupIndex++;\n            }\n            return amount;\n          }\n        })\n      ),\n      (offset) => {\n        publish(deviation, offset);\n        requestAnimationFrame(() => {\n          publish(scrollBy, { top: offset });\n          requestAnimationFrame(() => {\n            publish(deviation, 0);\n            publish(recalcInProgress, false);\n          });\n        });\n      }\n    );\n    return { deviation };\n  },\n  tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem, recalcSystem)\n);\nconst initialScrollTopSystem = system(\n  ([{ didMount }, { scrollTo }, { listState }]) => {\n    const initialScrollTop = statefulStream(0);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialScrollTop),\n        filter(([, offset]) => offset !== 0),\n        map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        handleNext(\n          pipe(\n            listState,\n            skip(1),\n            filter((state) => state.items.length > 1)\n          ),\n          () => {\n            requestAnimationFrame(() => {\n              publish(scrollTo, location);\n            });\n          }\n        );\n      }\n    );\n    return {\n      initialScrollTop\n    };\n  },\n  tup(propsReadySystem, domIOSystem, listStateSystem),\n  { singleton: true }\n);\nconst alignToBottomSystem = system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = statefulStream(false);\n    const paddingTopAddition = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        filter(([enabled]) => enabled),\n        map(([, viewportHeight2, totalListHeight2]) => {\n          return Math.max(0, viewportHeight2 - totalListHeight2);\n        }),\n        throttleTime(0),\n        distinctUntilChanged()\n      ),\n      0\n    );\n    return { alignToBottom, paddingTopAddition };\n  },\n  tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n);\nconst windowScrollerSystem = system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = stream();\n  const windowViewportRect = stream();\n  const windowScrollTo = stream();\n  const useWindowScroll = statefulStream(false);\n  const customScrollParent = statefulStream(void 0);\n  connect(\n    pipe(\n      combineLatest(windowScrollContainerState, windowViewportRect),\n      map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight\n        };\n      })\n    ),\n    scrollContainerState\n  );\n  connect(\n    pipe(\n      scrollTo,\n      withLatestFrom(windowViewportRect),\n      map(([scrollTo2, { offsetTop }]) => {\n        return {\n          ...scrollTo2,\n          top: scrollTo2.top + offsetTop\n        };\n      })\n    ),\n    windowScrollTo\n  );\n  return {\n    useWindowScroll,\n    customScrollParent,\n    windowScrollContainerState,\n    windowViewportRect,\n    windowScrollTo\n  };\n}, tup(domIOSystem));\nconst defaultCalculateViewLocation = ({\n  itemTop: itemTop2,\n  itemBottom,\n  viewportTop,\n  viewportBottom,\n  locationParams: { behavior, align, ...rest }\n}) => {\n  if (itemTop2 < viewportTop) {\n    return { ...rest, behavior, align: align != null ? align : \"start\" };\n  }\n  if (itemBottom > viewportBottom) {\n    return { ...rest, behavior, align: align != null ? align : \"end\" };\n  }\n  return null;\n};\nconst scrollIntoViewSystem = system(\n  ([\n    { sizes, totalCount, gap },\n    { scrollTop, viewportHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollingInProgress },\n    { scrollToIndex }\n  ]) => {\n    const scrollIntoView = stream();\n    connect(\n      pipe(\n        scrollIntoView,\n        withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop),\n        withLatestFrom(gap),\n        map(([[viewLocation, sizes2, viewportHeight2, totalCount2, headerHeight2, fixedHeaderHeight2, fixedFooterHeight2, scrollTop2], gap2]) => {\n          const { done, behavior, align, calculateViewLocation = defaultCalculateViewLocation, ...rest } = viewLocation;\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes2, totalCount2 - 1);\n          const itemTop2 = offsetOf(actualIndex, sizes2.offsetTree, gap2) + headerHeight2 + fixedHeaderHeight2;\n          const itemBottom = itemTop2 + findMaxKeyValue(sizes2.sizeTree, actualIndex)[1];\n          const viewportTop = scrollTop2 + fixedHeaderHeight2;\n          const viewportBottom = scrollTop2 + viewportHeight2 - fixedFooterHeight2;\n          const location = calculateViewLocation({\n            itemTop: itemTop2,\n            itemBottom,\n            viewportTop,\n            viewportBottom,\n            locationParams: { behavior, align, ...rest }\n          });\n          if (location) {\n            done && handleNext(\n              pipe(\n                scrollingInProgress,\n                filter((value) => value === false),\n                skip(getValue(scrollingInProgress) ? 1 : 2)\n              ),\n              done\n            );\n          } else {\n            done && done();\n          }\n          return location;\n        }),\n        filter((value) => value !== null)\n      ),\n      scrollToIndex\n    );\n    return {\n      scrollIntoView\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n);\nconst stateLoadSystem = system(([{ sizes, sizeRanges }, { scrollTop }, { initialTopMostItemIndex }, { didMount }]) => {\n  const getState = stream();\n  const restoreStateFrom = statefulStream(void 0);\n  subscribe(pipe(getState, withLatestFrom(sizes, scrollTop)), ([callback, sizes2, scrollTop2]) => {\n    const ranges = sizeTreeToRanges(sizes2.sizeTree);\n    callback({ ranges, scrollTop: scrollTop2 });\n  });\n  connect(pipe(restoreStateFrom, filter(isDefined), map(locationFromSnapshot)), initialTopMostItemIndex);\n  connect(\n    pipe(\n      didMount,\n      withLatestFrom(restoreStateFrom),\n      filter(([, state]) => state !== void 0),\n      distinctUntilChanged(),\n      map(([, snapshot]) => {\n        return snapshot.ranges;\n      })\n    ),\n    sizeRanges\n  );\n  return {\n    getState,\n    restoreStateFrom\n  };\n}, tup(sizeSystem, domIOSystem, initialTopMostItemIndexSystem, propsReadySystem));\nfunction locationFromSnapshot(snapshot) {\n  return { offset: snapshot.scrollTop, index: 0, align: \"start\" };\n}\nconst featureGroup1System = system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem2,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n    logger\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem2,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n      ...logger\n    };\n  },\n  tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem,\n    loggerSystem\n  )\n);\nconst listSystem = system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n      gap,\n      sizes\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    stateLoad,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1\n  ]) => {\n    connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        featureGroup1.windowViewportRect,\n        map((value) => value.visibleHeight)\n      ),\n      domIO.viewportHeight\n    );\n    return {\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      gap,\n      ...followOutput,\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n      ...flags,\n      ...featureGroup1,\n      ...domIO,\n      sizes,\n      ...stateLoad\n    };\n  },\n  tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    stateLoadSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System\n  )\n);\nconst WEBKIT_STICKY = \"-webkit-sticky\";\nconst STICKY = \"sticky\";\nconst positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === \"undefined\") {\n    return STICKY;\n  }\n  const node = document.createElement(\"div\");\n  node.style.position = WEBKIT_STICKY;\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY;\n});\nfunction useWindowViewportRectRef(callback, customScrollParent) {\n  const viewportInfo = React.useRef(null);\n  const calculateInfo = React.useCallback(\n    (element) => {\n      if (element === null || !element.offsetParent) {\n        return;\n      }\n      const rect = element.getBoundingClientRect();\n      const visibleWidth = rect.width;\n      let visibleHeight, offsetTop;\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect();\n        const deltaTop = rect.top - customScrollParentRect.top;\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop);\n        offsetTop = deltaTop + customScrollParent.scrollTop;\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top);\n        offsetTop = rect.top + window.pageYOffset;\n      }\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth\n      };\n      callback(viewportInfo.current);\n    },\n    [callback, customScrollParent]\n  );\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo);\n  const scrollAndResizeEventHandler = React.useCallback(() => {\n    calculateInfo(ref.current);\n  }, [calculateInfo, ref]);\n  React.useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      const observer = new ResizeObserver(scrollAndResizeEventHandler);\n      observer.observe(customScrollParent);\n      return () => {\n        customScrollParent.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        observer.unobserve(customScrollParent);\n      };\n    } else {\n      window.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      window.addEventListener(\"resize\", scrollAndResizeEventHandler);\n      return () => {\n        window.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        window.removeEventListener(\"resize\", scrollAndResizeEventHandler);\n      };\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent]);\n  return callbackRef;\n}\nconst VirtuosoMockContext = React.createContext(void 0);\nconst VirtuosoGridMockContext = React.createContext(void 0);\nfunction identity(value) {\n  return value;\n}\nconst listComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const context = statefulStream(null);\n  const groupContent = statefulStream((index) => `Group ${index}`);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    TopItemListComponent: distinctProp(\"TopItemList\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    GroupComponent: distinctProp(\"Group\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\")\n  };\n});\nconst combinedSystem$2 = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, listComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder$1 = ({ height }) => /* @__PURE__ */ React.createElement(\"div\", { style: { height } });\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: \"none\" };\nconst ITEM_STYLE = { overflowAnchor: \"none\" };\nconst Items$1 = /* @__PURE__ */ React.memo(function VirtuosoItems({ showTopList = false }) {\n  const listState = useEmitterValue$2(\"listState\");\n  const sizeRanges = usePublisher$2(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher$2(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher$2(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue$2(\"itemContent\");\n  const context = useEmitterValue$2(\"context\");\n  const groupContent = useEmitterValue$2(\"groupContent\");\n  const trackItemSizes = useEmitterValue$2(\"trackItemSizes\");\n  const itemSize = useEmitterValue$2(\"itemSize\");\n  const log = useEmitterValue$2(\"log\");\n  const listGap = usePublisher$2(\"gap\");\n  const { callbackRef } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    listGap,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter$2(\"deviation\", (value) => {\n    if (deviation !== value) {\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue$2(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue$2(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder$1;\n  const ListComponent = useEmitterValue$2(\"ListComponent\");\n  const ItemComponent = useEmitterValue$2(\"ItemComponent\");\n  const GroupComponent = useEmitterValue$2(\"GroupComponent\");\n  const computeItemKey = useEmitterValue$2(\"computeItemKey\");\n  const isSeeking = useEmitterValue$2(\"isSeeking\");\n  const hasGroups2 = useEmitterValue$2(\"groupIndices\").length > 0;\n  const paddingTopAddition = useEmitterValue$2(\"paddingTopAddition\");\n  const scrolledToInitialItem = useEmitterValue$2(\"scrolledToInitialItem\");\n  const containerStyle = showTopList ? {} : {\n    boxSizing: \"border-box\",\n    paddingTop: listState.offsetTop + paddingTopAddition,\n    paddingBottom: listState.offsetBottom,\n    marginTop: deviation,\n    ...scrolledToInitialItem ? {} : { visibility: \"hidden\" }\n  };\n  if (!showTopList && listState.totalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      \"data-test-id\": showTopList ? \"virtuoso-top-item-list\" : \"virtuoso-item-list\"\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex;\n      const key = computeItemKey(index + listState.firstItemIndex, item.data, context);\n      if (isSeeking) {\n        return React.createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || \"item\",\n          ...item.type === \"group\" ? {} : { groupIndex: item.groupIndex }\n        });\n      }\n      if (item.type === \"group\") {\n        return React.createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            style: GROUP_STYLE\n          },\n          groupContent(item.index, context)\n        );\n      } else {\n        return React.createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            \"data-item-group-index\": item.groupIndex,\n            item: item.data,\n            style: ITEM_STYLE\n          },\n          hasGroups2 ? itemContent(item.index, item.groupIndex, item.data, context) : itemContent(item.index, item.data, context)\n        );\n      }\n    })\n  );\n});\nconst scrollerStyle = {\n  height: \"100%\",\n  outline: \"none\",\n  overflowY: \"auto\",\n  position: \"relative\",\n  WebkitOverflowScrolling: \"touch\"\n};\nconst viewportStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  top: 0\n};\nconst topItemListStyle = {\n  width: \"100%\",\n  position: positionStickyCssValue(),\n  top: 0,\n  zIndex: 1\n};\nfunction contextPropIfNotDomElement(element, context) {\n  if (typeof element === \"string\") {\n    return void 0;\n  }\n  return { context };\n}\nconst Header$1 = /* @__PURE__ */ React.memo(function VirtuosoHeader() {\n  const Header2 = useEmitterValue$2(\"HeaderComponent\");\n  const headerHeight = usePublisher$2(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer$1 = /* @__PURE__ */ React.memo(function VirtuosoFooter() {\n  const Footer2 = useEmitterValue$2(\"FooterComponent\");\n  const footerHeight = usePublisher$2(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nfunction buildScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"scrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const scrollerRefCallback = useEmitterValue2(\"scrollerRef\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    );\n    useEmitter2(\"scrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef,\n        style: { ...scrollerStyle, ...style },\n        \"data-test-id\": \"virtuoso-scroller\",\n        \"data-virtuoso-scroller\": true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nfunction buildWindowScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"windowScrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const totalListHeight = useEmitterValue2(\"totalListHeight\");\n    const deviation = useEmitterValue2(\"deviation\");\n    const customScrollParent = useEmitterValue2(\"customScrollParent\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    );\n    useIsomorphicLayoutEffect$1(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window;\n      return () => {\n        scrollerRef.current = null;\n      };\n    }, [scrollerRef, customScrollParent]);\n    useEmitter2(\"windowScrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        style: { position: \"relative\", ...style, ...totalListHeight !== 0 ? { height: totalListHeight + deviation } : {} },\n        \"data-virtuoso-scroller\": true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nconst Viewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher$2(\"viewportHeight\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher$2(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle, \"data-viewport-type\": \"window\" }, children);\n};\nconst TopItemListContainer = ({ children }) => {\n  const TopItemList = useEmitterValue$2(\"TopItemListComponent\");\n  const headerHeight = useEmitterValue$2(\"headerHeight\");\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` };\n  const context = useEmitterValue$2(\"context\");\n  return React.createElement(TopItemList || \"div\", { style, context }, children);\n};\nconst ListRoot = /* @__PURE__ */ React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const showTopList = useEmitterValue$2(\"topItemsIndexes\").length > 0;\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$2 : Scroller$2;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$2 : Viewport$2;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, showTopList && /* @__PURE__ */ React.createElement(TopItemListContainer, null, /* @__PURE__ */ React.createElement(Items$1, { showTopList: true })), /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header$1, null), /* @__PURE__ */ React.createElement(Items$1, null), /* @__PURE__ */ React.createElement(Footer$1, null)));\n});\nconst {\n  Component: List,\n  usePublisher: usePublisher$2,\n  useEmitterValue: useEmitterValue$2,\n  useEmitter: useEmitter$2\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$2,\n  {\n    required: {},\n    optional: {\n      restoreStateFrom: \"restoreStateFrom\",\n      context: \"context\",\n      followOutput: \"followOutput\",\n      itemContent: \"itemContent\",\n      groupContent: \"groupContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      groupCounts: \"groupCounts\",\n      topItemCount: \"topItemCount\",\n      firstItemIndex: \"firstItemIndex\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      autoscrollToBottom: \"autoscrollToBottom\",\n      getState: \"getState\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  ListRoot\n);\nconst Scroller$2 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst WindowScroller$2 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst Virtuoso = List;\nconst GroupedVirtuoso = List;\nconst INITIAL_GRID_STATE = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst PROBE_GRID_STATE = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst { round, ceil, floor, min, max } = Math;\nfunction buildProbeGridState(items) {\n  return {\n    ...PROBE_GRID_STATE,\n    items\n  };\n}\nfunction buildItems(startIndex, endIndex, data) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map(\n    (_, i) => ({ index: i + startIndex, data: data == null ? void 0 : data[i + startIndex] })\n  );\n}\nfunction gapComparator(prev, next) {\n  return prev && prev.column === next.column && prev.row === next.row;\n}\nfunction dimensionComparator(prev, next) {\n  return prev && prev.width === next.width && prev.height === next.height;\n}\nconst gridSystem = /* @__PURE__ */ system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState, footerHeight, headerHeight },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n    log\n  ]) => {\n    const totalCount = statefulStream(0);\n    const initialItemCount = statefulStream(0);\n    const gridState = statefulStream(INITIAL_GRID_STATE);\n    const viewportDimensions = statefulStream({ height: 0, width: 0 });\n    const itemDimensions = statefulStream({ height: 0, width: 0 });\n    const scrollToIndex = stream();\n    const scrollHeight = stream();\n    const deviation = statefulStream(0);\n    const data = statefulStream(void 0);\n    const gap = statefulStream({ row: 0, column: 0 });\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialItemCount, data),\n        filter(([didMount2, count]) => didMount2 && count !== 0),\n        map(([, count, data2]) => {\n          return {\n            items: buildItems(0, count - 1, data2),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0\n          };\n        })\n      ),\n      gridState\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(totalCount),\n          visibleRange,\n          duc(gap, gapComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(viewportDimensions, dimensionComparator),\n          data\n        ),\n        map(([totalCount2, [startOffset, endOffset], gap2, item, viewport, data2]) => {\n          const { row: rowGap, column: columnGap } = gap2;\n          const { height: itemHeight, width: itemWidth } = item;\n          const { width: viewportWidth } = viewport;\n          if (totalCount2 === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE;\n          }\n          if (itemWidth === 0) {\n            return buildProbeGridState(buildItems(0, 0, data2));\n          }\n          const perRow = itemsPerRow(viewportWidth, itemWidth, columnGap);\n          let startIndex = perRow * floor((startOffset + rowGap) / (itemHeight + rowGap));\n          let endIndex = perRow * ceil((endOffset + rowGap) / (itemHeight + rowGap)) - 1;\n          endIndex = min(totalCount2 - 1, max(endIndex, perRow - 1));\n          startIndex = min(endIndex, max(0, startIndex));\n          const items = buildItems(startIndex, endIndex, data2);\n          const { top, bottom } = gridLayout(viewport, gap2, item, items);\n          const rowCount = ceil(totalCount2 / perRow);\n          const totalHeight = rowCount * itemHeight + (rowCount - 1) * rowGap;\n          const offsetBottom = totalHeight - bottom;\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth };\n        })\n      ),\n      gridState\n    );\n    connect(\n      pipe(\n        data,\n        filter(isDefined),\n        map((data2) => data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        viewportDimensions,\n        map(({ height }) => height)\n      ),\n      viewportHeight\n    );\n    connect(\n      pipe(\n        combineLatest(viewportDimensions, itemDimensions, gridState, gap),\n        map(([viewportDimensions2, item, { items }, gap2]) => {\n          const { top, bottom } = gridLayout(viewportDimensions2, gap2, item, items);\n          return [top, bottom];\n        }),\n        distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    );\n    const hasScrolled = statefulStream(false);\n    connect(\n      pipe(\n        scrollTop,\n        withLatestFrom(hasScrolled),\n        map(([scrollTop2, hasScrolled2]) => {\n          return hasScrolled2 || scrollTop2 !== 0;\n        })\n      ),\n      hasScrolled\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, hasScrolled),\n        filter(([{ items }, totalCount2, hasScrolled2]) => hasScrolled2 && items[items.length - 1].index === totalCount2 - 1),\n        map(([, totalCount2]) => totalCount2 - 1),\n        distinctUntilChanged()\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0;\n        }),\n        mapTo(0),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => items.length > 0),\n        map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator)\n      )\n    );\n    connect(rangeChanged, scrollSeek.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(viewportDimensions, itemDimensions, totalCount, gap),\n        map(([location, viewport, item, totalCount2, gap2]) => {\n          const normalLocation = normalizeIndexLocation(location);\n          const { align, behavior, offset } = normalLocation;\n          let index = normalLocation.index;\n          if (index === \"LAST\") {\n            index = totalCount2 - 1;\n          }\n          index = max(0, index, min(totalCount2 - 1, index));\n          let top = itemTop(viewport, gap2, item, index);\n          if (align === \"end\") {\n            top = round(top - viewport.height + item.height);\n          } else if (align === \"center\") {\n            top = round(top - viewport.height / 2 + item.height / 2);\n          }\n          if (offset) {\n            top += offset;\n          }\n          return { top, behavior };\n        })\n      ),\n      scrollTo\n    );\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        gridState,\n        map((gridState2) => {\n          return gridState2.offsetBottom + gridState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(\n      pipe(\n        windowViewportRect,\n        map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    );\n    return {\n      data,\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      footerHeight,\n      headerHeight,\n      initialItemCount,\n      gap,\n      ...scrollSeek,\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n      ...log\n    };\n  },\n  tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem, loggerSystem)\n);\nfunction gridLayout(viewport, gap, item, items) {\n  const { height: itemHeight } = item;\n  if (itemHeight === void 0 || items.length === 0) {\n    return { top: 0, bottom: 0 };\n  }\n  const top = itemTop(viewport, gap, item, items[0].index);\n  const bottom = itemTop(viewport, gap, item, items[items.length - 1].index) + itemHeight;\n  return { top, bottom };\n}\nfunction itemTop(viewport, gap, item, index) {\n  const perRow = itemsPerRow(viewport.width, item.width, gap.column);\n  const rowCount = floor(index / perRow);\n  const top = rowCount * item.height + max(0, rowCount - 1) * gap.row;\n  return top > 0 ? top + gap.row : top;\n}\nfunction itemsPerRow(viewportWidth, itemWidth, gap) {\n  return max(1, floor((viewportWidth + gap) / (floor(itemWidth) + gap)));\n}\nconst gridComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const components = statefulStream({});\n  const context = statefulStream(null);\n  const itemClassName = statefulStream(\"virtuoso-grid-item\");\n  const listClassName = statefulStream(\"virtuoso-grid-list\");\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\", \"div\")\n  };\n});\nconst combinedSystem$1 = /* @__PURE__ */ system(([gridSystem2, gridComponentPropsSystem2]) => {\n  return { ...gridSystem2, ...gridComponentPropsSystem2 };\n}, tup(gridSystem, gridComponentPropsSystem));\nconst GridItems = /* @__PURE__ */ React.memo(function GridItems2() {\n  const gridState = useEmitterValue$1(\"gridState\");\n  const listClassName = useEmitterValue$1(\"listClassName\");\n  const itemClassName = useEmitterValue$1(\"itemClassName\");\n  const itemContent = useEmitterValue$1(\"itemContent\");\n  const computeItemKey = useEmitterValue$1(\"computeItemKey\");\n  const isSeeking = useEmitterValue$1(\"isSeeking\");\n  const scrollHeightCallback = usePublisher$1(\"scrollHeight\");\n  const ItemComponent = useEmitterValue$1(\"ItemComponent\");\n  const ListComponent = useEmitterValue$1(\"ListComponent\");\n  const ScrollSeekPlaceholder = useEmitterValue$1(\"ScrollSeekPlaceholder\");\n  const context = useEmitterValue$1(\"context\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const gridGap = usePublisher$1(\"gap\");\n  const log = useEmitterValue$1(\"log\");\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement.parentElement.scrollHeight;\n    scrollHeightCallback(scrollHeight);\n    const firstItem = el.firstChild;\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect());\n    }\n    gridGap({\n      row: resolveGapValue(\"row-gap\", getComputedStyle(el).rowGap, log),\n      column: resolveGapValue(\"column-gap\", getComputedStyle(el).columnGap, log)\n    });\n  });\n  return React.createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n      \"data-test-id\": \"virtuoso-item-list\"\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index, item.data, context);\n      return isSeeking ? React.createElement(ScrollSeekPlaceholder, {\n        key,\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        index: item.index,\n        height: gridState.itemHeight,\n        width: gridState.itemWidth\n      }) : React.createElement(\n        ItemComponent,\n        { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, \"data-index\": item.index, key },\n        itemContent(item.index, item.data, context)\n      );\n    })\n  );\n});\nconst Header = React.memo(function VirtuosoHeader2() {\n  const Header2 = useEmitterValue$1(\"HeaderComponent\");\n  const headerHeight = usePublisher$1(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer = React.memo(function VirtuosoGridFooter() {\n  const Footer2 = useEmitterValue$1(\"FooterComponent\");\n  const footerHeight = usePublisher$1(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nconst Viewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const viewportDimensions = usePublisher$1(\"viewportDimensions\");\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect());\n  });\n  React.useEffect(() => {\n    if (ctx) {\n      viewportDimensions({ height: ctx.viewportHeight, width: ctx.viewportWidth });\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n    }\n  }, [ctx, viewportDimensions, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef }, children);\n};\nconst WindowViewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const windowViewportRect = usePublisher$1(\"windowViewportRect\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: ctx.viewportWidth });\n    }\n  }, [ctx, windowViewportRect, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle }, children);\n};\nconst GridRoot = /* @__PURE__ */ React.memo(function GridRoot2({ ...props }) {\n  const useWindowScroll = useEmitterValue$1(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$1 : Scroller$1;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$1 : Viewport$1;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header, null), /* @__PURE__ */ React.createElement(GridItems, null), /* @__PURE__ */ React.createElement(Footer, null)));\n});\nconst {\n  Component: Grid,\n  usePublisher: usePublisher$1,\n  useEmitterValue: useEmitterValue$1,\n  useEmitter: useEmitter$1\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$1,\n  {\n    optional: {\n      context: \"context\",\n      totalCount: \"totalCount\",\n      overscan: \"overscan\",\n      itemContent: \"itemContent\",\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      listClassName: \"listClassName\",\n      itemClassName: \"itemClassName\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\"\n    },\n    methods: {\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\"\n    }\n  },\n  GridRoot\n);\nconst Scroller$1 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nconst WindowScroller$1 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nfunction resolveGapValue(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nconst VirtuosoGrid = Grid;\nconst tableComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => /* @__PURE__ */ React.createElement(\"td\", null, \"Item $\", index));\n  const context = statefulStream(null);\n  const fixedHeaderContent = statefulStream(null);\n  const fixedFooterContent = statefulStream(null);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    fixedFooterContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp(\"Table\", \"table\"),\n    TableHeadComponent: distinctProp(\"TableHead\", \"thead\"),\n    TableFooterComponent: distinctProp(\"TableFoot\", \"tfoot\"),\n    TableBodyComponent: distinctProp(\"TableBody\", \"tbody\"),\n    TableRowComponent: distinctProp(\"TableRow\", \"tr\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\"),\n    FillerRow: distinctProp(\"FillerRow\")\n  };\n});\nconst combinedSystem = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, tableComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height } }));\nconst DefaultFillerRow = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height, padding: 0, border: 0 } }));\nconst Items = /* @__PURE__ */ React.memo(function VirtuosoItems2() {\n  const listState = useEmitterValue(\"listState\");\n  const sizeRanges = usePublisher(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue(\"itemContent\");\n  const trackItemSizes = useEmitterValue(\"trackItemSizes\");\n  const itemSize = useEmitterValue(\"itemSize\");\n  const log = useEmitterValue(\"log\");\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    void 0,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter(\"deviation\", (value) => {\n    if (deviation !== value) {\n      ref.current.style.marginTop = `${value}px`;\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder;\n  const FillerRow = useEmitterValue(\"FillerRow\") || DefaultFillerRow;\n  const TableBodyComponent = useEmitterValue(\"TableBodyComponent\");\n  const TableRowComponent = useEmitterValue(\"TableRowComponent\");\n  const computeItemKey = useEmitterValue(\"computeItemKey\");\n  const isSeeking = useEmitterValue(\"isSeeking\");\n  const paddingTopAddition = useEmitterValue(\"paddingTopAddition\");\n  const firstItemIndex = useEmitterValue(\"firstItemIndex\");\n  const statefulTotalCount = useEmitterValue(\"statefulTotalCount\");\n  const context = useEmitterValue(\"context\");\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation;\n  const paddingBottom = listState.offsetBottom;\n  const paddingTopEl = paddingTop > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingTop, key: \"padding-top\", context }) : null;\n  const paddingBottomEl = paddingBottom > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingBottom, key: \"padding-bottom\", context }) : null;\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex;\n    const key = computeItemKey(index + firstItemIndex, item.data, context);\n    if (isSeeking) {\n      return React.createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || \"item\"\n      });\n    }\n    return React.createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        \"data-index\": index,\n        \"data-known-size\": item.size,\n        \"data-item-index\": item.index,\n        item: item.data,\n        style: { overflowAnchor: \"none\" }\n      },\n      itemContent(item.index, item.data, context)\n    );\n  });\n  return React.createElement(\n    TableBodyComponent,\n    { ref: callbackRef, \"data-test-id\": \"virtuoso-item-list\", ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  );\n});\nconst Viewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher(\"viewportHeight\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle, \"data-viewport-type\": \"window\" }, children);\n};\nconst TableRoot = /* @__PURE__ */ React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const fixedHeaderHeight = usePublisher(\"fixedHeaderHeight\");\n  const fixedFooterHeight = usePublisher(\"fixedFooterHeight\");\n  const fixedHeaderContent = useEmitterValue(\"fixedHeaderContent\");\n  const fixedFooterContent = useEmitterValue(\"fixedFooterContent\");\n  const context = useEmitterValue(\"context\");\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, \"height\")));\n  const tfootRef = useSize(compose(fixedFooterHeight, (el) => correctItemSize(el, \"height\")));\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport;\n  const TheTable = useEmitterValue(\"TableComponent\");\n  const TheTHead = useEmitterValue(\"TableHeadComponent\");\n  const TheTFoot = useEmitterValue(\"TableFooterComponent\");\n  const theHead = fixedHeaderContent ? React.createElement(\n    TheTHead,\n    {\n      key: \"TableHead\",\n      style: { zIndex: 1, position: \"sticky\", top: 0 },\n      ref: theadRef,\n      ...contextPropIfNotDomElement(TheTHead, context)\n    },\n    fixedHeaderContent()\n  ) : null;\n  const theFoot = fixedFooterContent ? React.createElement(\n    TheTFoot,\n    {\n      key: \"TableFoot\",\n      style: { zIndex: 1, position: \"sticky\", bottom: 0 },\n      ref: tfootRef,\n      ...contextPropIfNotDomElement(TheTFoot, context)\n    },\n    fixedFooterContent()\n  ) : null;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, React.createElement(TheTable, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) }, [\n    theHead,\n    /* @__PURE__ */ React.createElement(Items, { key: \"TableBody\" }),\n    theFoot\n  ])));\n});\nconst {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: \"context\",\n      followOutput: \"followOutput\",\n      firstItemIndex: \"firstItemIndex\",\n      itemContent: \"itemContent\",\n      fixedHeaderContent: \"fixedHeaderContent\",\n      fixedFooterContent: \"fixedFooterContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      topItemCount: \"topItemCount\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      groupCounts: \"groupCounts\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  TableRoot\n);\nconst Scroller = /* @__PURE__ */ buildScroller({ usePublisher, useEmitterValue, useEmitter });\nconst WindowScroller = /* @__PURE__ */ buildWindowScroller({ usePublisher, useEmitterValue, useEmitter });\nconst TableVirtuoso = Table;\nexport {\n  GroupedVirtuoso,\n  LogLevel,\n  TableVirtuoso,\n  Virtuoso,\n  VirtuosoGrid,\n  VirtuosoGridMockContext,\n  VirtuosoMockContext\n};\n","import React, { Ref, memo, useImperativeHandle, useMemo, useRef } from \"react\";\nimport { ListHandle, TestComponent } from \"./common\";\nimport { Virtuoso, VirtuosoHandle } from \"react-virtuoso\";\n\nexport const ReactVirtuosoList = memo(\n  ({\n    count,\n    Component,\n    handle,\n  }: {\n    count: number;\n    Component: TestComponent;\n    handle?: Ref<ListHandle>;\n  }) => {\n    const ref = useRef<VirtuosoHandle>(null);\n    useImperativeHandle(handle, () => ({\n      scrollToIndex: (i) => {\n        ref.current?.scrollToIndex(i);\n      },\n    }));\n\n    return (\n      <Virtuoso\n        ref={ref}\n        totalCount={count}\n        itemContent={useMemo(() => (i) => <Component key={i} index={i} />, [])}\n      />\n    );\n  }\n);\n"],"names":["PUBLISH","SUBSCRIBE","RESET","VALUE","compose","a","b","arg","thrush","proc","curry2to1","arg1","arg2","curry1to0","tap","tup","args","call","always","value","isDefined","noop","subscribe","emitter","subscription","publish","publisher","reset","getValue","depot","connect","handleNext","unsub","stream","subscriptions","action","splice","length","push","indexOf","slice","forEach","Error","statefulStream","initial","innerSubject","streamFromEmitter","stream2","statefulStreamFromEmitter","pipe","source","operators","project","subscriber","reduceRight","combineOperators","defaultComparator","previous","next","distinctUntilChanged","comparator","current","done","filter","predicate","map","mapTo","scan","scanner","skip","times","throttleTime","interval","currentValue","timeout","setTimeout","debounceTime","clearTimeout","withLatestFrom","sources","values","Array","called","pendingCall","allCalled","Math","pow","index","bit","prevCalled","call2","concat","merge","procs","joinProc","duc","combineLatest","emitters","system","constructor","dependencies","singleton","id","Symbol","useIsomorphicLayoutEffect$2","document","React","useLayoutEffect","useEffect","systemToComponent","systemSpec","map2","Root","requiredPropNames","Object","keys","required","optionalPropNames","optional","methodNames","methods","eventNames","events","Context","createContext","applyPropsToSystem","system2","props","requiredPropName","optionalPropName","buildEventHandlers","reduce","handlers","eventName","currentSubscription","cleanup","eventHandler","Component","forwardRef","propsWithChildren","ref","children","_objectWithoutProperties","_excluded","useState","singletons","Map","_init","id2","has","get","e","set","init","system22","useImperativeHandle","acc","methodName","buildMethods","createElement","Provider","obj","result","idx","len","prop","hasOwnProperty","omit","usePublisher","key","useCallback","useContext","useEmitterValue","setValue","useEmitter","useEmitter2","callback","useIsomorphicLayoutEffect$1","LogLevel","LogLevel2","CONSOLE_METHOD_MAP","loggerSystem","logLevel","log","label","message","level","_a","globalThis","window","console","useSizeWithElRef","enabled","useRef","callbackRef","_el","ResizeObserver","observer","useMemo","entries","element","target","offsetParent","elRef","observe","unobserve","useSize","useChangedListContentsSizes","itemSize","scrollContainerStateCallback","gap","customScrollParent","memoedCallback","el","ranges","field","results","i","child","item","dataset","parseInt","knownSize","parseFloat","size","ERROR","lastResult","endIndex","startIndex","getChangedChildSizes","scrollableElement","parentElement","windowScrolling","lastElementChild","scrollTop","pageYOffset","documentElement","scrollHeight","viewportHeight","offsetHeight","innerHeight","max","property","endsWith","WARN","resolveGapValue$1","getComputedStyle","rowGap","correctItemSize","dimension","round","getBoundingClientRect","approximatelyEqual","num1","num2","abs","useScrollTop","smoothScrollTargetReached","scrollerElement","scrollerRefCallback","scrollerRef","scrollTopTarget","timeoutRef","handler","ev","windowScroll","suppressFlushSync","ReactDOM","flushSync","localRef","addEventListener","passive","removeEventListener","scrollByCallback","location","scrollBy","scrollToCallback","scrollerElement2","isSmooth","behavior","maxScrollTop","top","ceil","min","scrollTo","domIOSystem","scrollContainerState","deviation","statefulScrollTop","headerHeight","fixedHeaderHeight","fixedFooterHeight","footerHeight","scrollingInProgress","scrollTop2","scrollHeight2","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","lastKey","lastValue","last","adjust","clone","deleteLast","find","findMaxKeyValue","Infinity","insert","rebalance","walkWithin","start","end","walk","isSingle","split","skew","rl","rlvl","rangesWithin","adjustedStart","arrayToRanges","items","parser","nextIndex","nextValue","findIndexOfClosestSmallerOrEqual","floor","match","join","findClosestSmallerOrEqual","recalcSystem","recalcInProgress","rangeIncludes","refRange","range","affectedGroupCount","offset","groupIndices","recognizedOffsetItems","groupIndex","indexComparator","itemIndex","offsetComparator","itemOffset","offsetPointParser","point","rangesWithinOffsets","tree","startOffset","endOffset","minStartIndex","startValue","endValue","findRange","createOffsetTree","prevOffsetTree","syncStart","sizeTree","offsetTree","prevIndex","prevSize","prevOffset","kv","startIndex2","indexOffset","aOffset","lastIndex","lastOffset","lastSize","sizeStateReducer","state","DEBUG","newSizeTree","groupSize","overlappingRanges","some","firstPassDone","shouldInsert","rangeStart","rangeEnd","rangeValue","insertRanges","newOffsetTree","groupOffsetTree","offsetOf","itemCount","originalIndexFromLocation","sizes","isGroupLocation","originalIndexFromItemIndex","hasGroups","groupOffset","SIZE_MAP","offsetWidth","sizeSystem","sizeRanges","totalCount","statefulTotalCount","unshiftWith","shiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","prevGroupIndices","prev","curr","indexes","groupIndices2","sizes2","gap2","_objectSpread","totalCount2","trackItemSizes","listRefresh","oldSizes","_","newSizes","changed","diff","val","prevGroupIndicesValue","log2","beforeUnshiftWith","unshiftWith2","groupedMode","initialRanges","defaultSize","firstGroupSize","prependedGroupItemsCount","theGroupIndex","groupItemCount","sizeTreeKV","shift","shiftWithOffset","shiftWith2","removedItemsCount","SUPPORTS_SCROLL_TO_OPTIONS","style","normalizeIndexLocation","align","scrollToIndexSystem","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","viewportHeight2","topListHeight2","headerHeight2","footerHeight2","fixedHeaderHeight2","fixedFooterHeight2","normalLocation","retry","listChanged","limit","UP","DOWN","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","offsetBottom","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","atTopThreshold","isScrolling","isScrollingBy","atTopThreshold2","atBottomState","_headerHeight","_footerHeight","atBottomThreshold2","atBottomBecause","scrollTopDelta","lastJumpDueToItemResize","jump","scrollDirection","direction","prevScrollTop","scrollVelocity","isScrolling2","propsReadySystem","propsReady","didMount","ready","skipFrames","frameCount","requestAnimationFrame","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","scrollScheduled","didMount2","scrolledToInitialItem2","defaultItemSize2","scrollScheduled2","initialTopMostItemIndex2","normalizeFollowOutput","follow","followOutputSystem","followOutput","autoscrollToBottom","pendingScrollHandle","scrollToBottom","followOutputBehavior","trapNextSizeIncrease","followOutput2","cancel","isAtBottom2","scrollingInProgress2","shouldFollow","behaviorFromFollowOutput","refreshed","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","tupleComparator","rangeComparator","TOP","BOTTOM","NONE","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","increaseViewportBy","visibleRange","listTop","listBottom","overscan2","deviation2","increaseViewportBy2","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","EMPTY_LIST_STATE","topItems","offsetTop","bottom","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","transposedItem","type","buildListState","lastItem","height","listStateSystem","groupedListSystem2","rangeTopListHeight","stateFlags","itemsRendered","listState","mount","recalcInProgress2","data2","dataChangeInProgress","topItemsIndexes2","firstItemIndex2","sizesValue","probeItemSet","getInitialTopMostItemIndexNumber","rangeStartIndex","rangeEndIndex","offsetPointRanges","maxIndex","endReached","count","startReached","rangeChanged","initialItemCountSystem","initialItemCount","includedGroupsCount","adjustedCount","from","scrollSeekSystem","isSeeking","scrollSeekConfiguration","config","speed","isSeeking2","exit","enter","velocity","change","scrollSeekRangeChanged","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","totalListHeight","listState2","simpleMemoize","func","isMobileSafari","test","navigator","userAgent","upwardScrollFixSystem","deviationOffset","prevItems","prevTotalCount","prevTotalHeight","lastJumpDueToItemResize2","totalHeight","newDev","amount","scrollDirection2","scrollByWith","deviationAmount","is","recalc","getItemOffset","defaultGroupSize","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","totalListHeight2","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","windowScrollTop","scrollTo2","defaultCalculateViewLocation","_ref","itemTop","itemTop2","itemBottom","viewportTop","viewportBottom","locationParams","rest","_excluded2","scrollIntoViewSystem","scrollIntoView","viewLocation","calculateViewLocation","_excluded3","actualIndex","stateLoadSystem","getState","restoreStateFrom","sizeArray","nextSize","locationFromSnapshot","snapshot","featureGroup1System","sizeRange","scrollSeek","initialScrollTopSystem2","windowScroller","logger","listSystem","domIO","stateLoad","_ref2","featureGroup1","flags","_excluded4","visibleHeight","fixedItemHeight","defaultItemHeight","WEBKIT_STICKY","STICKY","positionStickyCssValue","position","useWindowViewportRectRef","viewportInfo","calculateInfo","rect","visibleWidth","width","customScrollParentRect","deltaTop","scrollAndResizeEventHandler","VirtuosoMockContext","VirtuosoGridMockContext","identity","combinedSystem$2","listSystem2","propsSystem","itemContent","context","groupContent","components","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","components2","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","DefaultScrollSeekPlaceholder$1","GROUP_STYLE","zIndex","overflowAnchor","ITEM_STYLE","Items$1","memo","showTopList","useEmitterValue$2","usePublisher$2","windowScrollContainerStateCallback","_scrollContainerStateCallback","listGap","setDeviation","useEmitter$2","hasGroups2","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","visibility","contextPropIfNotDomElement","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header$1","Header2","Footer$1","Footer2","buildScroller","usePublisher2","useEmitterValue2","_ref3","_excluded5","tabIndex","buildWindowScroller","_ref4","_excluded6","Viewport$2","ctx","viewportRef","itemHeight","WindowViewport$2","TopItemListContainer","TopItemList","ListRoot","TheScroller","WindowScroller$2","Scroller$2","TheViewport","List","Virtuoso","INITIAL_GRID_STATE","itemWidth","PROBE_GRID_STATE","buildItems","gapComparator","column","row","dimensionComparator","gridSystem","gridState","viewportDimensions","itemDimensions","viewport","columnGap","viewportWidth","buildProbeGridState","perRow","itemsPerRow","gridLayout","rowCount","viewportDimensions2","hasScrolled","hasScrolled2","gridState2","combinedSystem$1","gridSystem2","gridComponentPropsSystem2","itemClassName","listClassName","GridItems","useEmitterValue$1","scrollHeightCallback","usePublisher$1","gridGap","listRef","firstItem","firstChild","resolveGapValue","className","Header","Footer","Viewport$1","WindowViewport$1","GridRoot","_ref5","assign","_objectDestructuringEmpty","WindowScroller$1","Scroller$1","Grid","useEmitter$1","ReactVirtuosoList","handle","_ref$current","jsx"],"mappings":"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","x_google_ignoreList":[0]}