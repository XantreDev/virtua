import{j as w}from"./jsx-runtime-c3d7f245.js";import{r as n}from"./index-c6dae603.js";import{f as W,u as Y,A as F,a as K,b as E,r,U as Z,c as Q,o as X,e as $,v as ee,V as te,d as oe,g as ne,p as se,n as re,S as le,j as ie,k as ae}from"./useRerender-0f8f5330.js";import{u as R,L as ce}from"./ListItem-cf523f73.js";import{r as ue}from"./index-eb008d06.js";const T=n.forwardRef(({children:c,overscan:h=4,initialItemSize:_,initialItemCount:L,shift:x,horizontal:k,reverse:q,cache:O,components:{Root:H=te,Item:N="div"}=oe,onScroll:j,onScrollStop:A,onRangeChange:S,...u},D)=>{const b=n.useMemo(()=>W(c),[c]),l=b.length,g=R(j),y=R(A),[t,I,s,i]=Y(()=>{const e=!!k,o=ne(l,_,L,O,!!q,!_);return[o,se(o,e),re(o,e),e]});l!==t._getItemsLength()&&t._update(F,[l,x]);const v=K(),[d,m]=t._getRange(),f=t._getScrollDirection(),U=t._getJumpCount(),C=t._getCorrectedScrollSize(),V=n.useRef(null),p=f!==le;E(()=>{const e=V[r],o=I._observeRoot(e),a=s._initRoot(e),M=t._subscribe(Z+Q,G=>{G?ue.flushSync(v):v()}),B=t._subscribe(X,()=>{g[r]&&g[r](t._getScrollOffset())});return()=>{o(),a(),M(),B()}},[]),E(()=>{const e=t._flushJump();e&&s._fixScrollJump(e)},[U]),n.useEffect(()=>{p||y[r]&&y[r]()},[p]),n.useEffect(()=>{S&&S(d,m)},[d,m]),n.useImperativeHandle(D,()=>({get cache(){return t._getCache()},get scrollOffset(){return t._getScrollOffset()},get scrollSize(){return t._getCorrectedScrollSize()},get viewportSize(){return t._getViewportSize()},scrollToIndex:s._scrollToIndex,scrollTo:s._scrollTo,scrollBy:s._scrollBy}),[]);const P=ae(d,h,f),J=ie(m,h,f,l),z=[];for(let e=P;e<=J;e++){const o=b[e],a=o.key;z.push(w(ce,{_resizer:I,_index:e,_offset:t._getItemOffset(e),_hide:t._isUnmeasuredItem(e),_element:N,_children:o,_isHorizontal:i},$(a)?a:"_"+e))}return w(H,{ref:V,width:i?C:void 0,height:i?void 0:C,scrolling:p,attrs:n.useMemo(()=>({...u,style:{overflow:"auto",display:i?"inline-block":"block",contain:"strict",width:"100%",height:"100%",...u.style}}),ee(u)),children:z})});try{T.displayName="VList",T.__docgenInfo={description:"Virtualized list component. See {@link VListProps} and {@link VListHandle}.",displayName:"VList",props:{children:{defaultValue:null,description:"Elements rendered by this component.",name:"children",required:!0,type:{name:"ReactNode"}},overscan:{defaultValue:{value:"4"},description:`Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.
@defaultValue 4`,name:"overscan",required:!1,type:{name:"number"}},initialItemSize:{defaultValue:null,description:`Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.

- If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.
- If set, you can opt out estimation and use the value as initial item size.`,name:"initialItemSize",required:!1,type:{name:"number"}},initialItemCount:{defaultValue:null,description:"If set, the specified amount of items will be mounted in the initial rendering regardless of the container size. This prop is mostly for SSR.",name:"initialItemCount",required:!1,type:{name:"number"}},shift:{defaultValue:null,description:"While true is set, scroll position will be maintained from the end not usual start when items are shifted/unshifted. It is useful for reverse infinite scrolling.",name:"shift",required:!1,type:{name:"boolean"}},horizontal:{defaultValue:null,description:"If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.",name:"horizontal",required:!1,type:{name:"boolean"}},reverse:{defaultValue:null,description:"If true, some styles will be adjusted to be suitable for bottom-to-top scrolling.",name:"reverse",required:!1,type:{name:"boolean"}},cache:{defaultValue:null,description:"You can restore cache by passing a {@link CacheSnapshot} on mount. This is useful when you want to restore scroll position after navigation. The snapshot can be obtained from {@link VListHandle.cache}.",name:"cache",required:!1,type:{name:"CacheSnapshot"}},components:{defaultValue:null,description:"Customized components for advanced usage.",name:"components",required:!1,type:{name:"{ Root?: ForwardRefExoticComponent<CustomViewportComponentProps & RefAttributes<any>>; Item?: CustomItemComponentOrElement; }"}},onScroll:{defaultValue:null,description:`Callback invoked whenever scroll offset changes.
@param offset Current scrollTop or scrollLeft.`,name:"onScroll",required:!1,type:{name:"(offset: number) => void"}},onScrollStop:{defaultValue:null,description:"Callback invoked when scrolling stops.",name:"onScrollStop",required:!1,type:{name:"() => void"}},onRangeChange:{defaultValue:null,description:"Callback invoked when visible items range changes.",name:"onRangeChange",required:!1,type:{name:"(startIndex: number, endIndex: number) => void"}}}}}catch{}export{T as V};
//# sourceMappingURL=VList-daa55aba.js.map
