"use strict";(self.webpackChunkvirtua=self.webpackChunkvirtua||[]).push([[560],{"./stories/advanced/With re-resizable.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _src__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react/List.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),re_resizable__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/re-resizable/lib/index.js");const __WEBPACK_DEFAULT_EXPORT__={component:_src__WEBPACK_IMPORTED_MODULE_2__.a},itemStyle={height:50,borderBottom:"solid 4px #ccc",background:"#fff"},enable={top:!1,bottom:!0,right:!1,left:!1,topRight:!1,topLeft:!1,bottomRight:!1,bottomLeft:!1},ResizableItem=({id,height,onResize})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(re_resizable__WEBPACK_IMPORTED_MODULE_1__.e,{size:{height,width:"100%"},enable,style:itemStyle,onResizeStop:(e,direction,ref,delta)=>{onResize(id,delta.height)}},id),Default={name:"With re-resizable",render:()=>{const[heights,setHeights]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>Array.from({length:1e3},(()=>50)))),onResize=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((id,height)=>{setHeights((p=>{const s=[...p];return s[id]+=height,s}))}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(re_resizable__WEBPACK_IMPORTED_MODULE_1__.e,{defaultSize:{width:400,height:400},style:{border:"solid 4px #ccc"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.a,{style:{width:"100%",height:"100%"}},Array.from({length:1e3},((_,i)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResizableItem,{key:i,id:i,height:heights[i],onResize})))))}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  name: "With re-resizable",\n  render: () => {\n    const [heights, setHeights] = useState(() => Array.from({\n      length: 1e3\n    }, () => 50));\n    const onResize = useCallback((id, height) => {\n      setHeights(p => {\n        const s = [...p];\n        s[id] += height;\n        return s;\n      });\n    }, []);\n    return /* @__PURE__ */React.createElement(Resizable, {\n      defaultSize: {\n        width: 400,\n        height: 400\n      },\n      style: {\n        border: "solid 4px #ccc"\n      }\n    }, /* @__PURE__ */React.createElement(List, {\n      style: {\n        width: "100%",\n        height: "100%"\n      }\n    }, Array.from({\n      length: 1e3\n    }, (_, i) => /* @__PURE__ */React.createElement(ResizableItem, {\n      key: i,\n      id: i,\n      height: heights[i],\n      onResize\n    }))));\n  }\n}',...Default.parameters?.docs?.source}}}}}]);